import * as React from "react";
import { observer } from "mobx-react";
import { action } from "mobx";
import { ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseComponent } from 'EPZEU.Core'
import { F504_ContinuingTradeActivity } from '../../Models/Fields/ModelsAutoGenerated'
import { withFieldRecordContainer, FieldContainerProps, withRecordContainer, ApplicationFormContextProviderProps } from 'EPZEU.CR.Domain';

interface F504_ContinuingTradeActivityProps extends ApplicationFormContextProviderProps, FieldContainerProps {
    isDisabledForCooperative?: boolean;
}

@observer class F504_ContinuingTradeActivityUIImpl extends EPZEUBaseComponent<F504_ContinuingTradeActivityProps, F504_ContinuingTradeActivity> {
    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);

        this.groupName = ObjectHelper.newGuid();
        this.handleChange = this.handleChange.bind(this);
    }

    renderEdit(): JSX.Element {
        let result: any = null;

        if (this.model) {
            result = (
                <>
                    <div className="row">
                        <div className="form-group col-12">
                            <div className="custom-control custom-radio">
                                <input disabled={this.props.isDisabledForCooperative} className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_continue'} name={this.groupName} value={'continue'} checked={this.model.continue} />
                                <label className={"custom-control-label"} htmlFor={this.groupName + '_continue'}>{this.getResource('CR_APP_CONTINUATION_ENTITY_EEIG_L')}</label>
                            </div>
                            <div className="custom-control custom-radio">
                                <input disabled={!this.props.isDisabledForCooperative} className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_restore'} name={this.groupName} value={'restore'} checked={this.model.restore} />
                                <label className={"custom-control-label"} htmlFor={this.groupName + '_restore'}>{this.getResource('CR_APP_RESUMPTION_ACTIVITY_CCS_ECS_L')}</label>
                            </div>
                        </div>
                    </div>
                </>);
        }

        return result;
    }

    renderDisplay(): JSX.Element {
        return <>{this.renderChosenWayOfRepresentation()}</>
    }

    private renderChosenWayOfRepresentation() {
        if (this.model.continue)
            return this.getResource('CR_APP_CONTINUATION_ENTITY_EEIG_L')
        else if (this.model.restore)
            return this.getResource('CR_APP_RESUMPTION_ACTIVITY_CCS_ECS_L')
        else
            return null;
    }

    @action private handleChange(e: any) {
        if (e.target.value == 'continue') {
            this.model.continue = true;
            this.model.restore = false;
        } else if (e.target.value == 'restore') {
            this.model.continue = false;
            this.model.restore = true;
        }
    }
}

export const F504_ContinuingTradeActivityFieldUI = withFieldRecordContainer(F504_ContinuingTradeActivityUIImpl, { fieldLabelTextKey: "CR_F_504_L" });