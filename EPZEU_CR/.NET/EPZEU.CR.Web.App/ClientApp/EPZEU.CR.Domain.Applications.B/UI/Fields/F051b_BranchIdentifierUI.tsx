import { attributesClassFormControlMaxL4, EPZEUBaseComponent } from 'EPZEU.Core';
import { ApplicationFormContextProviderProps, FieldContainerProps, isApplicationWithFieldsFormManager, ProcessStates, withApplicationFormContext, withFieldRecordContainer, ApplicationWithFieldsForm } from 'EPZEU.CR.Domain';
import * as React from "react";
import { F051b_BranchIdentifier } from '../../Models/Fields/ModelsAutoGenerated';

interface F051b_BranchIdentifierProps extends ApplicationFormContextProviderProps, FieldContainerProps {

}

class F051b_BranchIdentifierUI extends EPZEUBaseComponent<F051b_BranchIdentifierProps, F051b_BranchIdentifier> {
    constructor(props: F051b_BranchIdentifierProps) {
        super(props);

        this.onIdentifierChange = this.onIdentifierChange.bind(this);
    }


    renderEdit(): JSX.Element {
        return (<div className="row">
            <div className="form-group col-sm-6">
                {
                    isApplicationWithFieldsFormManager(this.props.applicationManager) && this.props.applicationManager.processState == ProcessStates.Preregistration
                        ? this.textBoxFor(m => m.text, attributesClassFormControlMaxL4, this.onIdentifierChange)
                        : <input className="form-control" value={this.model.text} disabled={true} />
                }
            </div>
        </div>)
    }

    renderDisplay(): JSX.Element {
        return (<div className="row">
            <div className="col-sm-6">
                {this.model.text ? this.model.text : null}
            </div>
        </div>);
    }

    onIdentifierChange(event: any, value: any) {
        (this.props.applicationManager.application as ApplicationWithFieldsForm).subUIC = value;
    }
}

export const F051b_BranchIdentifierFieldUI = withApplicationFormContext(withFieldRecordContainer(F051b_BranchIdentifierUI, {
    fieldLabelTextKey: "CR_F_51b_L",
    fieldLabelFor: (x: F051b_BranchIdentifier) => x.text
}));