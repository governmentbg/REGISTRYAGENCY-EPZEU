import { EPZEUBaseComponent, ValidationSummaryStrategy } from 'EPZEU.Core';
import { AddressUI, DomainModelHepler, FieldContainerProps, PersonTypes, PersonUI, SectionSubTitle, withFieldRecordContainer } from 'EPZEU.CR.Domain';
import * as React from "react";
import { F550a_ContactPerson550a } from '../../Models/Fields/ModelsAutoGenerated';

class F550a_ContactPerson550aUI extends EPZEUBaseComponent<FieldContainerProps, F550a_ContactPerson550a> {

    renderEdit(): JSX.Element {
        return (<>
            <PersonUI {...this.bind(m => m.person)} PersonType={PersonTypes.ContactPerson550aUI} />
            <AddressUI {...this.bind(m => m.address)} />
            <SectionSubTitle subTitleTextKey={"GL_PERMANENT_ADDRESS_BULGARIA_L"} />
            <AddressUI {...this.bind(m => m.permanentAddress)} disabledCountry={true}  />
        </>)
    }

    renderDisplay(): JSX.Element {
        return (<>
            <PersonUI {...this.bind(m => m.person)} PersonType={PersonTypes.ContactPerson550aUI} />
            <AddressUI {...this.bind(m => m.address)} />
            {DomainModelHepler.isObjectEmpty(this.model.permanentAddress) ? null :
                (<div>
                    <SectionSubTitle subTitleTextKey={"GL_PERMANENT_ADDRESS_BULGARIA_L"} isForPreview />
                </div>)}
            <AddressUI {...this.bind(m => m.permanentAddress)} />
        </>);
    }
}

export const F550a_ContactPerson550aFieldUI = withFieldRecordContainer(F550a_ContactPerson550aUI, {
    fieldLabelTextKey: "CR_F_550a_L",
    fieldLabelFor: (model: F550a_ContactPerson550a) => model.person,
    valSummaryStrategy: ValidationSummaryStrategy.excludeAllExcept,
    valSummaryRecursive: true,
    valSummaryPropNames: ["", "person."]
});