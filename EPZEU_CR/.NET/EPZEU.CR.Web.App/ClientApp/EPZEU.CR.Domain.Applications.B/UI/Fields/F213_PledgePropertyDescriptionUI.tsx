import { ObjectHelper } from "Cnsys.Core";
import { EPZEUBaseComponent, attributesClassFormControlTextRight } from 'EPZEU.Core';
import { FieldContainerProps, withFieldRecordContainer } from 'EPZEU.CR.Domain';
import { action } from "mobx";
import * as React from "react";
import { F213_PledgePropertyDescription } from '../../Models/Fields/ModelsAutoGenerated';
import { observer } from "mobx-react";

@observer class F213_PledgePropertyDescriptionUI extends EPZEUBaseComponent<FieldContainerProps, F213_PledgePropertyDescription> {
    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);

        this.groupName = ObjectHelper.newGuid();
        this.handleChange = this.handleChange.bind(this);
    }

    renderEdit(): JSX.Element {
        return <>
            <div className="row">
                <div className="form-group col">
                    <div className="custom-control custom-radio">
                        <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_corporateShare'} name={this.groupName} value={'corporateShare'} checked={this.model.corporateShare} />
                        <label className={"custom-control-label"} htmlFor={this.groupName + '_corporateShare'}>{this.getResource('CR_APP_CORPORATE_SHARE_L')}</label>
                    </div>
                    <div className="custom-control custom-radio">
                        <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_partOfCorporateShare'} name={this.groupName} value={'partOfCorporateShare'} checked={this.model.partOfCorporateShare} />
                        <label className={"custom-control-label"} htmlFor={this.groupName + '_partOfCorporateShare'}>{this.getResource('CR_APP_PART_CORPORATE_SHARE_L')}</label>
                    </div>
                </div>
            </div>
            <div className="row">
                <div className="col-12">
                    {this.labelFor(x => x.capital, "CR_APP_PART_CAPITAL_CORPORATE_SHARE_L")}
                </div>
            </div>
            <div className="row">
                <div className="form-group col-sm-6 col-lg-4">
                    <div className="form-row">
                        <div className="col">
                            {this.textBoxFor(x => x.capital, attributesClassFormControlTextRight, null)}
                        </div>
                        <div className="col-auto">
                            <div className="col-form-label">{this.getResource("GL_BGN_ABBRAVETION_L")}</div>
                        </div>
                    </div>
                </div>
            </div>
        </>
    }

    renderDisplay(): JSX.Element {
        return <div>
            {this.renderChosenWayOfRepresentation()}
            {!ObjectHelper.isArrayNullOrEmpty(this.model.capital)
                ? <div>{this.getResource('CR_APP_PART_CAPITAL_CORPORATE_SHARE_L') + ": " + this.model.capital + " " + this.getResource("GL_BGN_ABBRAVETION_L")}</div>
                : null}
        </div>
    }

    @action private handleChange(e: any) {
        if (e.target.value == 'corporateShare') {
            this.model.corporateShare = true;
            this.model.partOfCorporateShare = false;
        } else if (e.target.value == 'partOfCorporateShare') {
            this.model.corporateShare = false;
            this.model.partOfCorporateShare = true;
        }
    }

    private renderChosenWayOfRepresentation() {
        if (this.model.corporateShare)
            return <div>{this.getResource('CR_APP_CORPORATE_SHARE_L')}</div>
        else if (this.model.partOfCorporateShare)
            return <div>{this.getResource('CR_APP_PART_CORPORATE_SHARE_L')}</div>
        else
            return null;
    }
}

export const F213_PledgePropertyDescriptionFieldUI = withFieldRecordContainer(F213_PledgePropertyDescriptionUI, {
    fieldLabelTextKey: "CR_F_213_L",
    isMandatoryField: true
});