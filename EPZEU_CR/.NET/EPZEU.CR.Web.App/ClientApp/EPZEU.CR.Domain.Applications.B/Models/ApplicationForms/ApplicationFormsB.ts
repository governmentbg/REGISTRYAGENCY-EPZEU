import { TypeSystem } from 'Cnsys.Core'
import { ApplicationWithFieldsFormBase } from 'EPZEU.CR.Domain'
import { moduleContext } from '../../ModuleContext'
import { ApplicationFormBFieldsBase, B2Fields, B1Fields, B3Fields, B4Fields, B5Fields, B6Fields, B7Fields } from './ModelsAutoGenerated'

@TypeSystem.typeDecorator('ApplicationFormBBase', moduleContext.moduleName)
export class ApplicationFormBBase<T extends ApplicationFormBFieldsBase> extends ApplicationWithFieldsFormBase<T> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);
    }
}

@TypeSystem.typeDecorator('B1', moduleContext.moduleName)
export class B1 extends ApplicationFormBBase<B1Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new B1Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('B2', moduleContext.moduleName)
export class B2 extends ApplicationFormBBase<B2Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new B2Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('B3', moduleContext.moduleName)
export class B3 extends ApplicationFormBBase<B3Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new B3Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('B4', moduleContext.moduleName)
export class B4 extends ApplicationFormBBase<B4Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new B4Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('B5', moduleContext.moduleName)
export class B5 extends ApplicationFormBBase<B5Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new B5Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('B6', moduleContext.moduleName)
export class B6 extends ApplicationFormBBase<B6Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new B6Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('B7', moduleContext.moduleName)
export class B7 extends ApplicationFormBBase<B7Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new B7Fields(obj.fields);
        }
    }
}