import { ProcessStates, RecordOperations, RecordValidator, SimpleAddressValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F051_BranchSeat } from '../ModelsAutoGenerated';

export class F051_BranchSeatValidator extends RecordValidator<F051_BranchSeat> {

    public validateInternal(obj: F051_BranchSeat): boolean {

        //Ако заявлението е за промяна на обстоятелства и рекард операцията е Current - не се валидира.
        if (this.validationContext.processStates == ProcessStates.ForChange && obj.recordOperation == RecordOperations.Current) {
            obj.clearErrors(true);
            return true;
        }

        let isValid = super.validateInternal(obj);

        if (isValid) {

            //Празно променено поле не може да бъде записано
            if (!this.validationContext.isRecordNew(obj) && ValidatorHelpers.isObjectWithAddressEmpty(obj, "address")) {
                obj.clearErrors();
                obj.addError(this.getMessage('CR_APP_00021_E'));

                return false;
            }
        } else
            return false;

        let isValidAddress = new SimpleAddressValidator();
        isValidAddress.setValidationContext(this.getValidationContext());

        if (!isValidAddress.validate(obj.address)) {
            obj.address.clearErrors();
            obj.addError(this.getMessage('CR_APP_00005_E'));

            return false;
        }

        return isValid;
    }
}