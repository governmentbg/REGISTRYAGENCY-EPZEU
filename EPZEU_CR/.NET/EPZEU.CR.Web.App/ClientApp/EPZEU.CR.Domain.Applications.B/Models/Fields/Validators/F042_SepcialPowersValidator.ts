import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator } from 'EPZEU.CR.Domain';
import { F0420_SpecialPower, F042_SepcialPowers } from '../ModelsAutoGenerated';

export class F042_SepcialPowerValidator extends RecordValidator<F0420_SpecialPower> {
    constructor() {
        super();

        this.ruleFor(m => m.procuratorName).matches('^[А-Яа-яA-Za-z-\' ]+$').withMessage(this.getMessage('GL_INPUT_CORRECT_NAME_E'));
    }

    public validateInternal(obj: F0420_SpecialPower): boolean {
        let isValid = super.validateInternal(obj);

        if (this.validationContext.isRecordEmpty(obj)) {
            obj.addError(this.getMessage('CR_APP_00063_E'));

            isValid = false;
        }

        return isValid;
    }
}

export class F042_SepcialPowersValidator extends EPZEUBaseValidator<F042_SepcialPowers, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.sepcialPowersList).setCollectionValidator(new F042_SepcialPowerValidator()).when(m => m.sepcialPowersList.length > 1);
    }

    public validate(obj: F042_SepcialPowers): boolean {
        let isValid = super.validate(obj);

        if (obj.sepcialPowersList.length == 1)
            obj.clearErrors(true);

        if (obj.sepcialPowersList.length > 1) {

            for (var i = 0; i < obj.sepcialPowersList.length; i++) {
                if (this.validationContext.isRecordEmpty(obj.sepcialPowersList[i])
                    && obj.sepcialPowersList[i].recordOperation != RecordOperations.Erase) {

                    obj.sepcialPowersList[i].clearErrors(true);
                    obj.sepcialPowersList[i].addError(this.getMessage('CR_APP_00063_E'));// Попълнете данните за полето или го изтрийте.

                    isValid = false;
                }
            }
        }

        return isValid;
    }
}