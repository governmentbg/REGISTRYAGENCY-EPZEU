import { ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator, SubjectBaseValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F22001_DepozitarDistraint, F22002_DepozitarReminderDistraint, F2200_DepozitarDistraintDetails, F220_Depozitar } from '../ModelsAutoGenerated';

class F2200_DepozitarDistraintDetailsValidator extends RecordValidator<F2200_DepozitarDistraintDetails> {

    constructor() {
        super();

        this.ruleFor(m => m.subject).setValidator(new SubjectBaseValidator());
    }

    public validateInternal(obj: F2200_DepozitarDistraintDetails): boolean {
        let isValid = super.validateInternal(obj);

        if (obj.incomingDistraint && (ObjectHelper.isStringNullOrEmpty(obj.partValue) || (ObjectHelper.isStringNullOrEmpty(obj.partValue)))) {
            obj.addError('depozitarDistraintDetails', this.getMessage('CR_APP_00160_E')); //Попълнете брой дялове и стойност.

            isValid = false;
        }

        return isValid;
    }
}

class F22001_DepozitarDistraintValidator extends RecordValidator<F22001_DepozitarDistraint> {

    constructor() {
        super();

        this.ruleFor(m => m.subject).setValidator(new SubjectBaseValidator());
    }

    public validateInternal(obj: F22001_DepozitarDistraint): boolean {
        let isValid = super.validateInternal(obj);

        return isValid;
    }
}

class F22002_DepozitarReminderDistraintValidator extends RecordValidator<F22002_DepozitarReminderDistraint> {

    public validateInternal(obj: F22002_DepozitarReminderDistraint): boolean {
        let isValid = super.validateInternal(obj);

        if (obj.reminderDistraint && (ObjectHelper.isStringNullOrEmpty(obj.value) || (ObjectHelper.isStringNullOrEmpty(obj.currency)))) {

            obj.addError(this.getMessage('CR_APP_00159_E')); //Попълнете размер и парична единица.

            isValid = false;
        }

        return isValid;
    }
}

export class F220_DepozitarValidator extends EPZEUBaseValidator<F220_Depozitar, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.depozitarDistraintDetails).setValidator(new F2200_DepozitarDistraintDetailsValidator());
        this.ruleFor(m => m.depozitarDistraintList).setValidator(new F22001_DepozitarDistraintValidator());
        this.ruleFor(m => m.depozitarReminderDistraint).setValidator(new F22002_DepozitarReminderDistraintValidator());
    }

    public validate(obj: F220_Depozitar): boolean {
        let isValid = super.validate(obj);

        if (obj.depozitarDistraintList.length > 1) {
            for (var i = 0; i < obj.depozitarDistraintList.length; i++) {
                if (this.validationContext.isRecordEmpty(obj.depozitarDistraintList[i]) && obj.depozitarDistraintList[i].recordOperation != RecordOperations.Erase) {
                    obj.depozitarDistraintList[i].addError(this.getMessage('CR_APP_00063_E'));// Попълнете данните за полето или го изтрийте.

                    isValid = false;
                }
            }

            //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
            if (ValidatorHelpers.isExistDublicateIndents(obj.depozitarDistraintList, false, "CR_APP_00106_E")) // Има друг съдружник със същия идентификатор (ЕГН/ЛНЧ/ЕИК/БУЛСТАТ).
                isValid = false;
        }

        return isValid;
    }
}