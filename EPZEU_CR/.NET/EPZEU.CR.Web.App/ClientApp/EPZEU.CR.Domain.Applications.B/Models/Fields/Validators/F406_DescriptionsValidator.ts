import { ArrayHelper, ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F04060_DescriptionCount, F406_Descriptions } from '../ModelsAutoGenerated';
import { F4060_DescriptionValidator } from './F4060_DescriptionValidator';

class F04060_DescriptionCountValidator extends RecordValidator<F04060_DescriptionCount>{

    public validateInternal(obj: F04060_DescriptionCount): boolean {
        let isValid = super.validateInternal(obj);

        if (ObjectHelper.isStringNullOrEmpty(obj.text)) {
            obj.addError(this.getMessage('GL_INPUT_FIELD_MUST_E')); // Полето е задължително

            isValid = false;
        }

        return isValid;
    }
}

export class F406_DescriptionsValidator extends EPZEUBaseValidator<F406_Descriptions, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.descriptionCount).setValidator(new F04060_DescriptionCountValidator());
        this.ruleFor(m => m.description406List).setCollectionValidator(new F4060_DescriptionValidator());
    }

    public validate(obj: F406_Descriptions): boolean {
        let isValid = super.validate(obj);
        let valCtx = this.getValidationContext();

        if (ValidatorHelpers.hasMandatoryRecordsForChange(valCtx.processStates, obj.description406List, true)) {

            if (ArrayHelper.queryable.from(obj.description406List).where(m => (!ValidatorHelpers.isObjectWithPersonEmpty(m, "subject") && m.recordOperation != RecordOperations.Erase)).count() == 0) {
                obj.description406List[0].clearErrors(true);
                obj.description406List[0].addError(this.getMessage('CR_APP_00158_E')); // Задължително е попълването поне на един "Притежател на дружествен дял"!

                isValid = false;
            }
        }

        if (obj.description406List.length > 1) {
            for (var i = 0; i < obj.description406List.length; i++) {
                let record = obj.description406List[i];

                //Нова валидация за празно поле с автоматично избрана държава България
                if (ValidatorHelpers.isObjectWithPersonEmpty(record, 'subject')) {
                    record.clearErrors(true);
                    record.addError(this.getMessage('CR_APP_00063_E')); //Попълнете данните за полето или го изтрийте.

                    isValid = false;
                }
            }

            //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
            if (ValidatorHelpers.isExistDublicateIndents(obj.description406List, false, "CR_APP_00106_E")) // 
                isValid = false;
        }

        return isValid;
    }
}