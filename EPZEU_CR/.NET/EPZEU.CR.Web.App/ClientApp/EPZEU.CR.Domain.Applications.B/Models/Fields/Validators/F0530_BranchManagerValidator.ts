import { IndentTypes, PersonBaseValidator, RecordValidator, SimpleAddressValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F0530_BranchManager } from '../ModelsAutoGenerated';

export class F053_BranchManagerValidator extends RecordValidator<F0530_BranchManager> {

    constructor() {
        super();

        this.ruleFor(m => m.person).setValidator(new PersonBaseValidator());
    }

    public validateInternal(obj: F0530_BranchManager): boolean {
        let isValid = super.validateInternal(obj);

        obj.address.clearErrors();

        if (this.validationContext.isRecordEmpty(obj) || ValidatorHelpers.isEmptyBasePerson(obj.person.name, obj.person.indent, obj.person.countryID, obj.person.isForeignTrader)) {
            obj.person.addError(this.getMessage('GL_INPUT_NAME_ID_E'));
            isValid = false;

        } else if (isValid && obj.person.indentType == IndentTypes.BirthDate) {

            let isValidAddress = new SimpleAddressValidator();
            isValidAddress.setValidationContext(this.getValidationContext());

            if (!isValidAddress.validate(obj.address))
                isValid = false;
        }

        return isValid;
    }
}