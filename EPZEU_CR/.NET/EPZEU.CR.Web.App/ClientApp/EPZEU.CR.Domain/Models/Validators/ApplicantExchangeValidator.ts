import { ErrorLevels, ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { ApplicantExchange } from '../ModelsAutoGenerated';
import { FullAddressValidator } from './AddressValidator';
import { IApplicationFormValidationContext } from './ApplicationFormValidationContext';

export class ApplicantExchangeValidator extends EPZEUBaseValidator<ApplicantExchange, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.email).multiEmailAddresses().when(m => m.agree).withMessage(this.getMessage('GL_INPUT_VALID_EMAIL_E')).setErrorLevelStrict();
        this.ruleFor(m => m.address).setValidator(new FullAddressValidator());
    }

    public validate(obj: ApplicantExchange): boolean {
        let isValid = super.validate(obj);


        if (obj.agree && ObjectHelper.isStringNullOrEmpty(obj.email)) {
            obj.addError('email', this.getMessage('GL_INPUT_VALID_EMAIL_E'), ErrorLevels.Error);

            isValid = false;
        }

        obj.address.setAllErrorsLevel(ErrorLevels.Error);


        return isValid;
    }
}