import { ObjectHelper } from "Cnsys.Core";
import { AsyncUIProps, BaseProps, withAsyncFrame } from 'Cnsys.UI.React';
import { EPZEUBaseComponent, LegalForm, Nomenclatures } from 'EPZEU.Core';
import { observable } from 'mobx';
import { observer } from 'mobx-react';
import * as React from "react";
import { F001_UIC, ProcessStates } from '../../Models/ModelsAutoGenerated';
import { BulstatsDataService } from '../../Services/BulstatsDataService';
import { SectionTitleUI } from "../CommonInfoComponents";
import { ApplicationFormContextProviderProps, withApplicationFormContext } from "./ApplicationFormContextProviderUI";

interface EntityIdentificationUIProps extends BaseProps, ApplicationFormContextProviderProps, AsyncUIProps {
}

@observer export class EntityIdentificationUIImpl extends EPZEUBaseComponent<EntityIdentificationUIProps, F001_UIC> {
    @observable private _legalFormName: string
    @observable private _bulstatLegalFormName: string

    constructor(props: EntityIdentificationUIProps) {
        super(props)

        if (this.props.applicationManager.additionalData) {
            this.props.registerAsyncOperation(Nomenclatures.getLegalForm(this.props.applicationManager.additionalData.legalForm).then((legalForm: LegalForm) => {
                if (legalForm)
                    this._legalFormName = legalForm.name;
            }))
        }

        if (!ObjectHelper.isStringNullOrEmpty(this.model.text)) {
            this.props.registerAsyncOperation(new BulstatsDataService().getBulstatSummary(this.model.text).then((summary) => {
                if (summary)
                    this._bulstatLegalFormName = summary.legalForm;
            }))
        }
    }

    renderEdit(): JSX.Element {

        return <>
            <SectionTitleUI titleKey={'GL_IDENTIFICATION_L'} />
            <div className="field-container">
                <div className="row">
                    <div className="form-group col-12">
                        {
                            this.labelFor(m => m.text,
                                this.props.applicationManager.processState == ProcessStates.Preregistration
                                    ? 'CR_GL_COMPANY_ID_BULSTAT_L'
                                    : 'CR_GL_COMPANY_ID_L',
                                { className: 'field-title field-title--form' })}
                        <p className="field-text"> {this.model.text}</p>
                    </div>
                </div>
            </div>
            {this.model.bulstatDeed != null &&
                (!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.deed)
                    || !ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.year)
                    || !ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.courtCode))
                ? <div className="field-container">
                    <div className="row">
                        <div className="form-group col-12">
                            <label htmlFor={'companyCase'} className='field-title field-title--form' >{this.getResource('CR_GL_COMPANY_CASE_L')}</label>
                            <p className="field-text">{`${(!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.deed) ? this.model.bulstatDeed.deed : "")}/${(!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.year) ? this.model.bulstatDeed.year : "")} ${(!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.courtCode) ? this.model.bulstatDeed.courtCode : "")}`}</p>
                        </div>
                    </div>
                </div>
                : null}
            {this.props.applicationManager.additionalData &&
                <>
                    <div className="field-container">
                        <div className="row">
                            <div className="form-group col-12">
                                <label htmlFor={'companyName'} className='field-title field-title--form'>
                                    {this.getResource(this.props.applicationManager.processState == ProcessStates.Preregistration ? 'CR_GL_COMPANY_NAME_L' : 'CR_GL_vCOMPANY_NAME_TR_L')}</label>
                                <p id='companyName' className="field-text"> {this.props.applicationManager.additionalData.companyName ?
                                    this.props.applicationManager.additionalData.companyName : this.model.companyControl}</p>
                            </div>
                        </div>
                    </div>
                    {
                        !ObjectHelper.isStringNullOrEmpty(this._legalFormName)
                            ? <div className="field-container">
                                <div className="row">
                                    <div className="form-group col-12">
                                        <label htmlFor={'legalForm'} className='field-title field-title--form' >{this.getResource('GL_LEGAL_FORM_L')}</label>
                                        <p id='legalForm' className="field-text"> {this._legalFormName}</p>
                                    </div>
                                </div>
                            </div>
                            : null
                    }
                </>
            }
            {
                this.props.applicationManager.processState == ProcessStates.Preregistration
                    ? <div className="field-container">
                        <div className="row">
                            <div className="form-group col-12">
                                <label htmlFor={'bulstatLegalForm'} className='field-title field-title--form' >{this.getResource('GL_BULSTAT_LEGAL_FORM_L')}</label>
                                <p id='bulstatLegalForm' className="field-text"> {this._bulstatLegalFormName}</p>
                            </div>
                        </div>
                    </div>
                    : null
            }
        </>;
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <SectionTitleUI titleKey={'GL_IDENTIFICATION_L'} anchor={'entityIdentification'} isForPreview={true} />
                <div className="field-container">
                    <div className="record-container record-container--preview">
                        <h3 className="field-title field-title--preview">{this.getResource(this.props.applicationManager.processState == ProcessStates.Preregistration
                            ? 'CR_GL_COMPANY_ID_BULSTAT_L'
                            : 'CR_GL_COMPANY_ID_L')}</h3>
                        <p className="field-text"> {this.model.text}</p>
                    </div>
                </div>
                {this.model.bulstatDeed != null &&
                    (!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.deed)
                        || !ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.year)
                        || !ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.courtCode)) ?
                    <>
                        <div className="field-container">
                            <h3 className="field-title field-title--preview">{this.getResource("CR_GL_COMPANY_CASE_L")}</h3>
                            <div className="record-container record-container--preview">
                                <p className="field-text">{`${(!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.deed) ? this.model.bulstatDeed.deed : "")}/${(!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.year) ? this.model.bulstatDeed.year : "")} ${(!ObjectHelper.isStringNullOrEmpty(this.model.bulstatDeed.courtCode) ? this.model.bulstatDeed.courtCode : "")}`}</p>
                            </div>
                        </div>
                    </> : null}
                {(this.props.applicationManager.additionalData && this.props.applicationManager.additionalData.companyName || this.model.companyControl) &&
                    <div className="field-container">
                        <h3 className="field-title field-title--preview">{this.getResource("CR_GL_vCOMPANY_NAME_TR_L")}</h3>
                        <div className="record-container record-container--preview">
                            <p id='companyName' className="field-text"> {this.props.applicationManager.additionalData && this.props.applicationManager.additionalData.companyName ?
                                this.props.applicationManager.additionalData.companyName : this.model.companyControl}</p>
                        </div>
                    </div>
                }
                {
                    !ObjectHelper.isStringNullOrEmpty(this._legalFormName)
                        ? <div className="field-container">
                            <h3 className="field-title field-title--preview">{this.getResource("GL_LEGAL_FORM_L")}</h3>
                            <div className="record-container record-container--preview">
                                <p id='legalForm' className="field-text"> {this._legalFormName}</p>
                            </div>
                        </div>
                        : null
                }
                {
                    this.props.applicationManager.processState == ProcessStates.Preregistration
                        ? <div className="field-container">
                            <h3 className="field-title field-title--preview">{this.getResource("GL_BULSTAT_LEGAL_FORM_L")}</h3>
                            <div className="record-container record-container--preview">
                                <p className="field-text"> {this._bulstatLegalFormName}</p>
                            </div>
                        </div>
                        : null
                }
            </>);
    }
}

export const EntityIdentificationUI = withAsyncFrame(withApplicationFormContext(EntityIdentificationUIImpl));