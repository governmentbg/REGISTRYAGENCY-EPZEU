import { AsyncUIProps, withAsyncFrame } from "Cnsys.UI.React";
import { EPZEUBaseComponent, ValidationSummaryStrategy } from 'EPZEU.Core';
import { ListRecordsContainerProps, PersonTypes, PersonUI, withFieldSingleListRecordsContainer } from 'EPZEU.CR.Domain';
import { observer } from 'mobx-react';
import * as React from "react";
import { F702b0_TransformingNPO } from '../../Models/Fields/ModelsAutoGenerated';

interface F702b_TransformingNPOsProps extends ListRecordsContainerProps, AsyncUIProps {
    onUICChange?: (uic: string) => void;
}

@observer class F702b_TransformingNPOsUI extends EPZEUBaseComponent<F702b_TransformingNPOsProps, F702b0_TransformingNPO> {

    renderEdit(): JSX.Element {
        return <PersonUI {...this.bind(m => m.subject, 'transformingNPOs')} PersonType={PersonTypes.TransformingNPOs702b} onUICChange={this.props.onUICChange} />
    }

    renderDisplay(): JSX.Element {
        return <PersonUI {...this.bind(m => m.subject, 'transformingNPOs')} PersonType={PersonTypes.TransformingNPOs702b} onUICChange={this.props.onUICChange} />
    }
}

export const F702b_TransformingNPOFieldUI = withFieldSingleListRecordsContainer(withAsyncFrame(F702b_TransformingNPOsUI), F702b0_TransformingNPO, {
    listSelector: m => m.transformingNPOList,
    addButtonLabelKey: 'CR_APP_ADD_NPO_L',
    fieldLabelTextKey: "CR_F_702b_L",
    hasOnlyOneRecord: true,
    isMandatoryField: true,
    valSummaryStrategy: ValidationSummaryStrategy.excludeAllExcept,
    valSummaryRecursive: true,
    valSummaryPropNames: ["", "subject"]
});

export const F702b_TransformingNPOFieldListUI = withFieldSingleListRecordsContainer(withAsyncFrame(F702b_TransformingNPOsUI), F702b0_TransformingNPO, {
    listSelector: m => m.transformingNPOList,
    addButtonLabelKey: 'CR_APP_ADD_NPO_L',
    fieldLabelTextKey: "CR_F_702b_L",
    hasAtLeastOneRecord: true,
    isMandatoryField: true,
    valSummaryStrategy: ValidationSummaryStrategy.excludeAllExcept,
    valSummaryRecursive: true,
    valSummaryPropNames: ["", "subject"]
});