import { EPZEUBaseComponent, ValidationSummaryStrategy } from 'EPZEU.Core';
import { FieldContainerProps, PersonTypes, PersonUI, withFieldRecordContainer } from 'EPZEU.CR.Domain';
import { observer } from 'mobx-react';
import * as React from "react";
import { F601_TransferringEnterprise } from '../../Models/Fields/ModelsAutoGenerated';

interface F601_TransferringEnterpriseProps extends FieldContainerProps {
    onUICChange?: (uic: string) => void;
}

@observer class F601_TransferringEnterpriseUI extends EPZEUBaseComponent<F601_TransferringEnterpriseProps, F601_TransferringEnterprise> {

    renderEdit(): JSX.Element {
        return <PersonUI {...this.bind(m => m.subject, 'transferringEnterprise')} PersonType={PersonTypes.Acquisition} onUICChange={this.props.onUICChange} />
    }

    renderDisplay(): JSX.Element {
        return <PersonUI {...this.bind(m => m.subject, 'transferringEnterprise')} PersonType={PersonTypes.Acquisition} />
    }
}

export const F601_TransferringEnterpriseFieldUI = withFieldRecordContainer(F601_TransferringEnterpriseUI, {
    fieldLabelTextKey: "CR_F_601_L",
    isMandatoryField: true,
    valSummaryStrategy: ValidationSummaryStrategy.excludeAllExcept,
    valSummaryRecursive: true,
    valSummaryPropNames: ["", "subject"]
});