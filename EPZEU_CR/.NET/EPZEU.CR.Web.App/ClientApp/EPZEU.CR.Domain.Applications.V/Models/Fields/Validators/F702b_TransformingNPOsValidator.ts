import { BaseValidator } from 'Cnsys.Core';
import { IApplicationFormValidationContext, RecordValidator } from 'EPZEU.CR.Domain';
import { F702b0_TransformingNPO, F702b_TransformingNPOs } from '../ModelsAutoGenerated';
import { CompanyWithBGNameValidator } from './CompanyWithBGNameValidator';

export class F702b_TransformingNPOsValidator extends BaseValidator<F702b_TransformingNPOs, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.transformingNPOList).setCollectionValidator(new F702b0_TransformingNPOValidator());
    }

    public validate(obj: F702b_TransformingNPOs): boolean {
        let isValid = super.validate(obj);

        return isValid;
    }
}

export class F702b0_TransformingNPOValidator extends RecordValidator<F702b0_TransformingNPO> {
    constructor() {
        super();

        this.ruleFor(m => m.subject).setValidator(new CompanyWithBGNameValidator());
    }

    public validateInternal(obj: F702b0_TransformingNPO): boolean {
        let isValid = super.validateInternal(obj);

        // ako е попълнено само едно от двете (name или indent)
        if (isValid && ((!obj.subject.name && obj.subject.indent) || (obj.subject.name && !obj.subject.indent))) {
            obj.addError(this.getMessage('GL_INPUT_NAME_ID_E'));  //Попълнете име и идентификатор.
            isValid = false;
        }

        return isValid;
    }
}