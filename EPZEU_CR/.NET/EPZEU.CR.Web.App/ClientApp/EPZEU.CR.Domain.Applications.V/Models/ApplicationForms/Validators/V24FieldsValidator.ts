import { LegalForms } from 'EPZEU.CR.Core';
import { ApplicationFormFieldsBaseValidator, DeedsDataService } from 'EPZEU.CR.Domain';
import { F701_FormOfTransformingValidator } from '../../Fields/Validators/F701_FormOfTransformingValidator';
import { F702a_TransformingCompaniesValidator } from '../../Fields/Validators/F702a_TransformingCompaniesValidator';
import { F703_SuccessorsValidator } from '../../Fields/Validators/F703_SuccessorsValidator';
import { V24 } from '../ApplicationFormsV';
import { V24Fields } from '../ModelsAutoGenerated';

export class V24FieldsValidator extends ApplicationFormFieldsBaseValidator<V24Fields>{

    constructor() {
        super();

        this.ruleFor(m => m.formOfTransforming701).setValidator(new F701_FormOfTransformingValidator());
        this.ruleFor(m => m.transformingCompanys2).setValidator(new F702a_TransformingCompaniesValidator());
        this.ruleFor(m => m.successors703).setValidator(new F703_SuccessorsValidator());
    }

    public validate(obj: V24Fields): boolean {
        let isValid = super.validate(obj);
        let mainApp = (<V24>this.validationContext.applicationManager.application);

        if (obj.formOfTransforming701.fusion) {
            if (obj.transformingCompanys2.transformingCompany2List.length < 2) {
                obj.transformingCompanys2.clearErrors();
                obj.transformingCompanys2.addError(this.getMessage('CR_APP_00034_E')); //Задължително е попълването на поне две преобразуващи се дружества.
                isValid = false;
            }
        }

        if (!obj.successors703.successorList[0].subject.name) {
            obj.successors703.successorList[0].addError('subject', this.getMessage('CR_APP_00018_E')); // Полето "Фирма" е задължително!
            isValid = false;
        }

        if ((obj.successors703.successorList[0].getErrors().length == 0) && obj.formOfTransforming701.influx) {
            if (!obj.successors703.successorList[0].subject.indent) {
                obj.successors703.successorList[0].addError('subject', this.getMessage('GL_INPUT_VALID_ID_E')); // Въведете валиден идентификатор.
                isValid = false;
            } else {

                let report = mainApp.draftDeedInfoList.filter(d => d.uic == obj.successors703.successorList[0].subject.indent)[0];

                if (!report) {
                    obj.successors703.successorList[0].addError('subject', this.getMessage('CR_APP_00153_I')); // Правоприемник може да бъде само фирма с правна форма ООД (или ЕООД), АД (или ЕАД), КДА или ЕД.
                    isValid = false;
                } else if ((report.legalForm != LegalForms.AD) && (report.legalForm != LegalForms.EAD)
                    && (report.legalForm != LegalForms.OOD) && (report.legalForm != LegalForms.EOOD)
                    && (report.legalForm != LegalForms.ED) && (report.legalForm != LegalForms.KDA)) {
                    obj.successors703.successorList[0].addError('subject', this.getMessage('CR_APP_00153_I')); // Правоприемник може да бъде само фирма с правна форма ООД (или ЕООД), АД (или ЕАД), КДА или ЕД.
                    isValid = false;
                }
            }
        }

        return isValid;
    }
}