import { ArrayHelper } from 'Cnsys.Core';
import { LegalForms } from 'EPZEU.CR.Core';
import { ApplicationFormFieldsBaseValidator } from 'EPZEU.CR.Domain';
import { F701_FormOfTransformingValidator } from '../../Fields/Validators/F701_FormOfTransformingValidator';
import { F702_TransformingCompaniesValidator } from '../../Fields/Validators/F702_TransformingCompaniesValidator';
import { F703_SuccessorsValidator } from '../../Fields/Validators/F703_SuccessorsValidator';
import { V21 } from '../ApplicationFormsV';
import { V21Fields } from '../ModelsAutoGenerated';

export class V21FieldsValidator extends ApplicationFormFieldsBaseValidator<V21Fields>{

    constructor() {
        super();

        this.ruleFor(m => m.formOfTransforming701).setValidator(new F701_FormOfTransformingValidator());
        this.ruleFor(m => m.transformingCompanys).setValidator(new F702_TransformingCompaniesValidator());
        this.ruleFor(m => m.successors703).setValidator(new F703_SuccessorsValidator());
    }

    public validate(obj: V21Fields): boolean {
        let isValid = super.validate(obj);
        let mainApp = (<V21>this.validationContext.applicationManager.application);

        let hasAtLeastOneTransformingCompany = ArrayHelper.queryable.from(obj.transformingCompanys.transformingCompanyList).where(m => !this.validationContext.isRecordEmpty(m)).count() > 0;
        if (hasAtLeastOneTransformingCompany == false) {
            obj.transformingCompanys.clearErrors();
            if (obj.formOfTransforming701.influx || obj.formOfTransforming701.fusion)
                obj.transformingCompanys.addError(this.getMessage('CR_APP_00028_E')); // Задължително е попълването поне на едно "Преобразуващо се дружество"!
            else
                obj.transformingCompanys.addError(this.getMessage('CR_APP_00017_Е')); //Задължително е попълването на "Преобразуващо се дружество"!
            isValid = false;
        } else if (!obj.formOfTransforming701.fusion && !obj.formOfTransforming701.influx && obj.transformingCompanys.transformingCompanyList.length > 1) {
            obj.transformingCompanys.addError(this.getMessage('CR_APP_00098_E')); // За избраната "Форма на преобразуване" може да има само едно преобразуващо се дружество.
            isValid = false;
        }

        for (var i = 0; i < obj.transformingCompanys.transformingCompanyList.length; i++) {
            let company = obj.transformingCompanys.transformingCompanyList[i];
            if (this.validationContext.isRecordEmpty(company) && obj.transformingCompanys.transformingCompanyList.length > 1) {
                company.clearErrors();
                company.addError(this.getMessage('CR_APP_00063_E')); //Попълнете данните за полето или го изтрийте.
                isValid = false;
            }
        }

        if (!obj.formOfTransforming701.transferringProperty) {
            for (var i = 0; i < obj.successors703.successorList.length; i++) {
                let company = obj.successors703.successorList[i];
                if (!company.subject.name) {
                    company.addError('subject', this.getMessage('CR_APP_00018_E')); //Полето "Фирма" е задължително!
                    isValid = false;
                }
            }
        }

        let transformingCompany = obj.transformingCompanys.transformingCompanyList[0];
        if (transformingCompany.subject.indent && (obj.transformingCompanys.getErrors().length == 0) && obj.formOfTransforming701.conversionOfBulgarianEuropeanCompanyIntoBulgarianPLC) {
            // Ако в 701 сме избрали "преобразуване на ЕД със седалище в Р. България в АД със седалище в Р. България",
            // трябва да изберем дружество с правна форма "европейско дружество"

            let transformingCompanyReportFromCR = mainApp.draftDeedInfoList.filter(d => d.uic == transformingCompany.subject.indent)[0];

            if (!transformingCompanyReportFromCR) {
                transformingCompany.addError('subject', this.getMessage('CR_APP_INPUT_DATA_EUROPEAN_COMPANY_E')); // Попълнете данни за европейско дружество.
                isValid = false;
            } else {
                if (transformingCompanyReportFromCR.legalForm != LegalForms.ED) {
                    transformingCompany.addError('subject', this.getMessage('CR_APP_INPUT_DATA_EUROPEAN_COMPANY_E')); // Попълнете данни за европейско дружество.
                    isValid = false;
                }
            }
        }

        if (transformingCompany.subject.indent && (obj.transformingCompanys.getErrors().length == 0) && obj.formOfTransforming701.conversionOfBulgarianPLCIntoBulgarianEuropeanCompany) {
            // Ако в 701 сме избрали "преобразуване на АД със седалище в Р. България в ЕД със седалище в Р. България",
            // трябва да изберем дружество с правна форма АД (или ЕАД)

            let transformingCompanyReportFromCR = mainApp.draftDeedInfoList.filter(d => d.uic == transformingCompany.subject.indent)[0];

            if (!transformingCompanyReportFromCR) {
                transformingCompany.addError('subject', this.getMessage('CR_APP_00029_E')); // Участниците в преобразуването трябва да бъдат с правна форма АД (или ЕАД).
                isValid = false;
            } else {
                if ((transformingCompanyReportFromCR.legalForm != LegalForms.AD) && (transformingCompanyReportFromCR.legalForm != LegalForms.EAD)) {
                    transformingCompany.addError('subject', this.getMessage('CR_APP_00029_E')); // Участниците в преобразуването трябва да бъдат с правна форма АД (или ЕАД).
                    isValid = false;
                }
            }
        }

        let successor = obj.successors703.successorList[0];

        if (obj.formOfTransforming701.conversionOfBulgarianEuropeanCompanyIntoBulgarianPLC) {
            // Ако в 701 сме избрали "преобразуване на ЕД със седалище в Р. България в АД със седалище в Р. България",
            // трябва да изберем дружество с правна форма "европейско дружество"
            let successorReportFromCR: any;
            if (successor.subject.indent)
                successorReportFromCR = mainApp.draftDeedInfoList.filter(d => d.uic == successor.subject.indent)[0];

            if (!successorReportFromCR) {
                successor.clearErrors();
                successor.addError('subject', this.getMessage('CR_APP_INPUT_DATA_EUROPEAN_COMPANY_E')); // Попълнете данни за европейско дружество.
                isValid = false;
            } else {
                if (successorReportFromCR.legalForm != LegalForms.ED) {
                    successor.clearErrors();
                    successor.addError('subject', this.getMessage('CR_APP_INPUT_DATA_EUROPEAN_COMPANY_E')); // Попълнете данни за европейско дружество.
                    isValid = false;
                } else if ((successor.subject.name != transformingCompany.subject.name) || (successor.subject.indent != transformingCompany.subject.indent)) {
                    // Ако в 701 сме избрали "преобразуване на ЕД със седалище в Р. България в АД със седалище в Р. България",
                    // трябва да въведем едно и също дружество в 702 и 703.
                    successor.addError('subject', this.getMessage('CR_APP_00099_E')); // Правоприемникът не съвпада с праводателя.
                    isValid = false;
                }
            }
        }

        if (obj.formOfTransforming701.conversionOfBulgarianPLCIntoBulgarianEuropeanCompany) {
            // Ако в 701 сме избрали "преобразуване на АД със седалище в Р. България в ЕД със седалище в Р. България",
            // трябва да изберем дружество с правна форма АД (или ЕАД)
            let successorReportFromCR: any;
            if (successor.subject.indent)
                successorReportFromCR = mainApp.draftDeedInfoList.filter(d => d.uic == successor.subject.indent)[0];

            if (!successorReportFromCR) {
                successor.clearErrors();
                successor.addError('subject', this.getMessage('CR_APP_00029_E')); // Участниците в преобразуването трябва да бъдат с правна форма АД (или ЕАД).
                isValid = false;
            } else {
                if ((successorReportFromCR.legalForm != LegalForms.AD) && (successorReportFromCR.legalForm != LegalForms.EAD)) {
                    successor.clearErrors();
                    successor.addError('subject', this.getMessage('CR_APP_00029_E')); // Участниците в преобразуването трябва да бъдат с правна форма АД (или ЕАД).
                    isValid = false;
                } else if ((successor.subject.name != transformingCompany.subject.name) || (successor.subject.indent != transformingCompany.subject.indent)) {
                    // Ако в 701 сме избрали "преобразуване на АД със седалище в Р. България в ЕД със седалище в Р. България",
                    // трябва да въведем едно и също дружество в 702 и 703.
                    successor.addError('subject', this.getMessage('CR_APP_00099_E')); // Правоприемникът не съвпада с праводателя.
                    isValid = false;
                }
            }
        }

        if (successor.subject.indent && (successor.getErrors().length == 0) && obj.formOfTransforming701.transferringProperty) {
            let successorReportFromCR = mainApp.draftDeedInfoList.filter(d => d.uic == successor.subject.indent)[0];

            if (successorReportFromCR && (successorReportFromCR.legalForm != LegalForms.ET)) {
                successor.addError('subject', this.getMessage('CR_APP_00101_E')); // Правоприемникът може да бъде само фирма с правна форма "ЕТ".
                isValid = false;
            }
        }

        return isValid;
    }
}