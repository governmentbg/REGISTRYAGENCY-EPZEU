import { TypeSystem } from 'Cnsys.Core';
import { ApplicationWithFieldsFormBase } from 'EPZEU.CR.Domain';
import { moduleContext } from '../../ModuleContext';
import { ApplicationFormVFieldsBase, V1Fields, V21Fields, V22Fields, V23Fields, V24Fields, V25Fields, V26Fields, V31Fields, V32Fields, V33Fields, DraftDeedInfo } from './ModelsAutoGenerated';
import { observable } from 'mobx';

@TypeSystem.typeDecorator('ApplicationFormVBase', moduleContext.moduleName)
export class ApplicationFormVBase<T extends ApplicationFormVFieldsBase> extends ApplicationWithFieldsFormBase<T> {
     @observable private _draftDeedInfoList: DraftDeedInfo[] = null;
    
    @TypeSystem.propertyArrayDecorator(DraftDeedInfo ? DraftDeedInfo : moduleContext.moduleName + '.' + 'DraftDeedInfo')
    public set draftDeedInfoList(val: DraftDeedInfo[]){
        this._draftDeedInfoList = val;
    }
    
    public get draftDeedInfoList(): DraftDeedInfo[]{
        return this._draftDeedInfoList;
    }

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);
    }


}

@TypeSystem.typeDecorator('V1', moduleContext.moduleName)
export class V1 extends ApplicationFormVBase<V1Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V1Fields(obj.fields);
        }
    }
}
@TypeSystem.typeDecorator('V21', moduleContext.moduleName)
export class V21 extends ApplicationFormVBase<V21Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V21Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V22', moduleContext.moduleName)
export class V22 extends ApplicationFormVBase<V22Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V22Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V23', moduleContext.moduleName)
export class V23 extends ApplicationFormVBase<V23Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V23Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V24', moduleContext.moduleName)
export class V24 extends ApplicationFormVBase<V24Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V24Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V25', moduleContext.moduleName)
export class V25 extends ApplicationFormVBase<V25Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V25Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V26', moduleContext.moduleName)
export class V26 extends ApplicationFormVBase<V26Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V26Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V31', moduleContext.moduleName)
export class V31 extends ApplicationFormVBase<V31Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V31Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V32', moduleContext.moduleName)
export class V32 extends ApplicationFormVBase<V32Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V32Fields(obj.fields);
        }
    }
}

@TypeSystem.typeDecorator('V33', moduleContext.moduleName)
export class V33 extends ApplicationFormVBase<V33Fields> {

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);

        if (obj && obj.fields) {
            this.fields = new V33Fields(obj.fields);
        }
    }
}