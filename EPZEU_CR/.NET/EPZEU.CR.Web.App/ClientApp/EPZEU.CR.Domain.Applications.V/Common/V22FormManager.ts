import { Branch, IApplicationWithFieldsFormManager } from 'EPZEU.CR.Domain';
import { observable } from 'mobx';
import { V22 } from '../Models/ApplicationForms/ApplicationFormsV';
import { F7030_Successor } from '../Models/Fields/ModelsAutoGenerated';
import { ApplicationFormVBaseManager } from './ApplicationFormVBaseManager';

export interface IV22FormManager extends IApplicationWithFieldsFormManager {
    transformingCompanyBranches: Branch[];
    successors: F7030_Successor[];
}

export class V22FormManager extends ApplicationFormVBaseManager<V22> implements IV22FormManager {

    constructor() {
        super();

        this.onUICChange = this.onUICChange.bind(this);
        this.searchBranchesByUIC = this.searchBranchesByUIC.bind(this);
    }

    protected createApplication(obj: any): V22 {
        return new V22(obj);
    }

    /**Инициализира данните на заявленеито*/
    protected initApplicationData(): Promise<void> {
        let that = this;

        return super.initApplicationData().bind(this).then(() => {
            return super.searchBranchesByUIC(that.application.fields.transformingCompanys.transformingCompanyList[0].subject.indent).then((branches) => {
                that.transformingCompanyBranches = branches;
            });
        });
    }

    public get successors(): F7030_Successor[] {
        return this.application.fields.successors703.successorList;
    }

    public onUICChange(uic: string): Promise<void> {
        let that = this;

        return super.onUICChange(uic).then(() => {
            // поле 704 показва в dropdown клоновете на избраната фирма в поле 702.
            return super.searchBranchesByUIC(that.application.fields.transformingCompanys.transformingCompanyList[0].subject.indent).then((branches) => {
                that.transformingCompanyBranches = branches;
            });
        })
    }

    // поле 704 показва в dropdown клоновете на избраната фирма в поле 702.
    @observable public transformingCompanyBranches: Branch[] = []
}