import { MasterAssignmentSearchCriteria } from 'EPZEU.CR.Core';
import { isMoment, Moment } from 'moment';
import { AssignmentSummary } from '../Models/AssignmentSummary';
import { MasterAssignmentApplication } from '../Models/MasterAssignmentApplication';
import { UnassignedAssignmentSearchCriteria } from '../Models/UnassignedAssignmentSearchCriteria';
import { ApplicationInfo } from '../Models/ModelsAutoGenerated';
import { EPZEUBaseDataService } from 'EPZEU.Core';

export class AssignmentsService extends EPZEUBaseDataService {
    protected baseUrl(): string {
        return super.baseUrl() + "Assignments";
    }

    public getAssignment(incomingNumber: string, docNumber: number, outgoingDate: Moment): Promise<AssignmentSummary> {

        var outgoingDateStr = this.dateToStr(outgoingDate);
        docNumber = !docNumber ? 1 : docNumber;

        return this.get<AssignmentSummary>(`/${incomingNumber}-${docNumber}/${outgoingDateStr}/Assignment`, AssignmentSummary);
    }

    public getAssignmentMasterApplications(criteria: MasterAssignmentSearchCriteria): Promise<MasterAssignmentApplication[]> {
        return this.get<MasterAssignmentApplication[]>('AssignmentMasterApplications', MasterAssignmentApplication, criteria, null).then(function (result: MasterAssignmentApplication[]) {
            criteria.count = this.jqXHR.getResponseHeader('Count') ? this.jqXHR.getResponseHeader('Count') : 0;
            return result;
        });
    }

    public getDocumentsWithoutAppointment(criteria: UnassignedAssignmentSearchCriteria): Promise<ApplicationInfo[]> {
        return this.get<ApplicationInfo[]>('DocumentsWithoutAppointment', ApplicationInfo, criteria, null).then(function (result: ApplicationInfo[]) {
            criteria.count = this.jqXHR.getResponseHeader('Count') ? this.jqXHR.getResponseHeader('Count') : 0;
            return result;
        });
    }

    private dateToStr(outgoingDate:Moment):string {
        var outgoingDateStr = "";
        if (isMoment(outgoingDate))
            outgoingDateStr = outgoingDate.format('DD') + "." + outgoingDate.format('MM') + "." + outgoingDate.format('YYYY')

        return outgoingDateStr;
    }
}