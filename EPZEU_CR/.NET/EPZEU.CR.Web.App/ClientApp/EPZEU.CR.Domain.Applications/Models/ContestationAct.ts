

// Auto Generated Object
import * as moment from 'moment'
import { observable, computed } from 'mobx'
import { TypeSystem, BaseDataModel } from 'Cnsys.Core'
import { ApplicationFormBase, Person, Address, Passport, OutgoingNumber  } from 'EPZEU.CR.Domain'
import { moduleContext } from '../ModuleContext'
import { ActSenderType } from './ModelsAutoGenerated'


@TypeSystem.typeDecorator('ContestationAct', moduleContext.moduleName)
export class ContestationAct extends BaseDataModel {

    @observable private _incomingNumber: string = null;

    @TypeSystem.propertyDecorator('string')
    public set incomingNumber(val: string) {
        this._incomingNumber = val;
    }

    public get incomingNumber(): string {
        return this._incomingNumber;
    }


    @observable private _fromDate: moment.Moment = null;

    @TypeSystem.propertyDecorator('moment')
    public set fromDate(val: moment.Moment) {
        this._fromDate = val;
    }

    public get fromDate(): moment.Moment {
        return this._fromDate;
    }

    @observable private _courtCode: string = null;

    @TypeSystem.propertyDecorator('string')
    public set courtCode(val: string) {
        this._courtCode = val;
    }

    public get courtCode(): string {
        return this._courtCode;
    }

    @observable private _courtName: string = null;

    @TypeSystem.propertyDecorator('string')
    public set courtName(val: string) {
        this._courtName = val;
    }

    public get courtName(): string {
        return this._courtName;
    }

    @observable private _outgoingNumber: string = null;

    @TypeSystem.propertyDecorator('string')
    public set outgoingNumber(val: string) {
        this._outgoingNumber = val;
    }

    public get outgoingNumber(): string {
        return this._outgoingNumber;
    }


    @observable private _actNumber: string = null;

    @TypeSystem.propertyDecorator('string')
    public set actNumber(val: string) {
        this._actNumber = val;
    }

    public get actNumber(): string {
        return this._actNumber;
    }


    @observable private _senderType: ActSenderType = null;

    @TypeSystem.propertyDecorator(ActSenderType ? ActSenderType : moduleContext.moduleName + '.' + 'ActSenderType')
    public set senderType(val: ActSenderType) {
        this._senderType = val;
    }

    public get senderType(): ActSenderType {
        return this._senderType;
    }


    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);
    }
}