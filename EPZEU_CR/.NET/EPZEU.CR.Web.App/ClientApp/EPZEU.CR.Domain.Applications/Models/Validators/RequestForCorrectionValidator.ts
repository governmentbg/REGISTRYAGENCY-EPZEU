import { ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { RequestForCorrection } from '../ModelsAutoGenerated';

export class RequestForCorrectionValidator extends EPZEUBaseValidator<RequestForCorrection, IApplicationFormValidationContext> {
    constructor() {
        super();
    }

    //Системата не трябва да допуска подаването на искане ако не са намерени данни за Вх. No на заявление или Номер на вписване или Изх. No на отказа или ЕИК/БУЛСТАТ
    public validate(obj: RequestForCorrection): boolean {
        let isValid = super.validate(obj);

        if (ObjectHelper.isStringNullOrEmpty(obj.incomingNumber)
            && ObjectHelper.isStringNullOrEmpty(obj.regNumber)) {
            if (ObjectHelper.isStringNullOrEmpty(obj.incomingNumber)) {
                obj.addError('incomingNumber', this.getMessage('GL_INPUT_INCOMING_NO_E'));
                isValid = false;
            } else if (ObjectHelper.isStringNullOrEmpty(obj.regNumber)) {
                obj.addError('regNumber', this.getMessage('GL_INPUT_ENTRY_NO_E'));
                isValid = false;
            }
        }

        if (obj.subject == null || ObjectHelper.isStringNullOrEmpty(obj.subject.indent)) {
            obj.addError('subject', this.getMessage('GL_INPUT_FIELD_MUST_E'));
            isValid = false;
        }

        return isValid;
    }
}