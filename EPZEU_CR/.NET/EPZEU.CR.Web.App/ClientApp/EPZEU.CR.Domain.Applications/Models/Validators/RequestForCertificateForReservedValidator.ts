import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext } from 'EPZEU.CR.Domain';
import { RequestForCertificateForReservedCompany } from '../RequestForCertificateForReservedCompany';
import { CertificateForReservedCompany } from '../ModelsAutoGenerated';

export class RequestForCertificateForReservedValidator extends EPZEUBaseValidator<RequestForCertificateForReservedCompany, IApplicationFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.certificate).setValidator(new EmailForReceivingValidator());
    }

    public validate(obj: RequestForCertificateForReservedCompany): boolean {
        let isValid = super.validate(obj);

        return isValid;
    }
}

class EmailForReceivingValidator extends EPZEUBaseValidator<CertificateForReservedCompany, IApplicationFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.email).notEmpty().withMessage(this.getMessage('GL_INPUT_VALID_EMAIL_E')).setErrorLevelStrict();
        this.ruleFor(m => m.email).emailAddress().withMessage(this.getMessage('GL_INVALID_EMAIL_E')).setErrorLevelStrict();
    }

    public validate(obj: CertificateForReservedCompany): boolean {
        let isValid = super.validate(obj);

        return isValid;
    }
}