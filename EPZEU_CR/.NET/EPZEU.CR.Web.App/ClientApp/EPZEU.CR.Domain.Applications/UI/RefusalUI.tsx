import { EPZEUBaseComponent, ValidationSummary, ValidationSummaryStrategy } from 'EPZEU.Core';
import { AddressUI, FieldContainerProps, SectionTitleUI } from 'EPZEU.CR.Domain';
import * as React from "react";
import { Refusal } from '../Models/ModelsAutoGenerated';

const valSummaryPropNamesIncomingNo = ["incomingNo"];
const valSummaryPropNamesAddress = ['address'];

export class RefusalUI extends EPZEUBaseComponent<FieldContainerProps, Refusal> {

    renderEdit(): JSX.Element {
        return <>
            <SectionTitleUI anchor='address' titleKey='CR_APP_ADDRESS_FOR_SUMMONING_L' />
            <div className="field-container">
                <div className="interactive-container interactive-container--form">
                    <div className="interactive-container__content record-container">
                        <div className="row">
                            <div className="form-group col-12">
                                {this.labelFor(m => m.address, 'GL_PERMANENT_ADDRESS_L', { className: 'field-title field-title--form required-field' })}
                            </div>
                        </div>
                        <AddressUI {...this.bind(m => m.address)} />
                    </div>
                    <div className="interactive-container__controls">
                    </div>
                </div>
            </div>
            <SectionTitleUI titleKey={'CR_GL_COMPLAINT_L'} anchor="refusal" />
            <ValidationSummary {...this.props} propNames={valSummaryPropNamesIncomingNo} strategy={ValidationSummaryStrategy.excludeAllExcept} />
            <div className="field-container">
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.incomingNo, 'GL_INCOM_APPL_NO_REFUSAL_L', { className: 'field-title field-title--form' })}
                        <p className="field-text">{this.model.incomingNo}</p>
                    </div>
                </div>
            </div>
            <div className="field-container">
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.outgoingNo, 'CR_GL_OUTGOING_NO_OF_REFUSAL_L', { className: 'field-title field-title--form' })}
                        <p className="field-text">{this.model.outgoingNo}</p>
                    </div>
                </div>
            </div>
            <div className="field-container">
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.indent, 'CR_GL_COMPANY_ID_L', { className: 'field-title field-title--form' })}
                        <p className="field-text">{this.model.indent}</p>
                    </div>
                </div>
            </div>
            <div className="field-container">
                <div className="row">
                    <div className="form-group col-12">
                        {this.labelFor(m => m.name, 'CR_GL_COMPANY_NAME_L', { className: 'field-title field-title--form' })}
                        <p className="field-text">{this.model.name}</p>
                    </div>
                </div>
            </div>
        </>
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <SectionTitleUI anchor='address' titleKey='CR_APP_ADDRESS_FOR_SUMMONING_L' isForPreview={true} />
                <div className="field-container">
                    <div className="record-container record-container--preview">
                        <p className="field-text">
                            <AddressUI {...this.bind(m => m.address)} />
                        </p>
                    </div>
                </div>
                <ValidationSummary key="vsp1" {...this.props} includeErrorsRecursive={true} model={this.model.address} />
                <SectionTitleUI titleKey={'CR_GL_COMPLAINT_L'} anchor="refusal" isForPreview={true} />
                <div className="field-container">
                    <h3 className="field-title field-title--preview">{this.getResource('GL_INCOM_APPL_NO_REFUSAL_L')}</h3>
                    <p className="field-text">{this.model.incomingNo}</p>
                </div>
                <div className="field-container">
                    <h3 className="field-title field-title--preview">{this.getResource('CR_GL_OUTGOING_NO_OF_REFUSAL_L')}</h3>
                    <p className="field-text">{this.model.outgoingNo}</p>
                </div>
                <div className="field-container">
                    <h3 className="field-title field-title--preview">{this.getResource('CR_GL_COMPANY_ID_L')}</h3>
                    <p className="field-text">{this.model.indent}</p>
                </div>
                <div className="field-container">
                    <h3 className="field-title field-title--preview">{this.getResource('CR_GL_COMPANY_NAME_L')}</h3>
                    <p className="field-text">{this.model.name}</p>
                </div>
                <ValidationSummary key="vsp2" {...this.props} propNames={valSummaryPropNamesAddress} strategy={ValidationSummaryStrategy.includeAllExcept} includeErrorsRecursive={true} model={this.model} />
            </>
        );
    }
}