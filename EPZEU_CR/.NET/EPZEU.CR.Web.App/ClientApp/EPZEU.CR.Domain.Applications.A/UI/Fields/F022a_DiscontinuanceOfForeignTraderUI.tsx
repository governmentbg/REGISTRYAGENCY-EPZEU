import * as React from "react";
import { observer } from "mobx-react";
import { action } from "mobx";
import { ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseComponent } from 'EPZEU.Core'
import { F022a_DiscontinuanceOfForeignTrader } from '../../Models/Fields/ModelsAutoGenerated'
import { withFieldRecordContainer, FieldContainerProps } from 'EPZEU.CR.Domain';


enum DiscontinuanceOfForeignTraderType {
    finishingOfLiquidation,
    stopOfLiquidation,
    continuationOfActivity,
    beginOfLiquidation,
    stopForeignerTrader
}

@observer class F022a_DiscontinuanceOfForeignTraderUI extends EPZEUBaseComponent<FieldContainerProps, F022a_DiscontinuanceOfForeignTrader> {
    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);

        this.groupName = ObjectHelper.newGuid();
        this.handleChange = this.handleChange.bind(this);
    }

    renderEdit(): JSX.Element {

        return (
            <div className="row">
                <div className="form-group col-12">
                    {this.renderRadioButtons()}
                </div>
            </div>
        );
    }

    renderDisplay(): JSX.Element {

        const resourceKey = (this.model.finishingOfLiquidation && 'CR_APP_INITIATION_SUSPENSION_TERMINATION_LIQUIDATION_PROCEEDING_L')
            || (this.model.stopOfLiquidation && 'CR_APP_TERMINATION_LIQUIDATION_PROCESS_L')
            || (this.model.continuationOfActivity && 'CR_APP_RUSUMPTION_ACTIVITY_L')
            || (this.model.beginOfLiquidation && 'CR_APP_OPEN_LIQUIDATION_PROCEEDING_L')
            || (this.model.stopForeignerTrader && 'CR_APP_TERMINATION_FOREIGN_PERSON_L');

        return (<>
            {resourceKey && this.getResource(resourceKey)}</>);
    }

    renderRadioButtons() {
        var discontinuanceOfForeignTraderType = [DiscontinuanceOfForeignTraderType.finishingOfLiquidation,
        DiscontinuanceOfForeignTraderType.stopOfLiquidation,
        DiscontinuanceOfForeignTraderType.continuationOfActivity,
        DiscontinuanceOfForeignTraderType.beginOfLiquidation,
        DiscontinuanceOfForeignTraderType.stopForeignerTrader,
        ]

        return discontinuanceOfForeignTraderType.map(discontinuanceOfForeignTrader => {
            let discontinuanceOfForeignTraderType = DiscontinuanceOfForeignTraderType[discontinuanceOfForeignTrader];

            return <div className="custom-control custom-radio" key={discontinuanceOfForeignTraderType}>
                <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + "_" + discontinuanceOfForeignTraderType} name={this.groupName} value={discontinuanceOfForeignTraderType} checked={(this.model as any)[discontinuanceOfForeignTraderType]} />
                <label className={"custom-control-label"} htmlFor={this.groupName + "_" + discontinuanceOfForeignTraderType}>{this.radioButtonLabelResource(discontinuanceOfForeignTrader)}</label>
            </div>
        })
    }

    radioButtonLabelResource(discontinuanceOfForeignTraderType: DiscontinuanceOfForeignTraderType) {
        switch (discontinuanceOfForeignTraderType) {
            case DiscontinuanceOfForeignTraderType.finishingOfLiquidation:
                return this.getResource("CR_APP_INITIATION_SUSPENSION_TERMINATION_LIQUIDATION_PROCEEDING_L");
            case DiscontinuanceOfForeignTraderType.stopOfLiquidation:
                return this.getResource("CR_APP_TERMINATION_LIQUIDATION_PROCESS_L");
            case DiscontinuanceOfForeignTraderType.continuationOfActivity:
                return this.getResource("CR_APP_RUSUMPTION_ACTIVITY_L");
            case DiscontinuanceOfForeignTraderType.beginOfLiquidation:
                return this.getResource("CR_APP_OPEN_LIQUIDATION_PROCEEDING_L");
            case DiscontinuanceOfForeignTraderType.stopForeignerTrader:
                return this.getResource("CR_APP_TERMINATION_FOREIGN_PERSON_L");
            default: return "DiscontinuanceOfForeignTraderType_Key_NotFound"
        }
    }

    @action private handleChange(e: any) {
        for (var discontinuanceOfForeignTraderType in DiscontinuanceOfForeignTraderType) {
            (this.model as any)[DiscontinuanceOfForeignTraderType[discontinuanceOfForeignTraderType]] = false;
        }

        (this.model as any)[e.target.value] = true;
    }
}

export const F022a_DiscontinuanceOfForeignTraderFieldUI = withFieldRecordContainer(F022a_DiscontinuanceOfForeignTraderUI, { fieldLabelTextKey: "CR_F_22a_L" });