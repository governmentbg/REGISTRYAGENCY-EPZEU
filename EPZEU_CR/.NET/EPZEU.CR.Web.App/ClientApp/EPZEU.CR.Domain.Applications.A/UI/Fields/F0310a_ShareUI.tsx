import * as React from "react";
import { EPZEUBaseComponent, attributesClassFormControlMaxL13TextRight, ValidationSummaryStrategy } from 'EPZEU.Core'
import { F0310a_Share } from '../../Models/Fields/ModelsAutoGenerated'
import { withListRecordsContainer, ListRecordsContainerProps } from 'EPZEU.CR.Domain';

class F0310a_ShareUI extends EPZEUBaseComponent<ListRecordsContainerProps, F0310a_Share> {

    constructor(props?: ListRecordsContainerProps) {
        super(props);
    }

    renderEdit(): JSX.Element {
        return (
            <>
             <div className="row">
                    <div className="form-group col-md-12 col-lg-4">
                    {this.labelFor(m => m.type, 'GL_TYPE_L')}
                    {this.textBoxFor(m => m.type)}
                </div>
                    <div className="form-group col-sm-6 col-lg-4">
                    {this.labelFor(m => m.count, 'CR_GL_SHARES_NUMBER_L')}
                    {this.textBoxFor(m => m.count)}
                </div>
                    <div className="form-group col-sm-6 col-lg-4">
                    {this.labelFor(m => m.nominalValue, 'CR_GL_NOMINAL_VALUE_L')}
                    <div className="input-group">
                        {this.textBoxFor(x => x.nominalValue, attributesClassFormControlMaxL13TextRight, null, "GL_BGN_ABBRAVETION_L")}
                    </div>
                </div>
             </div>
            </>

            );
    }

    renderDisplay(): JSX.Element {
        return (<>
            {this.model.type && <>{this.getResource('GL_TYPE_L')}: {this.model.type} < br /> </>}
            {this.model.count && <>{this.getResource('CR_GL_SHARES_NUMBER_L')}: {this.model.count} < br /> </>}
            {this.model.nominalValue && <>{this.getResource('CR_GL_NOMINAL_VALUE_L')}: {this.model.nominalValue} {this.getResource('GL_BGN_ABBRAVETION_L')}< br /> </>}
        </>);
    }
}

export const F0310a_ShareFieldUI = withListRecordsContainer(F0310a_ShareUI, F0310a_Share, {
    addButtonLabelKey: "CR_APP_ADD_SHARE_L",
    hasAtLeastOneRecord: true,
    isMandatoryField: true,
    valSummaryStrategy: ValidationSummaryStrategy.excludeAllExcept,
    valSummaryRecursive: true,
    valSummaryPropNames: [""]
})