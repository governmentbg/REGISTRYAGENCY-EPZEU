import * as React from "react";
import { EPZEUBaseComponent, ValidationSummaryStrategy, Nomenclatures } from 'EPZEU.Core'
import { F0070_Manager } from '../../Models/Fields/ModelsAutoGenerated'
import { withFieldSingleListRecordsContainer, ListRecordsContainerProps, PersonUI, PersonTypes, Person } from 'EPZEU.CR.Domain';

class F0070_ManagerUI extends EPZEUBaseComponent<ListRecordsContainerProps, F0070_Manager> {

    renderEdit(): JSX.Element {
        return (
            <>
                <PersonUI {...this.bind(m => m.person)} PersonType={PersonTypes.Manager} />
            </>);
    }

    renderDisplay(): JSX.Element {
        return (
            <>
            <PersonUI {...this.bind(m => m.person) } PersonType={PersonTypes.Manager} />
            </>
        );
    }
}
export const F007_ManagersFieldUI = withFieldSingleListRecordsContainer(F0070_ManagerUI, F0070_Manager, {
    addButtonLabelKey: "CR_APP_ADD_MANAGER_L",
    listSelector: m => m.managersList,
    fieldLabelTextKey: "CR_F_7_L",
    hasAtLeastOneRecord: true,
    isMandatoryField: true,
    valSummaryStrategy: ValidationSummaryStrategy.excludeAllExcept,
    valSummaryRecursive: true,
    valSummaryPropNames: ["", "person."],
    newRecordCtor: () => {
        return Nomenclatures.getBGCountry().then(bgCountry => {
            var manager = new F0070_Manager();

            manager.person = new Person();
            manager.person.countryCode = bgCountry.code;
            manager.person.countryID = bgCountry.id;
            manager.person.countryName = bgCountry.name;

            return manager;
        })
    }
})
