import { EPZEUBaseComponent, attributesClassFormControlMaxL13TextRight, attributesClassFormControlMaxL13 } from 'EPZEU.Core';
import { FieldContainerProps, withFieldRecordContainer } from 'EPZEU.CR.Domain';
import { action } from "mobx";
import { observer } from "mobx-react";
import * as React from "react";
import { F031_Funds } from '../../Models/Fields/ModelsAutoGenerated';

interface F031_FundsProps extends FieldContainerProps {
    hasRadioButtonsCurrency?: boolean;
}

@observer class F031_FundsUI extends EPZEUBaseComponent<F031_FundsProps, F031_Funds> {

    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);

        this.handleChange = this.handleChange.bind(this);
        this.renderChoosenCurrency = this.renderChoosenCurrency.bind(this);
    }

    renderEdit(): JSX.Element {

        if (this.props.hasRadioButtonsCurrency) {
            return <div className="form-row">
                <div className="form-group col col-sm-6 col-md-4">
                    {this.textBoxFor(x => x.text, attributesClassFormControlMaxL13TextRight, null)}
                </div>
                <div className="form-group col-auto">
                    <div className="form-inline">
                        <div className="custom-control-inline custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_isInLeva31'} name={this.groupName} value={'isInLeva31'} checked={!this.model.isInEuro} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_isInLeva31'}>{this.getResource('GL_BGN_L')}</label>
                        </div>
                        <div className="custom-control-inline custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_isInEuro31'} name={this.groupName} value={'isInEuro31'} checked={this.model.isInEuro} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_isInEuro31'}>{this.getResource('CR_GL_EURO_L')}</label>
                        </div>
                    </div>
                </div>
            </div>
        }

        return <div className="form-row">
            <div className="form-group col col-sm-6 col-md-4">
                {this.textBoxFor(x => x.text, attributesClassFormControlMaxL13TextRight, null)}
            </div>
            <div className="col-auto">
                <div className="col-form-label">{this.getResource("GL_BGN_ABBRAVETION_L")}</div>
            </div>
        </div>
    }

    renderDisplay(): JSX.Element {
        return (<>
            {
                !this.props.hasRadioButtonsCurrency
                    ? this.model.text && <>{this.model.text} {this.getResource('GL_BGN_ABBRAVETION_L')}</>
                    : this.model.text && <>{this.model.text} {this.renderChoosenCurrency()}</>
            }
        </>);
    }

    private renderChoosenCurrency() {
        if (!this.model.isInEuro)
            return this.getResource('GL_BGN_L')
        else if (this.model.isInEuro)
            return this.getResource('CR_GL_EURO_L')
        else
            return null;
    }

    @action private handleChange(e: any) {
        this.model.isInEuro = e.target.value == 'isInEuro31';
    }
}

export const F031_FundsFieldUI = withFieldRecordContainer(F031_FundsUI, {
    fieldLabelTextKey: "CR_F_31_L"
});