import { BaseProps } from 'Cnsys.UI.React';
import { EPZEUBaseComponent, Nomenclatures, ValidationSummaryErrorsPreviewUI } from 'EPZEU.Core';
import { FieldContainerProps, MandateUIImpl, Person, withFieldContainer, withRecordContainer } from 'EPZEU.CR.Domain';
import * as React from "react";
import { F012d_ManagementBodies12d, F012d_ManagementBody12d, F012d_ManagementBody12dMandate } from '../../Models/Fields/ModelsAutoGenerated';
import { F012d_ManagementBody12dUI } from "./F012d_ManagementBody12dUI";
import { SectionSubTitle } from '../../../EPZEU.CR.Domain/UI';

class F012d_ManagementBodies12dUI extends EPZEUBaseComponent<FieldContainerProps, F012d_ManagementBodies12d> {

    renderEdit(): JSX.Element {
        return (
            <>
                <F_12d_MandateUI {...this.bind(m => m.managementBody12dMandate)} />     

                <SectionSubTitle subTitleTextKey={"CR_APP_PARTICIPANTS_MANAGEMENT_BODY_L"} />
                <F012d_ManagementBody12dUI {...this.bind(x => x.managementBodies12dList)} newRecordCtor={() => {
                    return Nomenclatures.getBGCountry().then(bgCountry => {
                        var managementBody = new F012d_ManagementBody12d();

                        managementBody.subject = new Person();
                        managementBody.subject.countryCode = bgCountry.code;
                        managementBody.subject.countryID = bgCountry.id;
                        managementBody.subject.countryName = bgCountry.name;

                        return managementBody;
                    })
                }} />
            </>);
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <F_12d_MandateUI {...this.bind(m => m.managementBody12dMandate)} />
                <F012d_ManagementBody12dUI {...this.bind(x => x.managementBodies12dList)} />
            </>
        );
    }
}

export class F_12d_MandateImplUI extends EPZEUBaseComponent<BaseProps, F012d_ManagementBody12dMandate> {

    renderEdit(): JSX.Element {

        return (<>
            <MandateUIImpl {...this.bind(m => m)} />
            <div className="row">
                <div className="form-group col">
                    {this.labelFor(m => m.managementAuthority, 'CR_APP_NAME_AUTHORITY_MANAGEMENT_L') }
                    {this.textBoxFor(m => m.managementAuthority)}
                </div>
            </div>
        </>)
    }

    renderDisplay(): JSX.Element {
        return (<>
            <MandateUIImpl {...this.bind(m => m)} />            
            {this.model && this.model.managementAuthority && <><div>{(this.getResource('CR_APP_NAME_AUTHORITY_MANAGEMENT_L') + ': ')}{this.model.managementAuthority}  </div></>}
        </>);
    }
}

const F_12d_MandateUI = withRecordContainer(F_12d_MandateImplUI);

export const F012d_ManagementBodies12dFieldUI = withFieldContainer(F012d_ManagementBodies12dUI, {
    fieldLabelTextKey: "CR_F_12d_L",
    isMandatoryField: true,
});
