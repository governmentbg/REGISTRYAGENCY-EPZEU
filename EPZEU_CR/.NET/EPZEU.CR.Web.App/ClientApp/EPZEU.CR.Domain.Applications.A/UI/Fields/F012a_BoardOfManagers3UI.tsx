import { EPZEUBaseComponent, Nomenclatures, ValidationSummary, ValidationSummaryErrorsPreviewUI, ValidationSummaryStrategy } from 'EPZEU.Core';
import { FieldContainerProps, MandateUI, Person, withFieldContainer, SectionSubTitle } from 'EPZEU.CR.Domain';
import * as React from "react";
import { F01211_BoardManager3, F012a_BoardOfManagers3 } from '../../Models/Fields/ModelsAutoGenerated';
import { F01211_BoardManager3UI } from "./F01211_BoardManager3UI";

interface F012a_BoardOfManagers3UIProps extends FieldContainerProps {

}

var fieldInfoKeysF01211 = ['CR_APP_00108_I'];
const valSummaryPropNames = ["", "subject."];

class F012a_BoardOfManagers3UI extends EPZEUBaseComponent<F012a_BoardOfManagers3UIProps, F012a_BoardOfManagers3> {

    renderEdit(): JSX.Element {
        return (
            <>
                <ValidationSummary {...this.props} propNames={valSummaryPropNames} strategy={ValidationSummaryStrategy.excludeAllExcept} includeErrorsRecursive={true} />
                <MandateUI {...this.bind(m => m.managerMandate3)} />
                {
                    <>
                        <SectionSubTitle subTitleTextKey={"CR_APP_MEMBERS_MANAGING_AUTHORITY_L"} />
                        <F01211_BoardManager3UI fieldInfoKeys={fieldInfoKeysF01211} {...this.bind(x => x.boardManagersList)} newRecordCtor={() => {
                            return Nomenclatures.getBGCountry().then(bgCountry => {
                                var boardManager3 = new F01211_BoardManager3();

                                boardManager3.subject = new Person();
                                boardManager3.subject.countryCode = bgCountry.code;
                                boardManager3.subject.countryID = bgCountry.id;
                                boardManager3.subject.countryName = bgCountry.name;

                                return boardManager3;
                            })
                        }} />
                    </>
                }
            </>);
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <MandateUI {...this.bind(m => m.managerMandate3)} />
                {
                    <F01211_BoardManager3UI {...this.bind(x => x.boardManagersList)} />
                }
                <ValidationSummaryErrorsPreviewUI errors={this.props.modelReference.getErrors()} />
            </>
        );
    }


}

export const F012a_BoardOfManagers3FieldUI = withFieldContainer(F012a_BoardOfManagers3UI, {
    fieldLabelTextKey: "CR_F_12a_L",
});
