import * as React from "react";
import { EPZEUBaseComponent, ValidationSummaryStrategy, Nomenclatures } from 'EPZEU.Core'
import { F01010_Representative101 } from '../../Models/Fields/ModelsAutoGenerated'
import { withFieldSingleListRecordsContainer, ListRecordsContainerProps, PersonUI, PersonTypes, SectionInfoUI, Person } from 'EPZEU.CR.Domain';

class F01010_Representative101UI extends EPZEUBaseComponent<ListRecordsContainerProps, F01010_Representative101> {

    renderEdit(): JSX.Element {
        return (
            <>               
                <PersonUI {...this.bind(m => m.subject)} PersonType={PersonTypes.Representative101} />
            </>);
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <PersonUI {...this.bind(m => m.subject)} PersonType={PersonTypes.Representative101} />
            </>
        );
    }
}
export const F0101_Representatives101FieldUI = withFieldSingleListRecordsContainer(F01010_Representative101UI, F01010_Representative101, {
    addButtonLabelKey: "CR_APP_ADD_REPRESENTATIVE_L",
    listSelector: m => m.representativeList,
    fieldLabelTextKey: "CR_F_10_L",
    hasAtLeastOneRecord: true,
    valSummaryStrategy: ValidationSummaryStrategy.excludeAllExcept,
    valSummaryRecursive: true,
    valSummaryPropNames: ["", "subject."],
    newRecordCtor: () => {
        return Nomenclatures.getBGCountry().then(bgCountry => {
            var rep = new F01010_Representative101();

            rep.subject = new Person();
            rep.subject.countryCode = bgCountry.code;
            rep.subject.countryID = bgCountry.id;
            rep.subject.countryName = bgCountry.name;

            return rep;
        })
    }
})