import * as React from "react";
import { EPZEUBaseComponent, attributesClassFormControlMaxL13TextRight } from 'EPZEU.Core'
import { observer } from "mobx-react";
import { action, observable } from "mobx";
import { F031b_MinimumAmount } from '../../Models/Fields/ModelsAutoGenerated'
import { withFieldRecordContainer, FieldContainerProps } from 'EPZEU.CR.Domain';


@observer class F031b_MinimumAmountUI extends EPZEUBaseComponent<FieldContainerProps, F031b_MinimumAmount> {

    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);
        this.handleChange = this.handleChange.bind(this);
        this.renderChoosenCurrency = this.renderChoosenCurrency.bind(this);
    }

    renderEdit(): JSX.Element {
        return (
            <div className="form-row">
                <div className="form-group col col-sm-6 col-md-4">
                    {this.textBoxFor(x => x.text, attributesClassFormControlMaxL13TextRight, null)}
                </div>
                <div className="form-group col-auto">
                    <div className="form-inline">
                        <div className="custom-control-inline custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_isInLeva31b'} name={this.groupName} value={'isInLeva31b'} checked={!this.model.isInEuro} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_isInLeva31b'}>{this.getResource('GL_BGN_L')}</label>
                        </div>

                        <div className="custom-control-inline custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_isInEuro31b'} name={this.groupName} value={'isInEuro31b'} checked={this.model.isInEuro} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_isInEuro31b'}>{this.getResource('CR_GL_EURO_L')}</label>
                        </div>
                    </div>
                </div>
            </div>
        )
    }

    renderDisplay(): JSX.Element {
        return (<>{this.model.text && <>{this.model.text} {this.renderChoosenCurrency()}</>}</>);
    }



    private renderChoosenCurrency() {
        if (!this.model.isInEuro) {
            return this.getResource('GL_BGN_L')
        } else if (this.model.isInEuro) {
            return this.getResource('CR_GL_EURO_L')
        } else {
            return null;
        }
    }


    @action private handleChange(e: any) {
        this.model.isInEuro = e.target.value == 'isInEuro31b';
        console.log(this.model.isInEuro);
    }
}

export const F031b_MinimumAmountFieldUI = withFieldRecordContainer(F031b_MinimumAmountUI, { fieldLabelTextKey: "CR_F_31b_L", isMandatoryField: true });