import { ObjectHelper } from "Cnsys.Core";
import { EPZEUBaseComponent } from 'EPZEU.Core';
import { AddressUI, ApplicationFormContextProviderProps, FieldContainerProps, ProcessStates, SectionSubTitle, withApplicationFormContext, withFieldRecordContainer } from 'EPZEU.CR.Domain';
import * as React from "react";
import { F027a_AddemptionOfTraderSeatChange } from '../../Models/Fields/ModelsAutoGenerated';

interface F027a_AddemptionOfTraderSeatChangeProps extends ApplicationFormContextProviderProps, FieldContainerProps {
    showCountrySectionHeader?: boolean;
}

class F027a_AddemptionOfTraderSeatChangeUI extends EPZEUBaseComponent<F027a_AddemptionOfTraderSeatChangeProps, F027a_AddemptionOfTraderSeatChange> {

    renderEdit(): JSX.Element {
        return <>
            <div className="row">
                <div className="form-group col-12">
                    <div className="custom-control custom-checkbox">
                        {this.checkBoxFor(x => x.isTraderAddempted, "CR_APP_DELETION_DUE_TO_RELOCATION_OFFICE_TO_ANOTHER_COUNTRY_L",
                            { className: "custom-control-input", disabled: this.props.applicationManager.processState == ProcessStates.ForChange && this.model.initialState.isTraderAddempted === true ? true : false })}
                    </div>
                </div>
            </div>
            <div className="row">
                <div className="form-group col-md-6">
                    {this.labelFor(m => m.foreignAuthority.competentAuthorityForRegistration, 'CR_GL_AUTHORITY_REGISTRATION_L')}
                    {this.textBoxFor(m => m.foreignAuthority.competentAuthorityForRegistration)}
                </div>
                <div className="form-group col-md-6">
                    {this.labelFor(m => m.foreignAuthority.registrationNumber, 'CR_GL_REGISTRATION_NUMBER_L')}
                    {this.textBoxFor(m => m.foreignAuthority.registrationNumber)}
                </div>
            </div>
            {this.props.showCountrySectionHeader ? <SectionSubTitle subTitleTextKey={'CR_APP_00022_L'} /> : null}
            <AddressUI {...this.bind(m => m.address)} excludeBGCountry />
        </>
    }

    renderDisplay(): JSX.Element {
        return (<>
            {
                this.model.isTraderAddempted
                    ? <>{this.getResource("CR_APP_DELETION_DUE_TO_RELOCATION_OFFICE_TO_ANOTHER_COUNTRY_L")}</>
                    : null}
            {
                this.model.isTraderAddempted ? <><br /></> : null
            }
            {
                !ObjectHelper.isStringNullOrEmpty(this.model.foreignAuthority.competentAuthorityForRegistration)
                    ? <>{this.getResource("CR_GL_AUTHORITY_REGISTRATION_L") + ": " + this.model.foreignAuthority.competentAuthorityForRegistration}</>
                    : null
            }
            {
                this.model.isTraderAddempted || !ObjectHelper.isStringNullOrEmpty(this.model.foreignAuthority.competentAuthorityForRegistration) ? <><br /></> : null
            }
            {
                !ObjectHelper.isStringNullOrEmpty(this.model.foreignAuthority.registrationNumber)
                    ? <>{this.getResource("CR_GL_REGISTRATION_NUMBER_L") + ": " + this.model.foreignAuthority.registrationNumber}</>
                    : null
            }
            {
                this.model.isTraderAddempted ||
                    !ObjectHelper.isStringNullOrEmpty(this.model.foreignAuthority.competentAuthorityForRegistration) ||
                    !ObjectHelper.isStringNullOrEmpty(this.model.foreignAuthority.registrationNumber)
                    ? <><br /></> : null
            }
            <AddressUI {...this.bind(m => m.address)} />
        </>);
    }
}

export const F027a_AddemptionOfTraderSeatChangeFieldUI = withFieldRecordContainer(withApplicationFormContext(F027a_AddemptionOfTraderSeatChangeUI), {
    fieldLabelTextKey: "CR_F_27a_L",
    fieldLabelFor: (model: F027a_AddemptionOfTraderSeatChange) => model.isTraderAddempted
});