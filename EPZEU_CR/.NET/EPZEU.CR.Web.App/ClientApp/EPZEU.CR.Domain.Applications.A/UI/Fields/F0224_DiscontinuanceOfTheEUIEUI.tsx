import * as React from "react";
import { action } from "mobx";
import { observer } from "mobx-react";
import { ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseComponent } from 'EPZEU.Core';
import { FieldContainerProps, withFieldRecordContainer } from 'EPZEU.CR.Domain';
import { F0224_DiscontinuanceOfTheEUIE } from '../../Models/Fields/ModelsAutoGenerated';

@observer class F0224_DiscontinuanceOfTheEUIEUI extends EPZEUBaseComponent<FieldContainerProps, F0224_DiscontinuanceOfTheEUIE> {
    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);

        this.groupName = ObjectHelper.newGuid();
        this.handleChange = this.handleChange.bind(this);
    }

    renderEdit(): JSX.Element {
        let result: any = null;

        if (this.model) {
            result = (<>
                <div className="row">
                    <div className="form-group col-12">
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_stopOfLiquidation'} name={this.groupName} value={'stopOfLiquidation'} checked={this.model.stopOfLiquidation} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_stopOfLiquidation'}>{this.getResource('CR_APP_TERMINATION_LIQUIDATION_PROCESS_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_continuationOfActivity'} name={this.groupName} value={'continuationOfActivity'} checked={this.model.continuationOfActivity} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_continuationOfActivity'}>{this.getResource('CR_APP_RUSUMPTION_ACTIVITY_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_beginOfLiquidation'} name={this.groupName} value={'beginOfLiquidation'} checked={this.model.beginOfLiquidation} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_beginOfLiquidation'}>{this.getResource('CR_APP_OPEN_LIQUIDATION_PROCEEDING_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_stopEUIE'} name={this.groupName} value={'stopEUIE'} checked={this.model.stopEUIE} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_stopEUIE'}>{this.getResource('CR_APP_TERMINATION_EOII_L')}</label>
                        </div>
                    </div>
                </div>
            </>);
        }

        return result;
    }

    renderDisplay(): JSX.Element {
        return <>{this.renderChosenWayOfRepresentation()}</>
    }

    private renderChosenWayOfRepresentation() {
        if (this.model.stopOfLiquidation) {
            return this.getResource('CR_APP_TERMINATION_LIQUIDATION_PROCESS_L')
        } else if (this.model.continuationOfActivity) {
            return this.getResource('CR_APP_RUSUMPTION_ACTIVITY_L')
        } else if (this.model.beginOfLiquidation) {
            return this.getResource('CR_APP_OPEN_LIQUIDATION_PROCEEDING_L')
        } else if (this.model.stopEUIE) {
            return this.getResource('CR_APP_TERMINATION_EOII_L')
        } else {
            return null;
        }
    }

    @action private handleChange(e: any) {
        if (e.target.value == 'stopOfLiquidation') {
            this.model.stopOfLiquidation = true;
            this.model.continuationOfActivity = false;
            this.model.beginOfLiquidation = false;
            this.model.stopEUIE = false;
        } else if (e.target.value == 'continuationOfActivity') {
            this.model.stopOfLiquidation = false;
            this.model.continuationOfActivity = true;
            this.model.beginOfLiquidation = false;
            this.model.stopEUIE = false;
        } else if (e.target.value == 'beginOfLiquidation') {
            this.model.stopOfLiquidation = false;
            this.model.continuationOfActivity = false;
            this.model.beginOfLiquidation = true;
            this.model.stopEUIE = false;
        } else if (e.target.value == 'stopEUIE') {
            this.model.stopOfLiquidation = false;
            this.model.continuationOfActivity = false;
            this.model.beginOfLiquidation = false;
            this.model.stopEUIE = true;
        }
    }
}

export const F0224_DiscontinuanceOfTheEUIEFieldUI = withFieldRecordContainer(F0224_DiscontinuanceOfTheEUIEUI, { fieldLabelTextKey: "CR_F_22g_L" });