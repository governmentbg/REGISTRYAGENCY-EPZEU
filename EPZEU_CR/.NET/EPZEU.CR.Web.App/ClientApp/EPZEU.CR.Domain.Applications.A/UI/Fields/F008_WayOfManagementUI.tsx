import * as React from "react";
import { observer } from "mobx-react";
import { action } from "mobx";
import { ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseComponent } from 'EPZEU.Core'
import { F008_WayOfManagement } from '../../Models/Fields/ModelsAutoGenerated'
import { withFieldRecordContainer, FieldContainerProps } from 'EPZEU.CR.Domain';

@observer class F008_WayOfManagementUI extends EPZEUBaseComponent<FieldContainerProps, F008_WayOfManagement> {
    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);

        this.groupName = ObjectHelper.newGuid();
        this.handleChange = this.handleChange.bind(this);
    }

    renderEdit(): JSX.Element {
        let result: any = null;

        if (this.model) {
            result = (
                <div className="row">
                    <div className="form-group col-12">
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_jointly'} name={this.groupName} value={'jointly'} checked={this.model.jointly} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_jointly'}>{this.getResource('GL_TOGETHER_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_severally'} name={this.groupName} value={'severally'} checked={this.model.severally} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_severally'}>{this.getResource('GL_SEPARATELY_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_otherWay'} name={this.groupName} value={'otherWay'} checked={this.model.otherWay} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_otherWay'}>{this.getResource('GL_OTHER_WAY_L')}</label>
                        </div>

                    </div>
                    {this.model.otherWay ?
                        <div className="form-group col-12">
                            {this.textAreaFor(x => x.text, null, 3)}
                        </div>
                            : null}
                </div>
                );
        }

        return result;
    }

    renderDisplay(): JSX.Element {
        return <>{this.renderChosenWayOfRepresentation()}</>
    }

    private renderChosenWayOfRepresentation() {
        if (this.model.jointly) {
            return this.getResource('GL_TOGETHER_L')
        } else if (this.model.severally) {
            return this.getResource('GL_SEPARATELY_L')
        } else if (this.model.otherWay) {
            return <>{this.getResource('GL_OTHER_WAY_L')}: {this.model.text}</>
        } else {
            return null;
        }
    }

    @action private handleChange(e: any) {
        if (e.target.value == 'jointly') {
            this.model.jointly = true;
            this.model.severally = false;
            this.model.otherWay = false;
        } else if (e.target.value == 'severally') {
            this.model.jointly = false;
            this.model.severally = true;
            this.model.otherWay = false;
        } else if (e.target.value == 'otherWay') {
            this.model.jointly = false;
            this.model.severally = false;
            this.model.otherWay = true;
        }

        this.model.text = "";
    }
}

export const F008_WayOfManagementFieldUI = withFieldRecordContainer(F008_WayOfManagementUI, { fieldLabelTextKey: "CR_F_8_L" });