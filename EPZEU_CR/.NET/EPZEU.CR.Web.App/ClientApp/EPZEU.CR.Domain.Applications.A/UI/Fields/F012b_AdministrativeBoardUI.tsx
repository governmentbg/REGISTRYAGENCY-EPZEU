import { EPZEUBaseComponent, Nomenclatures, ValidationSummary, ValidationSummaryErrorsPreviewUI, ValidationSummaryStrategy } from 'EPZEU.Core';
import { FieldContainerProps, MandateUI, Person, withFieldContainer } from 'EPZEU.CR.Domain';
import * as React from "react";
import { F01221_AdministrativeBody, F012b_AdministrativeBoard } from '../../Models/Fields/ModelsAutoGenerated';
import { F01221_AdministrativeBodyUI } from "./F01221_AdministrativeBodyUI";
import { SectionSubTitle } from 'EPZEU.CR.Domain/UI';

interface F012b_AdministrativeBoardProps extends FieldContainerProps {

}

const valSummaryPropNames = ["", "subject."];

class F012b_AdministrativeBoardUI extends EPZEUBaseComponent<F012b_AdministrativeBoardProps, F012b_AdministrativeBoard> {

    renderEdit(): JSX.Element {
        return (
            <>
                <ValidationSummary {...this.props} propNames={valSummaryPropNames} strategy={ValidationSummaryStrategy.excludeAllExcept} includeErrorsRecursive={true} />

                <MandateUI {...this.bind(m => m.administrativeBoardMandate)} />
                {
                    <>
                        <SectionSubTitle subTitleTextKey={"CR_APP_MEMBERS_ADMINISTRATIVE_AUTHORITY_L"} />
                        <F01221_AdministrativeBodyUI {...this.bind(x => x.administrativeBodyList)} newRecordCtor={() => {
                            return Nomenclatures.getBGCountry().then(bgCountry => {
                                var administrativeBody = new F01221_AdministrativeBody();

                                administrativeBody.subject = new Person();
                                administrativeBody.subject.countryCode = bgCountry.code;
                                administrativeBody.subject.countryID = bgCountry.id;
                                administrativeBody.subject.countryName = bgCountry.name;

                                return administrativeBody;
                            })
                        }} />
                    </>
                }
            </>);
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                <MandateUI {...this.bind(m => m.administrativeBoardMandate)} />
                {
                    <F01221_AdministrativeBodyUI {...this.bind(x => x.administrativeBodyList)} />
                }
                <ValidationSummaryErrorsPreviewUI errors={this.props.modelReference.getErrors()} />
            </>
        );
    }
}

export const F012b_AdministrativeBoardFieldUI = withFieldContainer(F012b_AdministrativeBoardUI, {
    fieldLabelTextKey: "CR_F_12b_L",
});
