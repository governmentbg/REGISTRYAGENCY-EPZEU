import * as React from "react";
import { observer } from "mobx-react";
import { action } from "mobx";
import { ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseComponent } from 'EPZEU.Core'
import { F0070_Manager, F070_WayOfEstablishingEuropeanCompany } from '../../Models/Fields/ModelsAutoGenerated'
import { withFieldRecordContainer, FieldContainerProps } from 'EPZEU.CR.Domain';

@observer class F070_WayOfEstablishingEuropeanCompanyUI extends EPZEUBaseComponent<FieldContainerProps, F070_WayOfEstablishingEuropeanCompany> {
    private groupName: string;

    constructor(props?: FieldContainerProps) {
        super(props);

        this.groupName = ObjectHelper.newGuid();
        this.handleChange = this.handleChange.bind(this);
    }

    renderEdit(): JSX.Element {
        let result: any = null;

        if (this.model) {
            result = (
                <>
                    <div className="row">
                    <div className="form-group col-12">
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_fromAcquisition'} name={this.groupName} value={'fromAcquisition'} checked={this.model.fromAcquisition} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_fromAcquisition'}>{this.getResource('CR_APP_00030_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_fromMerge'} name={this.groupName} value={'fromMerge'} checked={this.model.fromMerge} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_fromMerge'}>{this.getResource('CR_APP_00031_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_fromHolding'} name={this.groupName} value={'fromHolding'} checked={this.model.fromHolding} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_fromHolding'}>{this.getResource('CR_APP_00032_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_fromSubsidiary'} name={this.groupName} value={'fromSubsidiary'} checked={this.model.fromSubsidiary} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_fromSubsidiary'}>{this.getResource('CR_APP_00033_L')}</label>
                        </div>
                        <div className="custom-control custom-radio">
                            <input className={"custom-control-input"} type="radio" onChange={this.handleChange} id={this.groupName + '_fromConvert'} name={this.groupName} value={'fromConvert'} checked={this.model.fromConvert} />
                            <label className={"custom-control-label"} htmlFor={this.groupName + '_fromConvert'}>{this.getResource('CR_APP_00034_L')}</label>
                        </div>

                    </div>
                    </div>
                </>);
        }

        return result;
    }

    renderDisplay(): JSX.Element {
        return <>{this.renderChosenWayOfRepresentation()}</>
    }

    private renderChosenWayOfRepresentation() {
        if (this.model.fromAcquisition) {
            return this.getResource('CR_APP_00030_L')
        } else if (this.model.fromMerge) {
            return this.getResource('CR_APP_00031_L')
        } else if (this.model.fromHolding) {
            return this.getResource('CR_APP_00032_L')
        } else if (this.model.fromSubsidiary) {
            return this.getResource('CR_APP_00033_L')
        } else if (this.model.fromConvert) {
            return this.getResource('CR_APP_00034_L')
        } else {
            return null;
        }
    }

    @action private handleChange(e:any) {
        if (e.target.value == 'fromAcquisition') {
            this.model.fromAcquisition = true;
            this.model.fromMerge = false;
            this.model.fromHolding = false;
            this.model.fromSubsidiary = false;
            this.model.fromConvert = false;
        } else if (e.target.value == 'fromMerge') {
            this.model.fromAcquisition = false;
            this.model.fromMerge = true;
            this.model.fromHolding = false;
            this.model.fromSubsidiary = false;
            this.model.fromConvert = false;
        } else if (e.target.value == 'fromHolding') {
            this.model.fromAcquisition = false;
            this.model.fromMerge = false;
            this.model.fromHolding = true;
            this.model.fromSubsidiary = false;
            this.model.fromConvert = false;
        } else if (e.target.value == 'fromSubsidiary') {
            this.model.fromAcquisition = false;
            this.model.fromMerge = false;
            this.model.fromHolding = false;
            this.model.fromSubsidiary = true;
            this.model.fromConvert = false;
        } else if (e.target.value == 'fromConvert') {
            this.model.fromAcquisition = false;
            this.model.fromMerge = false;
            this.model.fromHolding = false;
            this.model.fromSubsidiary = false;
            this.model.fromConvert = true;
        }
    }
}

export const F070_WayOfEstablishingEuropeanCompanyFieldUI = withFieldRecordContainer(F070_WayOfEstablishingEuropeanCompanyUI, { fieldLabelTextKey: "CR_F_70_L" });