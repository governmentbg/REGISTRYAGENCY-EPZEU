import { EPZEUBaseComponent, Nomenclatures, ValidationSummary, ValidationSummaryErrorsPreviewUI, ValidationSummaryStrategy  } from 'EPZEU.Core';
import { FieldContainerProps, ListRecordsContainerProps, MandateUI, withFieldContainer, Person  } from 'EPZEU.CR.Domain';
import * as React from "react";
import { F012v_AdministrativeBoardSupporters, F01230_AdministrativeBoardSupporter } from '../../Models/Fields/ModelsAutoGenerated';
import { F01230_AdministrativeBoardSupporterUI } from "./F01230_AdministrativeBoardSupporterUI";

interface F012v_AdministrativeBoardSupportersUIProps
    extends FieldContainerProps {

}

const valSummaryPropNames = ["", "subject."];

class F012v_AdministrativeBoardSupportersUI extends EPZEUBaseComponent<F012v_AdministrativeBoardSupportersUIProps, F012v_AdministrativeBoardSupporters> {

    constructor(props?: ListRecordsContainerProps) {
        super(props);
    }

    renderEdit(): JSX.Element {
        return (
            <>
                <ValidationSummary {...this.props} propNames={valSummaryPropNames} strategy={ValidationSummaryStrategy.excludeAllExcept} includeErrorsRecursive={true} />
                {

                    <F01230_AdministrativeBoardSupporterUI {...this.bind(x => x.administrativeBoardSupporterList)} newRecordCtor={() => {
                        return Nomenclatures.getBGCountry().then(bgCountry => {
                            var administrativeBoardSupporter = new F01230_AdministrativeBoardSupporter();

                            administrativeBoardSupporter.subject = new Person();
                            administrativeBoardSupporter.subject.countryCode = bgCountry.code;
                            administrativeBoardSupporter.subject.countryID = bgCountry.id;
                            administrativeBoardSupporter.subject.countryName = bgCountry.name;

                            return administrativeBoardSupporter;
                        })
                    }}/>
                    }
            </>);
    }

    renderDisplay(): JSX.Element {
        return (
            <>
                {
                    <F01230_AdministrativeBoardSupporterUI {...this.bind(x => x.administrativeBoardSupporterList)} />
                }
                <ValidationSummaryErrorsPreviewUI errors={this.props.modelReference.getErrors()} />
            </>
        );
    }
}

export const F012v_AdministrativeBoardSupportersFieldUI = withFieldContainer(F012v_AdministrativeBoardSupportersUI, {
    fieldLabelTextKey: "CR_F_12v_L",
});
