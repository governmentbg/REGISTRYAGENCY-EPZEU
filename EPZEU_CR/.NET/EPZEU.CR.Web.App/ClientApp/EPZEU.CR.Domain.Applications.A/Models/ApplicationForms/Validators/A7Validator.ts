import { A7 } from '../../ApplicationForms/ApplicationFormsA';
import { F005a_SeatForCorrespondenceValidator } from '../../Fields/Validators/F005a_SeatForCorrespondenceValidator';
import { F009_ChairManValidator } from '../../Fields/Validators/F009_ChairManValidator';
import { F013a_BoardOfManagersSupportersValidator } from '../../Fields/Validators/F013a_BoardOfManagersSupportersValidator';
import { F013_BoardOfManagersMandatoryValidator } from '../../Fields/Validators/F013_BoardOfManagersValidator';
import { F015a_ControllingBoardSupportersValidator } from '../../Fields/Validators/F015a_ControllingBoardSupportersValidator';
import { F015_ControllingBoardMandatoryValidator } from '../../Fields/Validators/F015_ControllingBoardValidator';
import { F025_SharePaymentResponsibilityValidator } from '../../Fields/Validators/F025_SharePaymentResponsibilityValidator';
import { F027_AddemptionOfTraderValidator } from '../../Fields/Validators/F027_AddemptionOfTraderValidator';
import { A7Fields } from '../ModelsAutoGenerated';
import { ApplicationFormAFieldsBaseValidator, ApplicationFormAValidator } from './ApplicationFormAValidator';

export class A7Validator extends ApplicationFormAValidator<A7> {
    constructor() {
        super();

        this.ruleFor(m => m.fields).setValidator(new A7FieldsValidator());
    }

    public validate(obj: A7): boolean {
        let isValid = super.validate(obj);

        return isValid;
    }
}

export class A7FieldsValidator extends ApplicationFormAFieldsBaseValidator<A7Fields>{
    constructor() {
        super();

        this.ruleFor(m => m.seatForCorrespondence).setValidator(new F005a_SeatForCorrespondenceValidator());
        this.ruleFor(m => m.chairMan).setValidator(new F009_ChairManValidator());
        this.ruleFor(m => m.boardOfManagers).setValidator(new F013_BoardOfManagersMandatoryValidator());
        this.ruleFor(m => m.boardOfManagersSupporters).setValidator(new F013a_BoardOfManagersSupportersValidator());
        this.ruleFor(m => m.controllingBoard).setValidator(new F015_ControllingBoardMandatoryValidator());
        this.ruleFor(m => m.controllingBoardSupporters).setValidator(new F015a_ControllingBoardSupportersValidator());
        this.ruleFor(m => m.sharePaymentResponsibility).setValidator(new F025_SharePaymentResponsibilityValidator());
        this.ruleFor(m => m.addemptionOfTrader).setValidator(new F027_AddemptionOfTraderValidator());

    }

    public validate(obj: A7Fields): boolean {
        let isValid = super.validate(obj);

        return isValid;
    }
}