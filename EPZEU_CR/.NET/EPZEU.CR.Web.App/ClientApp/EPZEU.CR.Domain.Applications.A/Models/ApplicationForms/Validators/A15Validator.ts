import { ArrayHelper } from 'Cnsys.Core';
import { RecordOperations, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { A15 } from '../../ApplicationForms/ApplicationFormsA';
import { F005a_SeatForCorrespondenceValidator } from '../../Fields/Validators/F005a_SeatForCorrespondenceValidator';
import { F006g_SubjectToAdditionalBusinessActivityValidator } from '../../Fields/Validators/F006g_SubjectToAdditionalBusinessActivityValidator';
import { F0103_Representatives103Validator } from '../../Fields/Validators/F0103_Representatives103Validator';
import { F011_WayOfRepresentationValidator } from '../../Fields/Validators/F011_WayOfRepresentationValidator';
import { F012d_ManagementBodies12dValidator } from '../../Fields/Validators/F012d_ManagementBodies12dValidator';
import { F012g_Authorities12gValidator } from '../../Fields/Validators/F012g_Authorities12gValidator';
import { F016v_TermOfExistenceNonProfitLegalEntityValidator } from '../../Fields/Validators/F016v_TermOfExistenceNonProfitLegalEntityValidator';
import { F017a_DesignatedToPerformPublicBenefitValidator } from '../../Fields/Validators/F017a_DesignatedToPerformPublicBenefitValidator';
import { F017b_TemporarilySuspendedStatusForPublicBenefitsValidator } from '../../Fields/Validators/F017b_TemporarilySuspendedStatusForPublicBenefitsValidator';
import { F017g_DesignatedToCarryOutPrivateActivityValidator } from '../../Fields/Validators/F017g_DesignatedToCarryOutPrivateActivityValidator';
import { F017v_RestorationOfStatusInPublicBenefitValidator } from '../../Fields/Validators/F017v_RestorationOfStatusInPublicBenefitValidator';
import { F017_SpecialConditionsValidator } from '../../Fields/Validators/F017_SpecialConditionsValidator';
import { F025b_TotalAmountOfInitialPropertyContributionsValidator } from '../../Fields/Validators/F025b_TotalAmountOfInitialPropertyContributionsValidator';
import { F027_AddemptionOfTraderValidator } from '../../Fields/Validators/F027_AddemptionOfTraderValidator';
import { A15Fields } from '../ModelsAutoGenerated';
import { ApplicationFormAFieldsBaseValidator, ApplicationFormAValidator } from './ApplicationFormAValidator';

export class A15Validator extends ApplicationFormAValidator<A15> {
    constructor() {
        super();

        this.ruleFor(m => m.fields).setValidator(new A15FieldsValidator());
    }

    public validate(obj: A15): boolean {
        let isValid = super.validate(obj);

        return isValid;
    }
}

export class A15FieldsValidator extends ApplicationFormAFieldsBaseValidator<A15Fields>{
    constructor() {
        super();
        //Осн. обстоятелства 1
        this.ruleFor(m => m.seatForCorrespondence).setValidator(new F005a_SeatForCorrespondenceValidator());

        //Осн. обстоятелства 2
        this.ruleFor(m => m.subjectToAdditionalBusinessActivity).setValidator(new F006g_SubjectToAdditionalBusinessActivityValidator());
        this.ruleFor(m => m.representatives103).setValidator(new F0103_Representatives103Validator());
        this.ruleFor(m => m.wayOfRepresentation).setValidator(new F011_WayOfRepresentationValidator());
        this.ruleFor(m => m.authorities12g).setValidator(new F012g_Authorities12gValidator());

        //Осн. обстоятелства 3
        this.ruleFor(m => m.managementBodies12d).setValidator(new F012d_ManagementBodies12dValidator);
        this.ruleFor(m => m.termOfExistenceNonProfitLegalEntity).setValidator(new F016v_TermOfExistenceNonProfitLegalEntityValidator());
        this.ruleFor(m => m.specialConditions).setValidator(new F017_SpecialConditionsValidator);
        this.ruleFor(m => m.designatedToPerformPublicBenefit).setValidator(new F017a_DesignatedToPerformPublicBenefitValidator);
        this.ruleFor(m => m.temporarilySuspendedStatusForPublicBenefits).setValidator(new F017b_TemporarilySuspendedStatusForPublicBenefitsValidator);
        this.ruleFor(m => m.restorationOfStatusInPublicBenefit).setValidator(new F017v_RestorationOfStatusInPublicBenefitValidator);
        this.ruleFor(m => m.designatedToCarryOutPrivateActivity).setValidator(new F017g_DesignatedToCarryOutPrivateActivityValidator);

        this.ruleFor(m => m.totalAmountOfInitialPropertyContributions).setValidator(new F025b_TotalAmountOfInitialPropertyContributionsValidator());
        this.ruleFor(m => m.addemptionOfTrader).setValidator(new F027_AddemptionOfTraderValidator());
    }

    public validate(obj: A15Fields): boolean {
        let isValid = super.validate(obj);
        let valCtx = this.getValidationContext();

        obj.designatedToPerformPublicBenefit.clearErrors();

        let checked17xCount: number = 0;

        if (obj.designatedToPerformPublicBenefit.cheked && obj.designatedToPerformPublicBenefit.recordOperation != RecordOperations.Erase)
            checked17xCount++;

        if (obj.restorationOfStatusInPublicBenefit.cheked && obj.restorationOfStatusInPublicBenefit.recordOperation != RecordOperations.Erase)
            checked17xCount++;

        if (obj.designatedToCarryOutPrivateActivity.cheked && obj.designatedToCarryOutPrivateActivity.recordOperation != RecordOperations.Erase)
            checked17xCount++;

        if (obj.designatedToPerformPublicBenefit.recordOperation == RecordOperations.Erase
            || obj.restorationOfStatusInPublicBenefit.recordOperation == RecordOperations.Erase
            || obj.designatedToCarryOutPrivateActivity.recordOperation == RecordOperations.Erase
            || ValidatorHelpers.hasMandatoryRecordsForChange(valCtx.processStates, [obj.designatedToPerformPublicBenefit, obj.restorationOfStatusInPublicBenefit, obj.designatedToCarryOutPrivateActivity], true)) {

            if (checked17xCount == 0 || checked17xCount > 1) {

                obj.addError('designatedToPerformPublicBenefit', this.getMessage('CR_APP_STATUS_NGO_E')); //  Трябва да бъде попълнено едно от полетата 17а,17в, 17г
                isValid = false;
            }
        }

        if (ValidatorHelpers.hasMandatoryRecordsForChange(valCtx.processStates, obj.representatives103.representativeList, true)
            || ValidatorHelpers.hasMandatoryRecordsForChange(valCtx.processStates, [obj.wayOfRepresentation], true)) {

            if (ValidatorHelpers.canBeMarkedForErase(obj.wayOfRepresentation, valCtx)) {

                let cntNotEmptyRepresentatives: number = ArrayHelper.queryable.from(obj.representatives103.representativeList).where(m => m.recordOperation != RecordOperations.Erase && !ValidatorHelpers.isObjectWithPersonEmpty(m, "person")).count();
                let wayOfRepresentationSelected: boolean = (obj.wayOfRepresentation.jointly || obj.wayOfRepresentation.severally || obj.wayOfRepresentation.otherWay) && obj.wayOfRepresentation.recordOperation != RecordOperations.Erase;

                if (cntNotEmptyRepresentatives > 1 && !wayOfRepresentationSelected) {
                    obj.wayOfRepresentation.clearErrors();
                    obj.wayOfRepresentation.addError(this.getMessage('CR_APP_00078_I')); //Полето "Начин на представляване" е задължително, когато представителите са повече от един!
                    isValid = false;
                }

                if (wayOfRepresentationSelected && cntNotEmptyRepresentatives < 2) {

                    obj.wayOfRepresentation.clearErrors();
                    obj.wayOfRepresentation.addError(this.getMessage('CR_APP_00072_E')); //Начин на представляване трябва да бъде попълнено, само когато представителите са повече от един.
                    isValid = false;
                }
            }
        }

        return isValid;
    }
}