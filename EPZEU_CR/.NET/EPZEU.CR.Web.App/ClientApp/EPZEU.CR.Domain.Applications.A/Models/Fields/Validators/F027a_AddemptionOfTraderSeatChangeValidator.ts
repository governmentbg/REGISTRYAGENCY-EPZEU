import { ObjectHelper } from 'Cnsys.Core';
import { RecordValidator, SimpleAddressValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F027a_AddemptionOfTraderSeatChange } from '../ModelsAutoGenerated';

export class F027a_AddemptionOfTraderSeatChangeValidator extends RecordValidator<F027a_AddemptionOfTraderSeatChange> {

    public validateInternal(obj: F027a_AddemptionOfTraderSeatChange): boolean {
        let isValid = super.validateInternal(obj);

        if (obj.isTraderAddempted) {

            if (ObjectHelper.isStringNullOrEmpty(obj.foreignAuthority.competentAuthorityForRegistration) || ObjectHelper.isStringNullOrEmpty(obj.foreignAuthority.registrationNumber)) {
                isValid = false;
                obj.addError(this.getMessage('CR_APP_00059_E'));//Попълнете компетентен орган по регистрацията, номер на регистрацията и адрес по предходната регистрация.
            }

            let isValidAddress = new SimpleAddressValidator();
            isValidAddress.setValidationContext(this.getValidationContext());

            if (ValidatorHelpers.isEmptyAddress(obj.address) || !isValidAddress.validate(obj.address, true)) {
                isValid = false;
                obj.address.clearErrors();
                obj.address.addError(this.getMessage('CR_FILL_ADDRESS_E')); // Попълнете адрес.
            }
        } else {

            if (!this.validationContext.isRecordEmpty(obj)) {
                obj.addError(this.getMessage('CR_APP_00069_E')); //Отбележете "заличаване поради преместване на седалището в друга държава-членка". 
                isValid = false;
            }
        }

        return isValid;
    }
}