import { ObjectHelper } from "Cnsys.Core";
import { EPZEUBaseValidator } from "EPZEU.Core";
import { IApplicationFormValidationContext, RecordOperations, RecordValidator } from "EPZEU.CR.Domain";
import { F02220_InsolvencyOfForeignTrader, F022b_InsolvenciesOfForeignTrader } from "../ModelsAutoGenerated";

class F02220_InsolvencyOfForeignTraderValidator extends RecordValidator<F02220_InsolvencyOfForeignTrader> {

    public validateInternal(obj: F02220_InsolvencyOfForeignTrader): boolean {

        let isValid = super.validateInternal(obj);

        let allFilled = !ObjectHelper.isStringNullOrEmpty(obj.actNumber)
            && !ObjectHelper.isNullOrUndefined(obj.date)
            && !ObjectHelper.isStringNullOrEmpty(obj.judicialCode)
            && (obj.decision759 || obj.decision760);

        let allEmpty = ObjectHelper.isStringNullOrEmpty(obj.actNumber)
            && ObjectHelper.isNullOrUndefined(obj.date)           
            && ObjectHelper.isStringNullOrEmpty(obj.judicialCode)
            && !obj.decision759 && !obj.decision760;

        if (!allFilled && !allEmpty) {                 
            isValid = false;
            obj.addError(this.getMessage('CR_APP_00067_E'));// При попълването на всяко подполе трябва да има съдържание и в другите подполета.
        }

        return isValid;
    }
}

export class F022b_InsolvenciesOfForeignTraderValidator extends EPZEUBaseValidator<F022b_InsolvenciesOfForeignTrader, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.insolvencyOfForeignTraderList).setCollectionValidator(new F02220_InsolvencyOfForeignTraderValidator());
    }

    public validate(obj: F022b_InsolvenciesOfForeignTrader): boolean {
        let isValid = super.validate(obj);

        for (var i = 0; i < obj.insolvencyOfForeignTraderList.length; i++) {

            if (obj.insolvencyOfForeignTraderList.length > 1
                && ObjectHelper.isStringNullOrEmpty(obj.insolvencyOfForeignTraderList[i].actNumber)
                && ObjectHelper.isStringNullOrEmpty(obj.insolvencyOfForeignTraderList[i].insolvencyText)
                && ObjectHelper.isNullOrUndefined(obj.insolvencyOfForeignTraderList[i].date)
                && obj.insolvencyOfForeignTraderList[i].recordOperation != RecordOperations.Erase) {

                obj.insolvencyOfForeignTraderList[i].clearErrors();
                obj.insolvencyOfForeignTraderList[i].addError(this.getMessage('CR_APP_00063_E'));// Попълнете данните за полето или го изтрийте.

                isValid = false;
            }
        }

        return isValid;
    }
}