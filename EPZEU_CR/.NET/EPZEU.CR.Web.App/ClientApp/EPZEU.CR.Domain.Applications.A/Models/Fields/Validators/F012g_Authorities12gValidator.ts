import { ArrayHelper, ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F012g_Authorities12g } from '../ModelsAutoGenerated';

export class F012g_Authorities12gValidator extends EPZEUBaseValidator<F012g_Authorities12g, IApplicationFormValidationContext> {

    public validate(obj: F012g_Authorities12g): boolean {
        let isValid = super.validate(obj);
        let valCtx = this.getValidationContext();

        obj.authorities12gList[0].clearErrors();

        if (obj.authorities12gList.length > 1) {

            for (var i = 0; i < obj.authorities12gList.length; i++) {

                if (this.validationContext.isRecordEmpty(obj.authorities12gList[i]) && obj.authorities12gList[i].recordOperation != RecordOperations.Erase) {
                    obj.authorities12gList[i].clearErrors(true);
                    obj.authorities12gList[i].addError(this.getMessage('CR_APP_00063_E'));// Попълнете данните за полето или го изтрийте.

                    isValid = false;
                }
            }
        }

        if (ValidatorHelpers.hasMandatoryRecordsForChange(valCtx.processStates, obj.authorities12gList, true)) {

            let cntNotEmptyAuthoritiess: number = ArrayHelper.queryable.from(obj.authorities12gList).where(m => m.recordOperation != RecordOperations.Erase && !ObjectHelper.isStringNullOrEmpty(obj.authorities12gList[0].text)).count();

            if (cntNotEmptyAuthoritiess == 0) {
                obj.authorities12gList[0].addError(this.getMessage('CR_APP_INPUT_MANDATORY_ONE_AUTHORITY_Е')); // Попълнете поне един орган
                isValid = false;
            }
        }

        return isValid;
    }
}