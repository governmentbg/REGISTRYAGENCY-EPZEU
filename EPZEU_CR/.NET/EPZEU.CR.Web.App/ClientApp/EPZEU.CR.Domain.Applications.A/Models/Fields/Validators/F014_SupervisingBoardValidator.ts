import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator, SubjectFLEWithCountyValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F01401_Supervisor, F0140_SupervisingBoardMandate, F014_SupervisingBoard } from '../ModelsAutoGenerated';

class F01401_SupervisorValidator extends RecordValidator<F01401_Supervisor> {

    constructor() {
        super();

        this.ruleFor(m => m.subject).setValidator(new SubjectFLEWithCountyValidator());
    }

    public validateInternal(obj: F01401_Supervisor): boolean {
        let isValid = super.validateInternal(obj);

        return isValid;
    }
}

class F0140_SupervisingBoardMandateValidator extends RecordValidator<F0140_SupervisingBoardMandate> {

    constructor() {
        super();
    }

    public validateInternal(obj: F0140_SupervisingBoardMandate): boolean {
        let isValid = super.validateInternal(obj);

        return isValid;
    }
}

export class F014_SupervisingBoardValidator extends EPZEUBaseValidator<F014_SupervisingBoard, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.supervisingBoardMandate).setValidator(new F0140_SupervisingBoardMandateValidator());
        this.ruleFor(m => m.supervisorList).setCollectionValidator(new F01401_SupervisorValidator());
    }

    public validate(obj: F014_SupervisingBoard): boolean {
        let isValid = super.validate(obj);

        if (obj.supervisorList.length > 1) {
            for (var i = 0; i < obj.supervisorList.length; i++) {
                if (ValidatorHelpers.isObjectWithPersonEmpty(obj.supervisorList[i], "subject") && obj.supervisorList[i].recordOperation != RecordOperations.Erase) {
                    obj.supervisorList[i].clearErrors(true);
                    obj.supervisorList[i].addError(this.getMessage('CR_APP_00063_E'));// Попълнете данните за полето или го изтрийте.

                    isValid = false;
                }
            }

            //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
            if (ValidatorHelpers.isExistDublicateIndents(obj.supervisorList, false, "CR_APP_00100_E")) // 
                isValid = false;
        }

        return isValid;
    }
}