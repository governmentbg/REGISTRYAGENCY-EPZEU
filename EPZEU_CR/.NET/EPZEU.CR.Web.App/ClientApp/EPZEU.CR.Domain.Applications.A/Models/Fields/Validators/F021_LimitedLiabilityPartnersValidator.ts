import { ArrayHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F021_LimitedLiabilityPartners } from '../ModelsAutoGenerated';
import { F0210_LimitedLiabilityPartnerValidator } from './F0210_LimitedLiabilityPartnerValidator';

export class F021_LimitedLiabilityPartnersValidator extends EPZEUBaseValidator<F021_LimitedLiabilityPartners, IApplicationFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.liabilityPartnerList).setCollectionValidator(new F0210_LimitedLiabilityPartnerValidator());
    }

    public validate(obj: F021_LimitedLiabilityPartners): boolean {
        let isValid = super.validate(obj);
        let valCtx = this.getValidationContext();
        let notMarkedForErase = ArrayHelper.queryable.from(obj.liabilityPartnerList).where((el) => { return el.recordOperation != RecordOperations.Erase }).toArray();

        if (notMarkedForErase.length > 1) {

            for (let i: number = 0; i < notMarkedForErase.length; i++) {
                let currElement = notMarkedForErase[i];
                let isRecordEmpty: boolean = this.validationContext.isRecordEmpty(currElement);

                if (isRecordEmpty) {

                    currElement.address.clearErrors();
                    //Попълнете данните за полето или го изтрийте.
                    currElement.addError(this.getMessage('CR_APP_00063_E'));
                    isValid = false;
                } else {

                    if (ValidatorHelpers.hasMandatoryRecordsForChange(valCtx.processStates, obj.liabilityPartnerList, true)) {

                        if (ValidatorHelpers.areAllFieldsEmpty(currElement.subject.name, currElement.subject.indent, currElement.subject.isForeignTrader)) {
                            ////Попълнете име и идентификатор. Ако юридическото лице е чуждестранно, попълнете наименование и маркирайте "Чуждестранно юридическо лице".
                            currElement.subject.addError(this.getMessage('CR_APP_00016_Е'));
                            isValid = false;
                        }
                    }
                }
            }
        }

        //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
        if (ValidatorHelpers.isExistDublicateIndents(obj.liabilityPartnerList, false, "CR_APP_00106_E")) // 
            isValid = false;

        return isValid;
    }
}