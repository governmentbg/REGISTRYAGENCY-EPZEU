import { ArrayHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F020_UnlimitedLiabilityPartners } from '../ModelsAutoGenerated';
import { F0200_UnlimitedLiabilityPartnerValidator } from './F0200_UnlimitedLiabilityPartnerValidator';

export class F020_UnlimitedLiabilityPartnersValidators extends EPZEUBaseValidator<F020_UnlimitedLiabilityPartners, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.unlimitedLiabilityPartnerList).setCollectionValidator(new F0200_UnlimitedLiabilityPartnerValidator());
    }

    public validate(obj: F020_UnlimitedLiabilityPartners): boolean {
        let isValid = super.validate(obj);

        let notMarkedForErase = ArrayHelper.queryable.from(obj.unlimitedLiabilityPartnerList).where((el) => { return el.recordOperation != RecordOperations.Erase }).toArray();

        if (notMarkedForErase.length > 1) {
            for (let i: number = 0; i < notMarkedForErase.length; i++) {
                let currElement = notMarkedForErase[i];
                let isRecordEmpty: boolean = this.validationContext.isRecordEmpty(currElement);

                if (isRecordEmpty) {
                    currElement.address.clearErrors();
                    //Попълнете данните за полето или го изтрийте.
                    currElement.addError(this.getMessage('CR_APP_00063_E'));
                    isValid = false;
                } 
            }
        }

        //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
        if (ValidatorHelpers.isExistDublicateIndents(obj.unlimitedLiabilityPartnerList, false, "CR_APP_00106_E")) // Има друг съдружник със същия идентификатор (ЕГН/ЛНЧ/ЕИК/БУЛСТАТ).
            isValid = false;

        return isValid;
    }
}