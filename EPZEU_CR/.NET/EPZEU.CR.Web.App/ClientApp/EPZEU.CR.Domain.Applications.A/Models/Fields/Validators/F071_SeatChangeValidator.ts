import { ObjectHelper } from 'Cnsys.Core';
import { BG_COUNTRY_ID } from 'EPZEU.Core';
import { RecordValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F071_SeatChange } from '../ModelsAutoGenerated';

export class F071_SeatChangeValidator extends RecordValidator<F071_SeatChange> {

    public validateInternal(obj: F071_SeatChange): boolean {
        let isValid = super.validateInternal(obj);

        if (!this.validationContext.isRecordEmpty(obj)) {

            if ((ObjectHelper.isStringNullOrEmpty(obj.foreignAuthority.competentAuthorityForRegistration)) &&
                (ObjectHelper.isStringNullOrEmpty(obj.foreignAuthority.registrationNumber)) &&
                (ValidatorHelpers.isEmptyAddress(obj.address))) {

            }
            else {
                if (ObjectHelper.isStringNullOrEmpty(obj.foreignAuthority.competentAuthorityForRegistration) || ObjectHelper.isStringNullOrEmpty(obj.foreignAuthority.registrationNumber)) {
                    obj.addError(this.getMessage('CR_APP_00059_E')); //Попълнете компетентен орган по регистрацията, номер на регистрацията и адрес по предходната регистрация.
                    isValid = false;
                } else if (ObjectHelper.isNullOrUndefined(obj.address.countryID)
                    || ((obj.address.countryID == BG_COUNTRY_ID) && ObjectHelper.isStringNullOrEmpty(obj.address.settlement))
                    || ((obj.address.countryID != BG_COUNTRY_ID) && ObjectHelper.isStringNullOrEmpty(obj.address.foreignPlace))) {

                    isValid = false;
                    obj.addError(this.getMessage('CR_FILL_ADDRESS_E')); //Попълнете адрес
                }
            }
        }

        return isValid;
    }
}