import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator, SubjectFLEWithCountyValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F01430_SupervisingBoardSupporter, F014v_SupervisingBoardSupporters } from '../ModelsAutoGenerated';

class F01430_SupervisingBoardSupporterValidator extends RecordValidator<F01430_SupervisingBoardSupporter> {

    constructor() {
        super();

        this.ruleFor(m => m.subject).setValidator(new SubjectFLEWithCountyValidator());
    }

    public validateInternal(obj: F01430_SupervisingBoardSupporter): boolean {       

        let isValid = super.validateInternal(obj);        

        return isValid;
    }
}

export class F014v_SupervisingBoardSupportersValidator extends EPZEUBaseValidator<F014v_SupervisingBoardSupporters, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.supervisingBoardSupporterList).setCollectionValidator(new F01430_SupervisingBoardSupporterValidator());
    }

    public validate(obj: F014v_SupervisingBoardSupporters): boolean {
        let isValid = super.validate(obj);

        if (obj.supervisingBoardSupporterList.length > 1) {

            for (var i = 0; i < obj.supervisingBoardSupporterList.length; i++) {

                if (ValidatorHelpers.isObjectWithPersonEmpty(obj.supervisingBoardSupporterList[i], "subject") && obj.supervisingBoardSupporterList[i].recordOperation != RecordOperations.Erase) {
                    obj.supervisingBoardSupporterList[i].clearErrors(true);
                    obj.supervisingBoardSupporterList[i].addError(this.getMessage('CR_APP_00063_E'));

                    isValid = false;
                }
            }   

            //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
            if (ValidatorHelpers.isExistDublicateIndents(obj.supervisingBoardSupporterList, false, "CR_APP_00130_E")) // 
                isValid = false;   
        }

        return isValid;
    }
}