import { ArrayHelper, ObjectHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F0310a_Share, F031a_Shares } from '../ModelsAutoGenerated';
import { F03110_CredentialsForDifferentTypesValidator } from './F03110_CredentialsForDifferentTypesValidator';
import { F03111_SpecialConditionsForTransferValidator } from './F03111_SpecialConditionsForTransferValidator';

export class F031a_SharesValidator extends EPZEUBaseValidator<F031a_Shares, IApplicationFormValidationContext> {

    constructor() {
        super();

        this.ruleFor(m => m.credentialsForDifferentTypes).setValidator(new F03110_CredentialsForDifferentTypesValidator())
        this.ruleFor(m => m.specialConditionsForTransfer).setValidator(new F03111_SpecialConditionsForTransferValidator())
        this.ruleFor(m => m.shareList).setCollectionValidator(new F0310a_ShareValidator());
    }

    public validate(obj: F031a_Shares): boolean {

        let isValid = super.validate(obj);
        let valCtx = this.getValidationContext();
        let notMarkedForErase = ArrayHelper.queryable.from(obj.shareList).where((el) => { return el.recordOperation != RecordOperations.Erase }).toArray();

        for (let i: number = 0; i < notMarkedForErase.length; i++) {
            let currElement = notMarkedForErase[i];
            let isRecordEmpty: boolean = this.validationContext.isRecordEmpty(currElement);

            if (isRecordEmpty) {
                currElement.clearErrors(true);
                if (notMarkedForErase.length == 1) {

                    if (ValidatorHelpers.hasMandatoryRecordsForChange(valCtx.processStates, obj.shareList, true)) {

                        //Полетата "Вид, брой и номинал на акциите" са задължителни!                   
                        currElement.addError(this.getMessage('CR_APP_00012_E'));
                        isValid = false;
                    }
                } else {
                    //Попълнете данните за полето или го изтрийте.
                    currElement.addError(this.getMessage('CR_APP_00063_E'));
                    isValid = false;
                }
            }
        }

        return isValid;
    }
}

export class F0310a_ShareValidator extends RecordValidator<F0310a_Share> {

    constructor() {
        super();
    }

    public validateInternal(obj: F0310a_Share): boolean {
        let isValid = super.validateInternal(obj);

        if (!isValid)
            return isValid;

        if ((ObjectHelper.isStringNullOrEmpty(obj.type) || ObjectHelper.isStringNullOrEmpty(obj.count) || ObjectHelper.isStringNullOrEmpty(obj.nominalValue))
            && obj.recordOperation != RecordOperations.Erase) {
            //Полетата "Вид, брой и номинал на акциите" са задължителни!
            obj.addError(this.getMessage('CR_APP_00012_E'));
            isValid = false;
        }

        return isValid;
    }
}