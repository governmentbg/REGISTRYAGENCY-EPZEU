import { ArrayHelper } from 'Cnsys.Core';
import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F0101_Representatives101 } from '../ModelsAutoGenerated';
import { F01010_Representative101Validator } from './F01010_Representative101Validator'


export class F0101_Representatives101Validator extends EPZEUBaseValidator<F0101_Representatives101, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.representativeList).setCollectionValidator(new F01010_Representative101Validator());
    }

    public validate(obj: F0101_Representatives101): boolean {
        let isValid = super.validate(obj);

        if (obj.representativeList.length > 1) {

            for (var i = 0; i < obj.representativeList.length; i++) {
                if (ValidatorHelpers.isObjectWithPersonEmpty(obj.representativeList[i], "subject")
                    && obj.representativeList[i].recordOperation != RecordOperations.Erase) {
                    obj.representativeList[i].clearErrors(true);
                    obj.representativeList[i].addError(this.getMessage('CR_APP_00063_E'));// Попълнете данните за полето или го изтрийте.
                    isValid = false;
                }
            }
        }        

        //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
        if (ValidatorHelpers.isExistDublicateIndents(obj.representativeList, false, "CR_APP_00111_E")) // 
            isValid = false; 
        

        return isValid;
    }
}