import { EPZEUBaseValidator } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator, SubjectFLEWithCountyValidator, ValidatorHelpers } from 'EPZEU.CR.Domain';
import { F01340_BoardManagersSupporter2, F013v_BoardOfManagersSupporters2 } from '../ModelsAutoGenerated';

class F01340_BoardManagersSupporter2Validator extends RecordValidator<F01340_BoardManagersSupporter2> {

    constructor() {
        super();

        this.ruleFor(m => m.subject).setValidator(new SubjectFLEWithCountyValidator());
    }

    public validateInternal(obj: F01340_BoardManagersSupporter2): boolean {
        let isValid = super.validateInternal(obj);       
        
        return isValid;
    }
}

export class F013v_BoardOfManagersSupporters2Validator extends EPZEUBaseValidator<F013v_BoardOfManagersSupporters2, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.f01340_BoardManagersSupporter2List).setCollectionValidator(new F01340_BoardManagersSupporter2Validator());
    }

    public validate(obj: F013v_BoardOfManagersSupporters2): boolean {
        let isValid = super.validate(obj);

        if (obj.f01340_BoardManagersSupporter2List.length > 1) {

            for (var i = 0; i < obj.f01340_BoardManagersSupporter2List.length; i++) {

                if (ValidatorHelpers.isObjectWithPersonEmpty(obj.f01340_BoardManagersSupporter2List[i], "subject") && obj.f01340_BoardManagersSupporter2List[i].recordOperation != RecordOperations.Erase) {
                    obj.f01340_BoardManagersSupporter2List[i].clearErrors(true);
                    obj.f01340_BoardManagersSupporter2List[i].addError(this.getMessage('CR_APP_00063_E'));

                    isValid = false;
                }
            }

            //Грешката се визуалзира при добавяне на второ и следващо лице със същия идентификатор като на вече добавено лице
            if (ValidatorHelpers.isExistDublicateIndents(obj.f01340_BoardManagersSupporter2List, false, "CR_APP_00129_E")) // 
                isValid = false;            
        }
        return isValid;
    }
}