import { EPZEUBaseValidator, BG_COUNTRY_ID } from 'EPZEU.Core';
import { IApplicationFormValidationContext, RecordOperations, RecordValidator } from 'EPZEU.CR.Domain';
import { F0600_DivisionOfEuropeanUnification, F060_DivisionsOfEuropeanUnification } from '../ModelsAutoGenerated';
import { ObjectHelper } from 'Cnsys.Core';

class F0600_DivisionOfEuropeanUnificationValidator extends RecordValidator<F0600_DivisionOfEuropeanUnification> {

    public validateInternal(obj: F0600_DivisionOfEuropeanUnification): boolean {

        let isValid = super.validateInternal(obj);

        if (!this.validationContext.isRecordEmpty(obj)) {
            if (ObjectHelper.isStringNullOrEmpty(obj.foreignCompanyBaseData.companyName) || ObjectHelper.isStringNullOrEmpty(obj.foreignCompanyBaseData.competentAuthorityForRegistration) || ObjectHelper.isStringNullOrEmpty(obj.foreignCompanyBaseData.registrationNumber)) {
                isValid = false;
                obj.addError(this.getMessage('CR_APP_00070_E')); //Попълнете име/фирма/наименование, компетентен орган по регистрацията, номер на регистрацията и адрес.

            } else if (ObjectHelper.isNullOrUndefined(obj.address.countryID)
                || ((obj.address.countryID == BG_COUNTRY_ID) && ObjectHelper.isStringNullOrEmpty(obj.address.settlement))
                || ((obj.address.countryID != BG_COUNTRY_ID) && ObjectHelper.isStringNullOrEmpty(obj.address.foreignPlace))) {

                isValid = false;
                obj.addError(this.getMessage('CR_FILL_ADDRESS_E')); //Попълнете адрес
            }
        }

        return isValid;
    }
}

export class F060_DivisionsOfEuropeanUnificationValidator extends EPZEUBaseValidator<F060_DivisionsOfEuropeanUnification, IApplicationFormValidationContext> {
    constructor() {
        super();

        this.ruleFor(m => m.divisionOfEuropeanUnificationList).setCollectionValidator(new F0600_DivisionOfEuropeanUnificationValidator());
    }

    public validate(obj: F060_DivisionsOfEuropeanUnification): boolean {
        let isValid = super.validate(obj);

        for (var i = 0; i < obj.divisionOfEuropeanUnificationList.length; i++) {
            if (obj.divisionOfEuropeanUnificationList.length > 1 && this.validationContext.isRecordEmpty(obj.divisionOfEuropeanUnificationList[i]) && obj.divisionOfEuropeanUnificationList[i].recordOperation != RecordOperations.Erase) {

                obj.divisionOfEuropeanUnificationList[i].addError(this.getMessage('CR_APP_00063_E'));// Попълнете данните за полето или го изтрийте.

                isValid = false;
            }
        }

        return isValid;
    }
}