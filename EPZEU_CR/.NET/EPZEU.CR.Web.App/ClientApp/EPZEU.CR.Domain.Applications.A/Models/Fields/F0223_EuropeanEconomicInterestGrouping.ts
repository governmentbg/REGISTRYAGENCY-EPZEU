import { TypeSystem, moduleContext } from "Cnsys.Core";
import { observable } from "mobx";
import { Record, CompositeField, EuropeanEconomicInterestRepresenterTypes } from "EPZEU.CR.Domain";
import { F0223_ForeignCompanyData, F02231_EUIEAddempted, F02232_RepresentersWayOfManagement, F02233_PowerOfLiquidators, F02234_PowerOfTrustees } from "./ModelsAutoGenerated";

@TypeSystem.typeDecorator('F02235_EuropeanEconomicInterestRepresenter', moduleContext.moduleName)
export class F02235_EuropeanEconomicInterestRepresenter extends Record {

    @observable private _representerType: EuropeanEconomicInterestRepresenterTypes = null;

    @TypeSystem.propertyDecorator(EuropeanEconomicInterestRepresenterTypes ? EuropeanEconomicInterestRepresenterTypes : moduleContext.moduleName + '.' + 'EuropeanEconomicInterestRepresenterTypes')
    public set representerType(val: EuropeanEconomicInterestRepresenterTypes) {
        this._representerType = val;
    }

    public get representerType(): EuropeanEconomicInterestRepresenterTypes {
        return this._representerType;
    }

    @observable private _representerName: string = null;

    @TypeSystem.propertyDecorator('string')
    public set representerName(val: string) {
        this._representerName = val;
    }

    public get representerName(): string {
        return this._representerName;
    }

    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);
    }
}

@TypeSystem.typeDecorator('F0223_EuropeanEconomicInterestGrouping', moduleContext.moduleName)
export class F0223_EuropeanEconomicInterestGrouping extends CompositeField {

    @TypeSystem.propertyArrayDecorator(F02235_EuropeanEconomicInterestRepresenter ? F02235_EuropeanEconomicInterestRepresenter : moduleContext.moduleName + '.' + 'F02235_EuropeanEconomicInterestRepresenter')
    public set europeanEconomicInterestRepresenterList(val: F02235_EuropeanEconomicInterestRepresenter[]) {
        if (val && val.length > 0) {

            this._europeanEconomicInterestRepresenterRegularList = [];
            this._europeanEconomicInterestRepresenterLiquidatorList = [];
            this._europeanEconomicInterestRepresenterTrusteeList = [];

            for (var i = 0; i < val.length; i++) {
                let currentVal = val[i];

                switch (currentVal.representerType) {
                    case EuropeanEconomicInterestRepresenterTypes.Regular: this._europeanEconomicInterestRepresenterRegularList.push(currentVal)
                        break;
                    case EuropeanEconomicInterestRepresenterTypes.Liquidator: this._europeanEconomicInterestRepresenterLiquidatorList.push(currentVal)
                        break;
                    case EuropeanEconomicInterestRepresenterTypes.Trustee: this._europeanEconomicInterestRepresenterTrusteeList.push(currentVal)
                        break;
                }
            }
        }
    }

    public get europeanEconomicInterestRepresenterList(): F02235_EuropeanEconomicInterestRepresenter[] {
        let result = [];

        if (this._europeanEconomicInterestRepresenterRegularList && this._europeanEconomicInterestRepresenterRegularList.length > 0)
            result.push(...this._europeanEconomicInterestRepresenterRegularList)

        if (this._europeanEconomicInterestRepresenterLiquidatorList && this._europeanEconomicInterestRepresenterLiquidatorList.length > 0)
            result.push(...this._europeanEconomicInterestRepresenterLiquidatorList)

        if (this._europeanEconomicInterestRepresenterTrusteeList && this._europeanEconomicInterestRepresenterTrusteeList.length > 0)
            result.push(...this._europeanEconomicInterestRepresenterTrusteeList)

        return result;
    }

    @observable private _europeanEconomicInterestRepresenterRegularList: F02235_EuropeanEconomicInterestRepresenter[] = null;

    @TypeSystem.propertyArrayDecorator(F02235_EuropeanEconomicInterestRepresenter ? F02235_EuropeanEconomicInterestRepresenter : moduleContext.moduleName + '.' + 'F02235_EuropeanEconomicInterestRepresenter')
    public set europeanEconomicInterestRepresenterRegularList(val: F02235_EuropeanEconomicInterestRepresenter[]) {
        this._europeanEconomicInterestRepresenterRegularList = val;
    }

    public get europeanEconomicInterestRepresenterRegularList(): F02235_EuropeanEconomicInterestRepresenter[] {
        return this._europeanEconomicInterestRepresenterRegularList;
    }

    @observable private _europeanEconomicInterestRepresenterLiquidatorList: F02235_EuropeanEconomicInterestRepresenter[] = null;

    @TypeSystem.propertyArrayDecorator(F02235_EuropeanEconomicInterestRepresenter ? F02235_EuropeanEconomicInterestRepresenter : moduleContext.moduleName + '.' + 'F02235_EuropeanEconomicInterestRepresenter')
    public set europeanEconomicInterestRepresenterLiquidatorList(val: F02235_EuropeanEconomicInterestRepresenter[]) {
        this._europeanEconomicInterestRepresenterLiquidatorList = val;
    }

    public get europeanEconomicInterestRepresenterLiquidatorList(): F02235_EuropeanEconomicInterestRepresenter[] {
        return this._europeanEconomicInterestRepresenterLiquidatorList;
    }

    @observable private _europeanEconomicInterestRepresenterTrusteeList: F02235_EuropeanEconomicInterestRepresenter[] = null;

    @TypeSystem.propertyArrayDecorator(F02235_EuropeanEconomicInterestRepresenter ? F02235_EuropeanEconomicInterestRepresenter : moduleContext.moduleName + '.' + 'F02235_EuropeanEconomicInterestRepresenter')
    public set europeanEconomicInterestRepresenterTrusteeList(val: F02235_EuropeanEconomicInterestRepresenter[]) {
        this._europeanEconomicInterestRepresenterTrusteeList = val;
    }

    public get europeanEconomicInterestRepresenterTrusteeList(): F02235_EuropeanEconomicInterestRepresenter[] {
        return this._europeanEconomicInterestRepresenterTrusteeList;
    }

    @observable private _foreignCompanyData: F0223_ForeignCompanyData = null;

    @TypeSystem.propertyDecorator(F0223_ForeignCompanyData ? F0223_ForeignCompanyData : moduleContext.moduleName + '.' + 'F0223_ForeignCompanyData')
    public set foreignCompanyData(val: F0223_ForeignCompanyData) {
        this._foreignCompanyData = val;
    }

    public get foreignCompanyData(): F0223_ForeignCompanyData {
        return this._foreignCompanyData;
    }

    @observable private _euieAddempted: F02231_EUIEAddempted = null;

    @TypeSystem.propertyDecorator(F02231_EUIEAddempted ? F02231_EUIEAddempted : moduleContext.moduleName + '.' + 'F02231_EUIEAddempted')
    public set euieAddempted(val: F02231_EUIEAddempted) {
        this._euieAddempted = val;
    }

    public get euieAddempted(): F02231_EUIEAddempted {
        return this._euieAddempted;
    }

    @observable private _representersWayOfManagement: F02232_RepresentersWayOfManagement = null;

    @TypeSystem.propertyDecorator(F02232_RepresentersWayOfManagement ? F02232_RepresentersWayOfManagement : moduleContext.moduleName + '.' + 'F02232_RepresentersWayOfManagement')
    public set representersWayOfManagement(val: F02232_RepresentersWayOfManagement) {
        this._representersWayOfManagement = val;
    }

    public get representersWayOfManagement(): F02232_RepresentersWayOfManagement {
        return this._representersWayOfManagement;
    }


    @observable private _powerOfLiquidators: F02233_PowerOfLiquidators = null;

    @TypeSystem.propertyDecorator(F02233_PowerOfLiquidators ? F02233_PowerOfLiquidators : moduleContext.moduleName + '.' + 'F02233_PowerOfLiquidators')
    public set powerOfLiquidators(val: F02233_PowerOfLiquidators) {
        this._powerOfLiquidators = val;
    }

    public get powerOfLiquidators(): F02233_PowerOfLiquidators {
        return this._powerOfLiquidators;
    }


    @observable private _powerOfTrustees: F02234_PowerOfTrustees = null;

    @TypeSystem.propertyDecorator(F02234_PowerOfTrustees ? F02234_PowerOfTrustees : moduleContext.moduleName + '.' + 'F02234_PowerOfTrustees')
    public set powerOfTrustees(val: F02234_PowerOfTrustees) {
        this._powerOfTrustees = val;
    }

    public get powerOfTrustees(): F02234_PowerOfTrustees {
        return this._powerOfTrustees;
    }


    constructor(obj?: any) {
        super(obj)

        this.copyFrom(obj);
    }
}