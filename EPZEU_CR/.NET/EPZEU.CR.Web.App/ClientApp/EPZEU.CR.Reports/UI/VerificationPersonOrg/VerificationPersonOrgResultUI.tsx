import * as React from "react";
import { observer } from "mobx-react";
import { BaseProps } from "Cnsys.UI.React";
import { EPZEUBaseComponent } from "EPZEU.Core";
import { VerificationPersonOrgResult } from "../../Models/VerificationPersonOrgResult";
import { PhysicalOrCompanyObj } from "../../Models/ModelsAutoGenerated";
import { VerificationPersonOrgResultFilters } from "../../Models/Enums";
import { VerificationPersonOrgResultRowUI } from "./VerificationPersonOrgResultRowUI";

interface VerificationPersonOrgResultUIProps extends BaseProps {
    includeHistory: boolean
}

@observer export class VerificationPersonOrgResultUI extends EPZEUBaseComponent<VerificationPersonOrgResultUIProps, VerificationPersonOrgResult> {

    constructor(props: VerificationPersonOrgResultUIProps) {
        super(props);
    }

    render(): JSX.Element {
        if (!this.model || !this.model.items || this.model.items.length == 0) return null;

        let firstItem = this.model.items[0];
        let isRowExpanded = this.model.items.length == 1;
        let searchType: VerificationPersonOrgResultFilters = firstItem.isPhysical ? VerificationPersonOrgResultFilters.PhysicalForm : VerificationPersonOrgResultFilters.CompanyForm;

        return (
            <div className="table-responsive-block">
                <table className="table table-borderless table-striped table-hover table-collapsible">
                    <thead className={searchType == VerificationPersonOrgResultFilters.PhysicalForm ? "thead-invisible" : ""}>
                        <tr>
                            <th className="single-icon-td"></th>
                            {searchType == VerificationPersonOrgResultFilters.PhysicalForm ? <th></th> : <th style={{ width: '80%' }}>{this.getResource('CR_GL_COMPANY_NAME_L')}</th>}
                            {searchType == VerificationPersonOrgResultFilters.PhysicalForm ? null : <th>{this.getResource('CR_GL_COMPANY_ID_L')}</th>}
                        </tr>
                    </thead>

                    <tbody>
                        {this.model.items.map((item: PhysicalOrCompanyObj, idx: number) => {
                            return <VerificationPersonOrgResultRowUI key={`${item.ident}_${idx}`}
                                {...this.bind(item, this.props.viewMode)}
                                isOdd={idx % 2 == 0 ? false : true}
                                includeHistory={true}
                                initalExpand={isRowExpanded} />
                        })}
                    </tbody>
                </table>
            </div>);
    }
}