<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>bg.registryagency.epzeu</groupId>
    <artifactId>property-register</artifactId>
    <packaging>pom</packaging>
    <version>v.0.9.2.30</version>
    <name>Property Register Portal</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.5.RELEASE</version>
    </parent>

    <modules>
        <module>pr-web</module>
        <module>pr-domain</module>
        <module>pr-application</module>
        <module>pr-integration</module>
    </modules>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://nexus.cnsys.plc/repository/central/</url>
        </repository>
        <repository>
            <id>public-repo</id>
            <name>Nexus Public Repository</name>
            <url>https://nexus.cnsys.plc/repository/public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <layout>default</layout>
        </repository>
    </repositories>

    <properties>
        <!-- Build properties -->
        <java.version>11</java.version>
        <node.version>v10.16.3</node.version>
        <yarn.version>v1.17.3</yarn.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Dependency versions -->
        <nimbus.jose.jwt.version>8.9</nimbus.jose.jwt.version>
        <net.minidev.json.smart.version>2.3</net.minidev.json.smart.version>
        <problem-spring-web.version>0.25.2</problem-spring-web.version>
        <failsafe.version>2.3.3</failsafe.version>
        <grpc.version>1.27.2</grpc.version>
        <oracle.drivers.version>11.2.0.3</oracle.drivers.version>
        <logstash-logback-encoder.version>6.3</logstash-logback-encoder.version>
        <springdoc-openapi.version>1.3.8</springdoc-openapi.version>
        <json-api.version>1.1.4</json-api.version>
        <javax.json.version>1.0.4</javax.json.version>
        <apache.tika.version>1.23</apache.tika.version>

        <!-- Plugin versions -->
        <frontend-maven-plugin.version>1.7.5</frontend-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--Problem support - library which helps with exception translation to api clients-->
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>problem-spring-web</artifactId>
                <version>${problem-spring-web.version}</version>
            </dependency>
            <!-- Oracle Advanced Queue API-->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>aqapi</artifactId>
                <version>${oracle.drivers.version}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>orai18n</artifactId>
                <version>${oracle.drivers.version}</version>
            </dependency>
            <!--Database for jms queue-->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${oracle.drivers.version}</version>
            </dependency>
<!--            <dependency>-->
<!--                <groupId>com.oracle.database.jdbc</groupId>-->
<!--                <artifactId>ojdbc10</artifactId>-->
<!--                <version>19.7.0.0</version>-->
<!--            </dependency>-->
<!--            &lt;!&ndash; Oracle Advanced Queue API&ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>com.oracle.database.messaging</groupId>-->
<!--                <artifactId>aqapi</artifactId>-->
<!--                <version>19.3.0.0</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>com.oracle.database.nls</groupId>-->
<!--                <artifactId>orai18n</artifactId>-->
<!--                <version>19.7.0.0</version>-->
<!--            </dependency>-->
            <!--JWT-->
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus.jose.jwt.version}</version>
            </dependency>
            <!-- Fixes a bug with dependency to SNAPSHOT version in nimbus-jose-jwt 8.9-->
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>${net.minidev.json.smart.version}</version>
            </dependency>
            <!-- Library for handling failures. Supports retries, circuit breakers,
            fallbacks, execution context, event listeners and so on-->
<!--            TODO failsave remove usage of this dependency-->
            <dependency>
                <groupId>net.jodah</groupId>
                <artifactId>failsafe</artifactId>
                <version>${failsafe.version}</version>
            </dependency>
            <!--gRPC libraries used for generation of api for rate limiting -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${apache.tika.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>${apache.tika.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>dev-vm</id>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>dev-vm</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>**/**.properties</exclude><!--Not needed properties files this profile uses external prop files-->
                            <exclude>/xsd/**</exclude><!--Excludes XSDs because we include them in root deployment items(web modules)-->
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>qa</id>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>qa</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>**/**.properties</exclude><!--Not needed properties files this profile uses external prop files-->
                            <exclude>/xsd/**</exclude><!--Excludes XSDs because we include them in root deployment items(web modules)-->
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>staging</id>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>staging</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>**/**.properties</exclude><!--Not needed properties files this profile uses external prop files-->
                            <exclude>/xsd/**</exclude><!--Excludes XSDs because we include them in root deployment items(web modules)-->
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!-- default Spring profiles -->
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>**/**.properties</exclude><!--Not needed properties files this profile uses external prop files-->
                            <exclude>/xsd/**</exclude><!--Excludes XSDs because we include them in root deployment items(web modules)-->
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <!-- Special profile for the docker image combining the dev-vm, qa, staging and prod profiles -->
            <!-- When conflict the preferred settings should be from QA profile -->
            <id>docker</id>
            <properties>
                <!-- default Spring profiles. Set the value through JAVA_OPTS or as a command line parameter -->
                <spring.profiles.active>qa</spring.profiles.active>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>**/**.properties</exclude><!--Not needed properties files this profile uses external prop files-->
                            <exclude>/xsd/**</exclude><!--Excludes XSDs because we include them in root deployment items(web modules)-->
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </build>
</project>
