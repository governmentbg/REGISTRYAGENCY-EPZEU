{
  "openapi": "3.0.1",
  "info": {
    "title": "EPZEU.CR.Web.App",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/EPZEU.CR.Web.App"
    }
  ],
  "paths": {
    "/api/ApplicationProcesses": {
      "get": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за изчитане на процес по заявяване.",
        "operationId": "ApplicationProcesses",
        "parameters": [
          {
            "name": "applType",
            "in": "query",
            "description": "Тип на заявление.",
            "schema": {
              "type": "integer",
              "description": "Тип на заявление.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за създаване на процес по заявяване.",
        "operationId": "ApplicationProcesses2",
        "requestBody": {
          "description": "Заявка за създаване на процес по заявяване.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}": {
      "get": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за изчитане на процес по заявяване.",
        "operationId": "ApplicationProcesses3",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "loadAllData",
            "in": "query",
            "description": "Флаг указващ дали да се заредят всички данни.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се заредят всички данни.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за изтриване на процес по заявяване.",
        "operationId": "ApplicationProcesses4",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/AddChildProcess": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за добавяне на подпроцес.",
        "operationId": "AddChildProcess",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес.",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Заявка за създаване на заявление",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationProcess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/Applications/{applID}": {
      "get": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за изчитане на заявление",
        "operationId": "Applications",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за обновяване на съдържанието на заявление.",
        "operationId": "Applications2",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Съдържание на заявление.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Съдържание на заявление.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonElement"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Съдържание на заявление.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonElement"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Съдържание на заявление.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonElement"
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "description": "Съдържание на заявление.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonElement"
                  }
                ]
              }
            },
            "text/xml": {
              "schema": {
                "description": "Съдържание на заявление.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonElement"
                  }
                ]
              }
            },
            "application/*+xml": {
              "schema": {
                "description": "Съдържание на заявление.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/JsonElement"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за изтриване на заявление.",
        "operationId": "Applications3",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/Applications": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за създаване на заявление.",
        "operationId": "Applications4",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Заявка за създаване на заявление.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за създаване на заявление",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/Applications/{applID}/AttachedDocuments": {
      "get": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Връща всички прикачени документи за заявление",
        "operationId": "AttachedDocumentsAll",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатори на заявления.",
            "schema": {
              "type": "integer",
              "description": "Идентификатори на заявления.",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Прикачен документ.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Прикачен документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Прикачен документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Прикачен документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "description": "Прикачен документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "text/xml": {
              "schema": {
                "description": "Прикачен документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/*+xml": {
              "schema": {
                "description": "Прикачен документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операзия за добавяне на документ към заявление",
        "operationId": "AttachedDocuments",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Документ.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "text/xml": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/*+xml": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/Applications/{applID}/AttachedDocuments/WithContent": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операзия за добавяне на документ към заявление",
        "operationId": "WithContent",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          },
          {
            "name": "Guid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DocumentTypeID",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsOriginal",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReusedIncomingNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FileMetadata.Guid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FileMetadata.GuidSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FileMetadata.FileName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FileMetadata.FileNameSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FileMetadata.ContentType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FileMetadata.ContentTypeSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FileMetadata.Size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "FileMetadata.SizeAttribute",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FileMetadata.SizeAttributeSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FileMetadata.HashAlgorithm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FileMetadata.HashAlgorithmSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FileMetadata.NumberOfPages",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "FileMetadata.NumberOfPagesAttribute",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FileMetadata.NumberOfPagesAttributeSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "FileMetadata.Hash",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte",
              "nullable": true
            }
          },
          {
            "name": "FileName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ContentType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "HashAlgorithm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Hash",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte",
              "nullable": true
            }
          },
          {
            "name": "NumberOfPages",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "ApplicationDocumentID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "HtmlTemplateContent",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SigningGuid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "IsActWithErasedPersonalData",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Файлово съдържание.",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDocument"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/Applications/{applID}/AttachedDocuments/{applDocID}": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операзия за обновяване на данните за документ към заявление",
        "operationId": "AttachedDocuments2",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          },
          {
            "name": "applDocID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на документ към заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на документ към заявление.",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Документ.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "text/xml": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            },
            "application/*+xml": {
              "schema": {
                "description": "Документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AttachedDocument"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операзия за изтриване на документ от заявление.",
        "operationId": "AttachedDocuments3",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          },
          {
            "name": "applDocID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на документ към заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на документ към заявление.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/Applications/{applID}/AttachedDocuments/{applDocID}/StartSigning": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за стартиране на процес по подписване на документ прикачен към заявление.",
        "operationId": "StartSigning",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          },
          {
            "name": "applID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на заявление.",
              "format": "int64"
            }
          },
          {
            "name": "applDocID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на документ към заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на документ към заявление.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/Obligations": {
      "get": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за извличане на плащания по заявление.",
        "operationId": "Obligations",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObligationInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObligationInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObligationInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObligationInfo"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObligationInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/StartSigning": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за стартиране на процес по подписаване на заявлението.",
        "operationId": "StartSigning2",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/StartSending": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за стартира порцеса по изпращане на заявлението.",
        "operationId": "StartSending",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес по заявяване.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес по заявяване.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ApplicationProcesses/{processID}/ReturnToBeginningStatus": {
      "post": {
        "tags": [
          "ApplicationProcesses"
        ],
        "summary": "Операция за връщане към начален статус.",
        "operationId": "ReturnToBeginningStatus",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на процес.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessStatuses"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessStatuses"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessStatuses"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessStatuses"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessStatuses"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/Applications/{incomingNumber}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за изчитане на заявления.",
        "operationId": "Applications5",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "query",
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          },
          {
            "name": "entryNumber",
            "in": "query",
            "description": "Номер на вписване.",
            "schema": {
              "type": "string",
              "description": "Номер на вписване.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/{incomingNumber}/Form": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за изчитане на данни за заявление.",
        "operationId": "Form",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "path",
            "required": true,
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFormBase"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFormBase"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFormBase"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFormBase"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationFormBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/{incomingNumber}/Documents": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за изчитане на данни за приложени документи.",
        "operationId": "DocumentsAll",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "path",
            "required": true,
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          },
          {
            "name": "entryDate",
            "in": "query",
            "description": "Дата на входиране.",
            "schema": {
              "type": "string",
              "description": "Дата на входиране.",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/{incomingNumber}/OutgoingDocuments": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операцияза изчитане на изходящ документ към заявление.",
        "operationId": "OutgoingDocuments",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "path",
            "required": true,
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          },
          {
            "name": "outgoingGuid",
            "in": "query",
            "description": "Изходящ гуид.",
            "schema": {
              "type": "string",
              "description": "Изходящ гуид.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutgoingDocument"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutgoingDocument"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutgoingDocument"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/Transformations": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за изчитане на заявления - преобразувания.",
        "operationId": "Transformations",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "От дата.",
            "schema": {
              "type": "string",
              "description": "От дата.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "До дата.",
            "schema": {
              "type": "string",
              "description": "До дата.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "description": "Фирма/Наименование.",
            "schema": {
              "type": "string",
              "description": "Фирма/Наименование.",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/DocumentsWithoutDeed": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за изчитане на документи без партида.",
        "operationId": "DocumentsWithoutDeed",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "description": "От дата.",
            "schema": {
              "type": "string",
              "description": "От дата.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "До дата.",
            "schema": {
              "type": "string",
              "description": "До дата.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "description": "Фирма/Наименование.",
            "schema": {
              "type": "string",
              "description": "Фирма/Наименование.",
              "nullable": true
            }
          },
          {
            "name": "IncomingNumber",
            "in": "query",
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          },
          {
            "name": "Status",
            "in": "query",
            "description": "Ресултат.",
            "schema": {
              "description": "Ресултат.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/ApplicationStatuses"
                }
              ]
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/Entries": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Справка 'Вписвания, заличавания и обявявания'",
        "operationId": "Entries",
        "parameters": [
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EntryNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/Entries/Bankruptcies": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Справка 'Справка несъстоятелност'",
        "operationId": "Bankruptcies",
        "parameters": [
          {
            "name": "UIC",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BankruptcyEntryType",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/BankruptcyEntriesTypes"
                }
              ]
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EntryNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Applications/Entries/Liquidations": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Справка 'Търговци/ЮЛНЦ в ликвидация'",
        "operationId": "Liquidations",
        "parameters": [
          {
            "name": "UIC",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EntryNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Entry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignments/{incomingNumber}-{docNumber}/{outgoingDate}/Assignment": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "summary": "Операция за изчитане на назначенията.",
        "operationId": "Assignment",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "path",
            "required": true,
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          },
          {
            "name": "docNumber",
            "in": "path",
            "required": true,
            "description": "Номер на документа.",
            "schema": {
              "type": "integer",
              "description": "Номер на документа.",
              "format": "int32"
            }
          },
          {
            "name": "outgoingDate",
            "in": "path",
            "required": true,
            "description": "Дата на изходящ номер.",
            "schema": {
              "type": "string",
              "description": "Дата на изходящ номер.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignments/AssignmentMasterApplications": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "summary": "Операция за изчитане на назначенията.",
        "operationId": "AssignmentMasterApplications",
        "parameters": [
          {
            "name": "UIC",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncomingNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Mode",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/MasterAssignmentSearchSearchMode"
                }
              ]
            }
          },
          {
            "name": "OutgoingIncomingNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OutgoingSeqNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OutgoingNumberDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IncludeAll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "GetOnlyAssWithoutDeed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/Assignments/DocumentsWithoutAppointment": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "summary": "Справка Документи без назначение.",
        "operationId": "DocumentsWithoutAppointment",
        "parameters": [
          {
            "name": "IncomingNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ApplicationFormType",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/ApplicationFormTypes"
                }
              ]
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Bulstats/{uic}/Summary": {
      "get": {
        "tags": [
          "Bulstats"
        ],
        "summary": "Операзия за изчитане на данни за фирма.",
        "operationId": "SummaryAll",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК",
            "schema": {
              "type": "string",
              "description": "ЕИК",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulstatSummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulstatSummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulstatSummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulstatSummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulstatSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Communications/Accept": {
      "post": {
        "tags": [
          "Communications"
        ],
        "summary": "Операция за приемане на комуникация.",
        "operationId": "Accept",
        "requestBody": {
          "description": "Искане за изправяне на грешка при сканиране.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Искане за изправяне на грешка при сканиране.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Искане за изправяне на грешка при сканиране.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Искане за изправяне на грешка при сканиране.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "description": "Искане за изправяне на грешка при сканиране.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                ]
              }
            },
            "text/xml": {
              "schema": {
                "description": "Искане за изправяне на грешка при сканиране.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                ]
              }
            },
            "application/*+xml": {
              "schema": {
                "description": "Искане за изправяне на грешка при сканиране.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Communications/Search/{incomingNumber}/Communication": {
      "get": {
        "tags": [
          "Communications"
        ],
        "summary": "Операция за търсене на комуникации.",
        "operationId": "Communication",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "path",
            "required": true,
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestForCorrectionForScanning"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Communications/Load/{incomingNumber}/ApplicationInfo": {
      "get": {
        "tags": [
          "Communications"
        ],
        "summary": "Операция за зареждане на данни за заявление.",
        "operationId": "ApplicationInfo",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "path",
            "required": true,
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Companies/Summary": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Операция за изчитане на основни данни за фирми.",
        "operationId": "Summary",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "query",
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          },
          {
            "name": "entryNumber",
            "in": "query",
            "description": "Номер на вписване.",
            "schema": {
              "type": "string",
              "description": "Номер на вписване.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanySummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Companies/GetTransformationInfo/{incomingNumber}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Операция за изчитане на данни за преобразуване.",
        "operationId": "GetTransformationInfo",
        "parameters": [
          {
            "name": "incomingNumber",
            "in": "path",
            "required": true,
            "description": "Входящ номер.",
            "schema": {
              "type": "string",
              "description": "Входящ номер.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationSummary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationSummary"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationSummary"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Companies/GetReservedCompany/{clearName}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Операция за изчитане на данни за запазено име на фирма.",
        "operationId": "GetReservedCompany",
        "parameters": [
          {
            "name": "clearName",
            "in": "path",
            "required": true,
            "description": "Пълно име на фирма",
            "schema": {
              "type": "string",
              "description": "Пълно име на фирма",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfo"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Companies/CompanyCases/{uic}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Операция за изчитане на фирмено дело",
        "operationId": "CompanyCases",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNodeCollection"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNodeCollection"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNodeCollection"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNodeCollection"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TreeNodeCollection"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на данни за партида.",
        "operationId": "Deeds",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "entryDate",
            "in": "query",
            "description": "Дата на вписване.",
            "schema": {
              "type": "string",
              "description": "Дата на вписване.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "loadFieldsFromAllLegalForms",
            "in": "query",
            "description": "Флаг указващ дали да се заредят полета за всички правни  форми.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се заредят полета за всички правни  форми.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/TRRULNCRepresentatives": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на TRULNC представители.",
        "operationId": "TRRULNCRepresentatives",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК",
            "schema": {
              "type": "string",
              "description": "ЕИК",
              "nullable": true
            }
          },
          {
            "name": "ident",
            "in": "query",
            "description": "Идентификатор",
            "schema": {
              "type": "string",
              "description": "Идентификатор",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/{ident}/TRRULNCRepresentatives": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на TRULNC представители.",
        "operationId": "TRRULNCRepresentatives2",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК",
            "schema": {
              "type": "string",
              "description": "ЕИК",
              "nullable": true
            }
          },
          {
            "name": "ident",
            "in": "path",
            "required": true,
            "description": "Идентификатор",
            "schema": {
              "type": "string",
              "description": "Идентификатор",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Deed"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/DeedFieldIdents": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на идентификатори на партиди.",
        "operationId": "DeedFieldIdents",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "entryDate",
            "in": "query",
            "description": "Дата на входиране.",
            "schema": {
              "type": "string",
              "description": "Дата на входиране.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "includeHistory",
            "in": "query",
            "description": "Флаг указващ дали да се включи история.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се включи история.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/PreservedNames": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на данни за справка \"Списък със запазени фирми/ наименования\"",
        "operationId": "PreservedNames",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CompanyFirstLatter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortColumnOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortColumnsWithOrder"
                }
              ]
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfoVM"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfoVM"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfoVM"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfoVM"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyInfoVM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/RightsCompanies": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Справки за права върху фирма/ наименование",
        "operationId": "RightsCompanies",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtectedRightsCompanyInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtectedRightsCompanyInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtectedRightsCompanyInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtectedRightsCompanyInfo"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProtectedRightsCompanyInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/Summary": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Търсене по юридическо лице.",
        "operationId": "Summary2",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Ident",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncludeHistory",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/Subjects": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Търсене по физическо лице",
        "operationId": "Subjects",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Ident",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncludeHistory",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalOrCompanyObj"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/SubjectInFields": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Справка по физическо или юридическо лицe",
        "operationId": "SubjectInFields",
        "parameters": [
          {
            "name": "UID",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchInHistory",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SubjectInFieldTypes"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectInFieldItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectInFieldItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectInFieldItem"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectInFieldItem"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubjectInFieldItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/BulstatDeeds": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Търсене на Пререгистрирани търговци/ ЮЛНЦ.",
        "operationId": "BulstatDeeds",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "description": "От дата.",
            "schema": {
              "type": "string",
              "description": "От дата.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "description": "До Дата.",
            "schema": {
              "type": "string",
              "description": "До Дата.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CourtNumber",
            "in": "query",
            "description": "Код на съд.",
            "schema": {
              "type": "integer",
              "description": "Код на съд.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/VerificationActs/{uic}": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Справка вписано обстоятелство или обявен акт.",
        "operationId": "VerificationActs",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "includeHistory",
            "in": "query",
            "description": "Флаг указващ дали да се включи история.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се включи история.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationActsSubSearchCriteriaResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationActsSubSearchCriteriaResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationActsSubSearchCriteriaResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationActsSubSearchCriteriaResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationActsSubSearchCriteriaResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/VerificationActs/{uic}/ActiveCondition": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Справка за вписано обстоятелство или обявен акт",
        "operationId": "ActiveCondition",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "SelectedFields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncludeHistory",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeedVM"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/Summary": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на основни данни за партида.",
        "operationId": "Summary3",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DeedSummary"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeedSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeedSummary"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeedSummary"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeedSummary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/Seat": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на данни за седалище.",
        "operationId": "Seat",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/F005_Seat"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/F005_Seat"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/F005_Seat"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/F005_Seat"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/F005_Seat"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/CompanyBranches": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на данни за клонове на фирма.",
        "operationId": "CompanyBranches",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/SubDeeds/{subUICType}/Summary": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на данни за раздел.",
        "operationId": "Summary4",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "subUICType",
            "in": "path",
            "required": true,
            "description": "Тип раздел.",
            "schema": {
              "description": "Тип раздел.",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SubUICTypes"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubDeedSummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubDeedSummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubDeedSummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubDeedSummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubDeedSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/SubDeeds/{subUICType}/Fields/{fieldIdent}/History": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на история на полета.",
        "operationId": "HistoryAll",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "subUICType",
            "in": "path",
            "required": true,
            "description": "Тип раздел.",
            "schema": {
              "description": "Тип раздел.",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SubUICTypes"
                }
              ]
            }
          },
          {
            "name": "subUic",
            "in": "query",
            "description": "Идентификатор на раздел.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на раздел.",
              "nullable": true
            }
          },
          {
            "name": "fieldIdent",
            "in": "path",
            "required": true,
            "description": "Идентификатор на поле.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на поле.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/SubDeeds/{subUICType}/{subUic}/Fields/{fieldIdent}/History": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на история на полета.",
        "operationId": "History",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "subUICType",
            "in": "path",
            "required": true,
            "description": "Тип раздел.",
            "schema": {
              "description": "Тип раздел.",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SubUICTypes"
                }
              ]
            }
          },
          {
            "name": "subUic",
            "in": "path",
            "required": true,
            "description": "Идентификатор на раздел.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на раздел.",
              "nullable": true
            }
          },
          {
            "name": "fieldIdent",
            "in": "path",
            "required": true,
            "description": "Идентификатор на поле.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на поле.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Field"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/SubDeeds/{subUICType}/Fields/{fieldIdent}/Documents": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на документи към поле.",
        "operationId": "Documents",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "subUICType",
            "in": "path",
            "required": true,
            "description": "Тип раздел.",
            "schema": {
              "description": "Тип раздел.",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SubUICTypes"
                }
              ]
            }
          },
          {
            "name": "subUic",
            "in": "query",
            "description": "Идентификатор на раздел.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на раздел.",
              "nullable": true
            }
          },
          {
            "name": "fieldIdent",
            "in": "path",
            "required": true,
            "description": "Идентификатор на поле.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на поле.",
              "nullable": true
            }
          },
          {
            "name": "entryDate",
            "in": "query",
            "description": "Дата на вписване.",
            "schema": {
              "type": "string",
              "description": "Дата на вписване.",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/SubDeeds/{subUICType}/{subUic}/Fields/{fieldIdent}/Documents": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на документи към поле.",
        "operationId": "Documents2",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "subUICType",
            "in": "path",
            "required": true,
            "description": "Тип раздел.",
            "schema": {
              "description": "Тип раздел.",
              "allOf": [
                {
                  "$ref": "#/components/schemas/SubUICTypes"
                }
              ]
            }
          },
          {
            "name": "subUic",
            "in": "path",
            "required": true,
            "description": "Идентификатор на раздел.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на раздел.",
              "nullable": true
            }
          },
          {
            "name": "fieldIdent",
            "in": "path",
            "required": true,
            "description": "Идентификатор на поле.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на поле.",
              "nullable": true
            }
          },
          {
            "name": "entryDate",
            "in": "query",
            "description": "Дата на вписване.",
            "schema": {
              "type": "string",
              "description": "Дата на вписване.",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/{uic}/Applications": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на фирмено дело.",
        "operationId": "ApplicationsAll",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "description": "ЕИК.",
            "schema": {
              "type": "string",
              "description": "ЕИК.",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/Statements": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на изявление.",
        "operationId": "Statements",
        "parameters": [
          {
            "name": "Mode",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/StatementSearchModes"
                }
              ]
            }
          },
          {
            "name": "FieldIdents",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FromActionDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToActionDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statement"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statement"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statement"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statement"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statement"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/Stabilization": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Изчитане на партиди в стабилизация.",
        "operationId": "Stabilization",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "UIC",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeedSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/NotificationsUnderNPO": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на уведомления под НПО.",
        "operationId": "NotificationsUnderNPO",
        "parameters": [
          {
            "name": "UIC",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntryDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EntryDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "NotificationType",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationTypes"
                }
              ]
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/Deeds/DeedNotifications": {
      "get": {
        "tags": [
          "Deeds"
        ],
        "summary": "Операция за изчитане на уведомления към партида.",
        "operationId": "DeedNotifications",
        "parameters": [
          {
            "name": "UIC",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntryDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EntryDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "NotificationType",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/NotificationTypes"
                }
              ]
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/Draft/{docGuid}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Операция за изчитане на данни за документ за неподадено заявление.",
        "operationId": "DownloadDocumentDraft",
        "parameters": [
          {
            "name": "docGuid",
            "in": "path",
            "required": true,
            "description": ">Уникален идентификатор на документ.",
            "schema": {
              "type": "string",
              "description": ">Уникален идентификатор на документ.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/{docGuid}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Операция за изчитане на данни за документ.",
        "operationId": "DownloadDocument",
        "parameters": [
          {
            "name": "docGuid",
            "in": "path",
            "required": true,
            "description": "Уникален идентификатор на документ.",
            "schema": {
              "type": "string",
              "description": "Уникален идентификатор на документ.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Documents/{uic}/{docGuid}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "operationId": "DownloadCompanyCaseFileDocument",
        "parameters": [
          {
            "name": "uic",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "docGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/ErrorHandling": {
      "post": {
        "tags": [
          "ErrorHandling"
        ],
        "summary": "Операция за създаване на запис с грешката.",
        "operationId": "ErrorHandling",
        "requestBody": {
          "description": "Съобщението, което трябва да се запише.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Съобщението, което трябва да се запише.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogMessage"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Съобщението, което трябва да се запише.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogMessage"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Съобщението, което трябва да се запише.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogMessage"
                  }
                ]
              }
            },
            "application/xml": {
              "schema": {
                "description": "Съобщението, което трябва да се запише.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogMessage"
                  }
                ]
              }
            },
            "text/xml": {
              "schema": {
                "description": "Съобщението, което трябва да се запише.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogMessage"
                  }
                ]
              }
            },
            "application/*+xml": {
              "schema": {
                "description": "Съобщението, което трябва да се запише.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogMessage"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Instructions": {
      "get": {
        "tags": [
          "Instructions"
        ],
        "summary": "Операция за изчитане на инструкции.",
        "operationId": "Instructions",
        "parameters": [
          {
            "name": "UIC",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IncomingNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveWithoutDeed",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "Mode",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/InstructionSearchMode"
                }
              ]
            }
          },
          {
            "name": "LoadIncomingLinkedDeeds",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ApplicationDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ApplicationDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortOrder"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instruction"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instruction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instruction"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instruction"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Instruction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Nomenclatures/FieldsGroupsSections": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на Полета, Групи и Раздели по правна форма.",
        "operationId": "FieldsGroupsSections",
        "parameters": [
          {
            "name": "legalForm",
            "in": "query",
            "description": "Правна форма.",
            "schema": {
              "type": "integer",
              "description": "Правна форма.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "excludeActs",
            "in": "query",
            "description": "Флаг указващ дали да изключи актовете.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да изключи актовете.",
              "nullable": true
            }
          },
          {
            "name": "getOnlyActs",
            "in": "query",
            "description": "Флаг указващ дали да вземе само актове.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да вземе само актове.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "description": "Модел на грешка.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Код.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Съобщение.",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "description": "Описва къде в кода е възникнала грешката.",
            "nullable": true
          },
          "innerErrors": {
            "type": "array",
            "description": "Вътрешни грешки.",
            "nullable": true,
            "items": {}
          }
        }
      },
      "ProcessStatuses": {
        "type": "integer",
        "description": "Типове статуси на пакета.",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ]
      },
      "ApplicationFormTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          128,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          201,
          301,
          302,
          303,
          304,
          305,
          401,
          402,
          403,
          501,
          601,
          602,
          603,
          604,
          605,
          606,
          607,
          608,
          609,
          610,
          611,
          612,
          613,
          614,
          615,
          701,
          801,
          901,
          1000,
          1101,
          1201,
          1301,
          1401,
          1501,
          1601,
          1701,
          1801,
          1901,
          2001,
          2101,
          10000
        ]
      },
      "JsonValueKind": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "JsonElement": {
        "type": "object",
        "properties": {
          "valueKind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonValueKind"
              }
            ],
            "readOnly": true
          }
        }
      },
      "Application": {
        "type": "object",
        "description": "Модел на заявление.",
        "properties": {
          "applicationID": {
            "type": "integer",
            "description": "Уникален идентификатор на заявление.",
            "format": "int64",
            "nullable": true
          },
          "applicationProcessID": {
            "type": "integer",
            "description": "Идентификатор на данни за процеси на заявяване на услуга.",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "description": "Тип на заявление.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          },
          "order": {
            "type": "integer",
            "description": "Номер на заявлението.",
            "format": "int32",
            "nullable": true
          },
          "applicationContentID": {
            "type": "integer",
            "description": "Идентификатор на данни за съдържание на пакети (JSON).",
            "format": "int64",
            "nullable": true
          },
          "content": {
            "description": "Съдържание.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonElement"
              }
            ]
          },
          "additionalData": {
            "type": "object",
            "description": "Допълнителни данни.",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ApplicationProcess": {
        "type": "object",
        "description": "Модел на данни за процеси на заявяване на услуга.",
        "properties": {
          "applicationProcessID": {
            "type": "integer",
            "description": "Уникален идентификатор на данни за процеси на заявяване на услуга.",
            "format": "int64",
            "nullable": true
          },
          "uic": {
            "type": "string",
            "description": "ЕИК.",
            "nullable": true
          },
          "applicantID": {
            "type": "integer",
            "description": "Идентификатор на заявителя.",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "description": "Статус на пакета: 1 - in_process; 2 - signing; 3 - signed;.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessStatuses"
              }
            ]
          },
          "mainApplicationID": {
            "type": "integer",
            "description": "Идентификатор на основно заявление.",
            "format": "int64",
            "nullable": true
          },
          "mainApplicationType": {
            "description": "Тип на основно заявление.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          },
          "signingGuid": {
            "type": "string",
            "description": "Идентификатор на заявката за подписване в модула за подписване.",
            "format": "uuid",
            "nullable": true
          },
          "parentApplicationProcessID": {
            "type": "integer",
            "description": "Уникален идентификатор родителския процес за заявяване на услуга.",
            "format": "int64",
            "nullable": true
          },
          "childApplicationProcesses": {
            "type": "array",
            "description": "Списък със под процесите по заявяване на услуга.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ApplicationProcess"
            }
          },
          "applications": {
            "type": "array",
            "description": "Списък със заявления.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Application"
            }
          },
          "hasChangeInApplicationsInitialData": {
            "type": "boolean",
            "description": "Флаг указващ, дали има промяна в първоначалните данни на заявлението."
          },
          "hasChangesInApplicationsNomenclature": {
            "type": "boolean",
            "description": "Фла указващ, дали има промяна в номенклатурите след създаване на черновата."
          },
          "errorMessage": {
            "type": "string",
            "description": "Съобщение за грешка при обработката на процеса",
            "nullable": true
          },
          "incomingNumber": {
            "type": "string",
            "description": "Входящ номер на заявлението в CR",
            "nullable": true
          }
        }
      },
      "ApplicationRequest": {
        "type": "object",
        "description": "Заявка за създаване на заявление",
        "properties": {
          "additionalData": {
            "type": "object",
            "description": "Допълнителни данни",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "applicationType": {
            "description": "Тип на заявлението",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          }
        }
      },
      "AttachedDocument": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "nullable": true
          },
          "documentTypeID": {
            "type": "string",
            "nullable": true
          },
          "isOriginal": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reusedIncomingNumber": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hashAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "hash": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "numberOfPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "applicationDocumentID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "htmlTemplateContent": {
            "type": "string",
            "nullable": true
          },
          "signingGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isActWithErasedPersonalData": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ObligationStatuses": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ]
      },
      "Registers": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2
        ]
      },
      "ObligationInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "obligationNumber": {
            "type": "integer",
            "format": "int64"
          },
          "obligationAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ObligationStatuses"
              }
            ]
          },
          "paidAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "reversalAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "applicationNumber": {
            "type": "string",
            "nullable": true
          },
          "applicationType": {
            "type": "string",
            "nullable": true
          },
          "register": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "callbackAddressID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "freeOfCharge": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ApplicationStatuses": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          101,
          102,
          103,
          104,
          105,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          114,
          115
        ]
      },
      "PassedFrom": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "ApplicationState": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "RefusalTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          -1
        ]
      },
      "LegalForms": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27
        ]
      },
      "DeedStatuses": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "CompanyNameSuffixFlags": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8
        ]
      },
      "ElementHolderAdditionFlags": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "DeedSummary": {
        "type": "object",
        "properties": {
          "uic": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyFullName": {
            "type": "string",
            "nullable": true
          },
          "legalForm": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LegalForms"
              }
            ]
          },
          "status": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DeedStatuses"
              }
            ]
          },
          "hasCompanyCases": {
            "type": "boolean",
            "nullable": true
          },
          "courtNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "caseYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "companyNameSuffixFlag": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyNameSuffixFlags"
              }
            ]
          },
          "elementHolderAdditionFlag": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ElementHolderAdditionFlags"
              }
            ]
          }
        }
      },
      "ApplicationInfo": {
        "type": "object",
        "description": "Информация за заявление.",
        "properties": {
          "incomingNumberWithCtx": {
            "type": "string",
            "description": "Входящ номер на заявление с контекстна информация.",
            "nullable": true
          },
          "incomingNumber": {
            "type": "string",
            "description": "Входящ номер на заявление.",
            "nullable": true
          },
          "applicationTypeName": {
            "type": "string",
            "description": "Име на типа на заявлението.",
            "nullable": true
          },
          "applicationType": {
            "description": "Тип на заявление.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          },
          "applicationStatus": {
            "description": "Статус на заявлението.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationStatuses"
              }
            ]
          },
          "passedFrom": {
            "description": "Място на подаване на заявлението.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PassedFrom"
              }
            ]
          },
          "applicationState": {
            "description": "Статус на пакета",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationState"
              }
            ]
          },
          "officeName": {
            "type": "string",
            "description": "Име на офиса",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "description": "Дата на входиране на заявление.",
            "format": "date-time",
            "nullable": true
          },
          "entryNumber": {
            "type": "string",
            "description": "Входящ номер на заявлението",
            "nullable": true
          },
          "refusalType": {
            "description": "Вид на отказа ако иама отказ",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/RefusalTypes"
              }
            ]
          },
          "outgoingNumber": {
            "type": "string",
            "description": "Номер на изходящ документ",
            "nullable": true
          },
          "resultHTML": {
            "type": "string",
            "description": "HTML резилтат от изпълнението на заявлението.",
            "nullable": true
          },
          "incomingLinkedDeeds": {
            "type": "array",
            "description": "Партиди подадени за вписване в заявлението",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeedSummary"
            }
          },
          "entryDeeds": {
            "type": "array",
            "description": "Партиди по които заявлението вписва данни",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeedSummary"
            }
          },
          "hasRequestsForCorrectionForScanning": {
            "type": "boolean",
            "description": "Дали има активна комуникация за текущата регистрация",
            "nullable": true
          }
        }
      },
      "IndentTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "PersonType": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1
        ]
      },
      "Person": {
        "type": "object",
        "properties": {
          "indent": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "indentType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/IndentTypes"
              }
            ]
          },
          "countryID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "competentAuthorityForRegistration": {
            "type": "string",
            "nullable": true
          },
          "registrationNumber": {
            "type": "string",
            "nullable": true
          },
          "foreignRegisterCode": {
            "type": "string",
            "nullable": true
          },
          "foreignLegalFormCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "countryCodeBRIS": {
            "type": "string",
            "nullable": true
          },
          "legalForm": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "isForeignTrader": {
            "type": "boolean",
            "nullable": true
          },
          "nameAndLegalFormText": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonType"
              }
            ]
          }
        }
      },
      "BirthPlace": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "place": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "countryID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "isForeign": {
            "type": "boolean",
            "nullable": true
          },
          "districtID": {
            "type": "integer",
            "description": "област",
            "format": "int64",
            "nullable": true
          },
          "districtEkatte": {
            "type": "string",
            "nullable": true
          },
          "district": {
            "type": "string",
            "nullable": true
          },
          "municipalityid": {
            "type": "integer",
            "description": "община",
            "format": "int64",
            "nullable": true
          },
          "municipalityEkatte": {
            "type": "string",
            "nullable": true
          },
          "municipality": {
            "type": "string",
            "nullable": true
          },
          "settlementID": {
            "type": "integer",
            "description": "населено място",
            "format": "int64",
            "nullable": true
          },
          "settlementEKATTE": {
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "type": "string",
            "nullable": true
          },
          "areaID": {
            "type": "integer",
            "description": "район",
            "format": "int64",
            "nullable": true
          },
          "area": {
            "type": "string",
            "nullable": true
          },
          "areaEkatte": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "foreignPlace": {
            "type": "string",
            "nullable": true
          },
          "housingEstate": {
            "type": "string",
            "description": "квартал",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "block": {
            "type": "string",
            "nullable": true
          },
          "entrance": {
            "type": "string",
            "nullable": true
          },
          "floor": {
            "type": "string",
            "nullable": true
          },
          "apartment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Passport": {
        "type": "object",
        "properties": {
          "issuedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "issuedFrom": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Deputy": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "nullable": true
          },
          "sourceDate": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Applicant": {
        "type": "object",
        "properties": {
          "person": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ]
          },
          "birthPlace": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BirthPlace"
              }
            ]
          },
          "address": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "passport": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Passport"
              }
            ]
          },
          "deputy": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Deputy"
              }
            ]
          },
          "applicantGuid": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Applicants": {
        "type": "object",
        "properties": {
          "applicantsList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Applicant"
            }
          }
        }
      },
      "ApplicantCapacity": {
        "type": "object",
        "properties": {
          "trader": {
            "type": "boolean",
            "description": "Търговец"
          },
          "lawyerWithLetter": {
            "type": "boolean",
            "description": "Адвокат и изрично пълномощно"
          },
          "anotherFace": {
            "type": "boolean",
            "description": "Друго лице в предвидените от закона случаи"
          },
          "financialAccountCreator": {
            "type": "boolean",
            "description": "Счетоводител, който подава годишен отчет"
          },
          "assignmentApplicant": {
            "type": "boolean",
            "description": "Заявител по първоначалното искане"
          },
          "assignedExpert": {
            "type": "boolean",
            "description": "Назначено лице"
          },
          "applicantLawyerWithPower": {
            "type": "boolean",
            "description": "Адвокат на заявителя с изрично пълномощно"
          },
          "procurator": {
            "type": "boolean",
            "description": "Прокурист"
          },
          "personRepresentingTheFoundation": {
            "type": "boolean",
            "description": "лице, представляващо фондацията"
          },
          "personRepresentingTheAssociation": {
            "type": "boolean",
            "description": "лице, представляващо сдружението"
          },
          "personRepresentingCommunityCentrer": {
            "type": "boolean",
            "description": "лице, представляващо читалището"
          },
          "personRepresentingBranchOfNonProfitForeignLegalEntity": {
            "type": "boolean",
            "description": "лице, представляващо клон на чуждестранно юридическо лице с нестопанска цел"
          }
        }
      },
      "ApplicantRepresentative": {
        "type": "object",
        "properties": {
          "person": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ]
          },
          "birthPlace": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BirthPlace"
              }
            ]
          },
          "address": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "passport": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Passport"
              }
            ]
          },
          "deputy": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Deputy"
              }
            ]
          }
        }
      },
      "ApplicantInfo": {
        "type": "object",
        "properties": {
          "applicants": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Applicants"
              }
            ]
          },
          "applicantCapacity": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantCapacity"
              }
            ]
          },
          "applicantRepresentative": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantRepresentative"
              }
            ]
          }
        }
      },
      "ApplicantExchange": {
        "type": "object",
        "properties": {
          "agree": {
            "type": "boolean"
          },
          "notAgree": {
            "type": "boolean"
          },
          "nrA_Art_100_1": {
            "type": "boolean",
            "nullable": true
          },
          "nrA_Art_100_2": {
            "type": "boolean",
            "nullable": true
          },
          "addresseeGuid": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "addressee": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GDPRAgreement": {
        "type": "object",
        "properties": {
          "gdprAgreementText": {
            "type": "string",
            "nullable": true
          },
          "isGDPRAgreementAccepted": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ApplicationFormBase": {
        "type": "object",
        "properties": {
          "appType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ],
            "readOnly": true
          },
          "applicantInfo": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantInfo"
              }
            ]
          },
          "applicantExchange": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantExchange"
              }
            ]
          },
          "gdprAgreement": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/GDPRAgreement"
              }
            ]
          },
          "documents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AttachedDocument"
            }
          }
        }
      },
      "FileMetadata": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "nullable": true
          },
          "guidSpecified": {
            "type": "boolean",
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileNameSpecified": {
            "type": "boolean",
            "readOnly": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "contentTypeSpecified": {
            "type": "boolean",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sizeAttribute": {
            "type": "integer",
            "format": "int64"
          },
          "sizeAttributeSpecified": {
            "type": "boolean",
            "readOnly": true
          },
          "hashAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "hashAlgorithmSpecified": {
            "type": "boolean",
            "readOnly": true
          },
          "numberOfPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "numberOfPagesAttribute": {
            "type": "integer",
            "format": "int64"
          },
          "numberOfPagesAttributeSpecified": {
            "type": "boolean",
            "readOnly": true
          },
          "hash": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        }
      },
      "ApplicationDocumentInfo": {
        "type": "object",
        "properties": {
          "guidWithCtx": {
            "type": "string",
            "description": "Уникален идентификатор на документа с контекстна информация.",
            "nullable": true
          },
          "incomingNumber": {
            "type": "string",
            "nullable": true
          },
          "originalIncomingNumber": {
            "type": "string",
            "nullable": true
          },
          "isSigned": {
            "type": "boolean",
            "nullable": true
          },
          "applicationType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "documentTypeID": {
            "type": "string",
            "nullable": true
          },
          "isOriginal": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reusedIncomingNumber": {
            "type": "string",
            "nullable": true
          },
          "fileMetadata": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FileMetadata"
              }
            ]
          }
        }
      },
      "OutgoingDocument": {
        "type": "object",
        "properties": {
          "guidWithCtx": {
            "type": "string",
            "description": "Уникален идентификатор на документа с контекстна информация.",
            "nullable": true
          },
          "outgoingNumber": {
            "type": "string",
            "nullable": true
          },
          "outgoingGuid": {
            "type": "string",
            "nullable": true
          },
          "documentTypeID": {
            "type": "string",
            "nullable": true
          },
          "fileMetadata": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FileMetadata"
              }
            ]
          }
        }
      },
      "SortOrder": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2
        ]
      },
      "Entry": {
        "type": "object",
        "description": "Входиране.",
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата.",
            "format": "date-time",
            "nullable": true
          },
          "uic": {
            "type": "string",
            "description": "ЕИК.",
            "nullable": true
          },
          "companyFullName": {
            "type": "string",
            "description": "Пълноиме на фирма.",
            "nullable": true
          }
        }
      },
      "BankruptcyEntriesTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ]
      },
      "AssignedExpertSummary": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "egn": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AssignmentSummary": {
        "type": "object",
        "properties": {
          "assignmentExpertType": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "assignmentID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "experts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignedExpertSummary"
            }
          }
        }
      },
      "MasterAssignmentSearchSearchMode": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2
        ]
      },
      "BulstatSummary": {
        "type": "object",
        "properties": {
          "uic": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "districtEkatteCode": {
            "type": "string",
            "nullable": true
          },
          "municipalityEkatteCode": {
            "type": "string",
            "nullable": true
          },
          "settlementEkatteCode": {
            "type": "string",
            "nullable": true
          },
          "areaEkatteCote": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "housingEstate": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "buildingNumber": {
            "type": "string",
            "nullable": true
          },
          "entrance": {
            "type": "string",
            "nullable": true
          },
          "buildingFloor": {
            "type": "string",
            "nullable": true
          },
          "appartment": {
            "type": "string",
            "nullable": true
          },
          "companyType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "courtCode": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "caseYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "legalForm": {
            "type": "string",
            "nullable": true
          },
          "legalFormID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "CommunicationPerson": {
        "type": "object",
        "properties": {
          "indent": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CommunicationBirthPlace": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "place": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CommunicationAddress": {
        "type": "object",
        "properties": {
          "countryID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "isForeign": {
            "type": "boolean"
          },
          "districtID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "districtEkatte": {
            "type": "string",
            "nullable": true
          },
          "district": {
            "type": "string",
            "nullable": true
          },
          "municipalityid": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "municipalityEkatte": {
            "type": "string",
            "nullable": true
          },
          "municipality": {
            "type": "string",
            "nullable": true
          },
          "settlementID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "settlementEKATTE": {
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "type": "string",
            "nullable": true
          },
          "areaID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "area": {
            "type": "string",
            "nullable": true
          },
          "areaEkatte": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "foreignPlace": {
            "type": "string",
            "nullable": true
          },
          "housingEstate": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "block": {
            "type": "string",
            "nullable": true
          },
          "entrance": {
            "type": "string",
            "nullable": true
          },
          "floor": {
            "type": "string",
            "nullable": true
          },
          "apartment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CommunicationApplicant": {
        "type": "object",
        "properties": {
          "applicantGuid": {
            "type": "string",
            "nullable": true
          },
          "person": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CommunicationPerson"
              }
            ]
          },
          "birthPlace": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CommunicationBirthPlace"
              }
            ]
          },
          "address": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CommunicationAddress"
              }
            ]
          }
        }
      },
      "CommunicationApplicantCapacity": {
        "type": "object",
        "properties": {
          "trader": {
            "type": "boolean"
          },
          "lawyerWithLetter": {
            "type": "boolean"
          },
          "anotherFace": {
            "type": "boolean"
          },
          "financialAccountCreator": {
            "type": "boolean"
          },
          "assignmentApplicant": {
            "type": "boolean"
          },
          "assignedExpert": {
            "type": "boolean"
          },
          "applicantLawyerWithPower": {
            "type": "boolean"
          },
          "procurator": {
            "type": "boolean"
          },
          "personRepresentingTheFoundation": {
            "type": "boolean"
          },
          "personRepresentingTheAssociation": {
            "type": "boolean"
          },
          "personRepresentingCommunityCentrer": {
            "type": "boolean"
          },
          "personRepresentingBranchOfNonProfitForeignLegalEntity": {
            "type": "boolean"
          }
        }
      },
      "RequestForCorrectionForScanning": {
        "type": "object",
        "properties": {
          "applicant": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CommunicationApplicant"
              }
            ]
          },
          "applicantCapacity": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CommunicationApplicantCapacity"
              }
            ]
          },
          "communicationNote": {
            "type": "string",
            "nullable": true
          },
          "incomingNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CompanySummary": {
        "type": "object",
        "properties": {
          "entryNumber": {
            "type": "string",
            "nullable": true
          },
          "incomingNumber": {
            "type": "string",
            "nullable": true
          },
          "incomingID": {
            "type": "integer",
            "format": "int64"
          },
          "incomingTypeID": {
            "type": "integer",
            "format": "int64"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "uic": {
            "type": "string",
            "nullable": true
          },
          "deedGuid": {
            "type": "string",
            "nullable": true
          },
          "outgoingNumber": {
            "type": "string",
            "nullable": true
          },
          "hasRefusalByIncNum": {
            "type": "boolean"
          }
        }
      },
      "TransformingCompanySummary": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "uic": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SuccessorCompanySummary": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "uic": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TransformationSummary": {
        "type": "object",
        "properties": {
          "transformingCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransformingCompanySummary"
            }
          },
          "successors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SuccessorCompanySummary"
            }
          },
          "mainApplicationFormType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          }
        }
      },
      "CompanyInfo": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "trasnliteration": {
            "type": "string",
            "nullable": true
          },
          "interestedPerson": {
            "type": "string",
            "nullable": true
          },
          "interestedAs": {
            "type": "string",
            "nullable": true
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activeTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "eraseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "TreeNode": {
        "type": "object",
        "properties": {
          "parentID": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "nullable": true
          },
          "intermediateState": {
            "type": "boolean",
            "nullable": true
          },
          "isExtended": {
            "type": "boolean",
            "nullable": true
          },
          "children": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TreeNode"
            }
          }
        }
      },
      "TreeNodeCollection": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TreeNode"
            }
          }
        }
      },
      "SubUICTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          79,
          100,
          132,
          133,
          200,
          301,
          303,
          351,
          401,
          450,
          451,
          452,
          456,
          457,
          500,
          501,
          601,
          602,
          666,
          701,
          801,
          901,
          910,
          920,
          930,
          940,
          950,
          960,
          970,
          980,
          990,
          1000
        ]
      },
      "SubDeedStatuses": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2
        ]
      },
      "FieldOperations": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ]
      },
      "Field": {
        "type": "object",
        "description": "Модел на поле.",
        "properties": {
          "nameCode": {
            "type": "string",
            "description": "Код на ресурс за името на полето.",
            "nullable": true
          },
          "htmlData": {
            "type": "string",
            "description": "HTML данни.",
            "nullable": true
          },
          "fieldEntryNumber": {
            "type": "string",
            "description": "Номер на вписване, с който е вписано полето.",
            "nullable": true
          },
          "recordMinActionDate": {
            "type": "string",
            "description": "Дата на първоначално вписване.",
            "format": "date-time",
            "nullable": true
          },
          "fieldEntryDate": {
            "type": "string",
            "description": "Дата на последно вписване.",
            "format": "date-time",
            "nullable": true
          },
          "fieldActionDate": {
            "type": "string",
            "description": "Дата на",
            "format": "date-time",
            "nullable": true
          },
          "fieldIdent": {
            "type": "string",
            "description": "Идентификатор на полета.",
            "nullable": true
          },
          "fieldOperation": {
            "description": "Операция на полето.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FieldOperations"
              }
            ]
          },
          "entryApplicationType": {
            "description": "Тип на заявлението с което е вписано полето",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          },
          "order": {
            "type": "string",
            "description": "Поредност.",
            "nullable": true
          }
        }
      },
      "Group": {
        "type": "object",
        "description": "Модел на група.",
        "properties": {
          "groupID": {
            "type": "integer",
            "description": "Идентификатор на групата.",
            "format": "int32",
            "nullable": true
          },
          "nameCode": {
            "type": "string",
            "description": "Код на ресурс за името на групата.",
            "nullable": true
          },
          "order": {
            "type": "string",
            "description": "Поредност.",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "description": "Полета.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        }
      },
      "SubDeedVM": {
        "type": "object",
        "description": "Модел на раздел.",
        "properties": {
          "subUIC": {
            "type": "string",
            "description": "Идентификатор на раздел.",
            "nullable": true
          },
          "subUICType": {
            "description": "Тип раздел.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUICTypes"
              }
            ]
          },
          "subDeedStatus": {
            "description": "Статус на раздела.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubDeedStatuses"
              }
            ]
          },
          "colapsableLinkName": {
            "type": "string",
            "description": "Име за линк, който след натискане се разгъва и показва допълнителна информация.",
            "nullable": true
          },
          "sectionName": {
            "type": "string",
            "description": "Име на секция.",
            "nullable": true,
            "readOnly": true
          },
          "subDeedIsClosed": {
            "type": "boolean",
            "description": "Флаг, указващ дали раздела е затворен.",
            "readOnly": true
          },
          "groups": {
            "type": "array",
            "description": "Групи.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "Section": {
        "type": "object",
        "description": "Модел на секция.",
        "properties": {
          "subUICType": {
            "description": "Тип раздел.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUICTypes"
              }
            ]
          },
          "nameCode": {
            "type": "string",
            "description": "Код на име на раздел.",
            "nullable": true
          },
          "order": {
            "type": "string",
            "description": "Поредност на секцията.",
            "nullable": true
          },
          "subDeeds": {
            "type": "array",
            "description": "Раздели.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubDeedVM"
            }
          }
        }
      },
      "DeedVM": {
        "type": "object",
        "description": "Модел на партида.",
        "properties": {
          "deedStatus": {
            "description": "Статус на партида.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DeedStatuses"
              }
            ]
          },
          "companyName": {
            "type": "string",
            "description": "Име на фирма.",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "description": "Уникален идентификатор.",
            "nullable": true
          },
          "uic": {
            "type": "string",
            "description": "ЕИК.",
            "nullable": true
          },
          "uicWithCtx": {
            "type": "string",
            "description": "ЕИК с контекстна информация.",
            "nullable": true
          },
          "legalForm": {
            "description": "Правна форма.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LegalForms"
              }
            ]
          },
          "companyNameSuffixFlag": {
            "description": "Наставка след името на компанията, указваща дали компанията е в ликвидация, несъстоятелност или нито едното.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyNameSuffixFlags"
              }
            ]
          },
          "elementHolderAdditionFlag": {
            "description": "Флаг, указващ дали полетата от заявлението, за които се отнася, са с прекратени правомощия или лишени от разпоредителна власт.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ElementHolderAdditionFlags"
              }
            ]
          },
          "sections": {
            "type": "array",
            "description": "Секции.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "entryDate": {
            "type": "string",
            "description": "Дата на справката.",
            "format": "date-time",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "description": "Пълно име.",
            "nullable": true
          },
          "hasInstructions": {
            "type": "boolean",
            "nullable": true
          },
          "hasAssignments": {
            "type": "boolean",
            "nullable": true
          },
          "hasCompanyCasees": {
            "type": "boolean",
            "nullable": true
          },
          "hasLegalFormChange": {
            "type": "boolean",
            "nullable": true
          },
          "hasNotifications": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SubDeed": {
        "type": "object",
        "properties": {
          "subUIC": {
            "type": "string",
            "nullable": true
          },
          "subUICType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUICTypes"
              }
            ]
          },
          "status": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SubDeedStatuses"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Deed": {
        "type": "object",
        "properties": {
          "uic": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "companyFullName": {
            "type": "string",
            "nullable": true
          },
          "legalForm": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LegalForms"
              }
            ]
          },
          "status": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DeedStatuses"
              }
            ]
          },
          "companyNameSuffixFlag": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CompanyNameSuffixFlags"
              }
            ]
          },
          "elementHolderAdditionFlag": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ElementHolderAdditionFlags"
              }
            ]
          },
          "hasCompanyCases": {
            "type": "boolean",
            "nullable": true
          },
          "courtNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "caseYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isTranfsormedWithLegalFormChanged": {
            "type": "boolean",
            "nullable": true
          },
          "hasInstructions": {
            "type": "boolean",
            "nullable": true
          },
          "hasAssignments": {
            "type": "boolean",
            "nullable": true
          },
          "hasNotifications": {
            "type": "boolean",
            "nullable": true
          },
          "subDeeds": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SubDeed"
            }
          },
          "linkedDeeds": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeedSummary"
            }
          }
        }
      },
      "SortColumnsWithOrder": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "CompanyInfoVM": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "trasnliteration": {
            "type": "string",
            "nullable": true
          },
          "legalFormName": {
            "type": "string",
            "nullable": true
          },
          "interestedPerson": {
            "type": "string",
            "nullable": true
          },
          "interestedAs": {
            "type": "string",
            "nullable": true
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activeTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "erasedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "personPosition": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedRightsCompanyInfo": {
        "type": "object",
        "properties": {
          "foundIn": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "trasnliteration": {
            "type": "string",
            "nullable": true
          },
          "legalFormName": {
            "type": "string",
            "nullable": true
          },
          "interestedPerson": {
            "type": "string",
            "nullable": true
          },
          "interestedAs": {
            "type": "string",
            "nullable": true
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activeTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "erasedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "personPosition": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "PhysicalOrCompanyObj": {
        "type": "object",
        "properties": {
          "isPhysical": {
            "type": "boolean"
          },
          "ident": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "companyFullName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubjectInFieldTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1
        ]
      },
      "SubjectInFieldItem": {
        "type": "object",
        "properties": {
          "companyFullName": {
            "type": "string",
            "nullable": true
          },
          "companyNameSuffixFlag": {
            "type": "string",
            "nullable": true
          },
          "uic": {
            "type": "string",
            "nullable": true
          },
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "mandateText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "VerificationActsSubSearchCriteriaResult": {
        "type": "object",
        "description": "Резултат от справка вписано обстоятелство или обявен акт.",
        "properties": {
          "uic": {
            "type": "string",
            "description": "ЕИК.",
            "nullable": true
          },
          "companyFullName": {
            "type": "string",
            "description": "Пълно име на фирма.",
            "nullable": true
          },
          "nodes": {
            "description": "Клонове.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TreeNodeCollection"
              }
            ]
          }
        }
      },
      "Contacts": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "eMail": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RecordOperations": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "EraseOperations": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "F005_Seat": {
        "type": "object",
        "properties": {
          "address": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "contacts": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Contacts"
              }
            ]
          },
          "fieldEntryNumber": {
            "type": "string",
            "nullable": true
          },
          "recordMinActionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fieldEntryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fieldActionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fieldOperation": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/FieldOperations"
              }
            ]
          },
          "entryApplicationType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationFormTypes"
              }
            ]
          },
          "fieldIdent": {
            "type": "string",
            "nullable": true
          },
          "recordOperation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordOperations"
              }
            ]
          },
          "recordID": {
            "type": "string",
            "nullable": true
          },
          "eraseOperation": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/EraseOperations"
              }
            ]
          },
          "initialState": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonElement"
              }
            ]
          }
        }
      },
      "SubDeedSummary": {
        "type": "object",
        "properties": {
          "subUIC": {
            "type": "string",
            "nullable": true
          },
          "subUICType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUICTypes"
              }
            ]
          },
          "status": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SubDeedStatuses"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StatementSearchModes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2
        ]
      },
      "Statement": {
        "type": "object",
        "properties": {
          "entryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fieldIdent": {
            "type": "string",
            "nullable": true
          },
          "actModeName": {
            "type": "string",
            "nullable": true
          },
          "actDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actDocumentGuid": {
            "type": "string",
            "nullable": true
          },
          "actYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "deeds": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DeedSummary"
              }
            ]
          }
        }
      },
      "NotificationTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2
        ]
      },
      "LevelTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "LogMessageData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LogMessage": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "levelType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LevelTypes"
              }
            ],
            "readOnly": true
          },
          "loggerName": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LogMessageData"
            }
          }
        }
      },
      "InstructionSearchMode": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ]
      },
      "InstructionTypes": {
        "type": "integer",
        "format": "int64",
        "enum": [
          0,
          -1
        ]
      },
      "IndexedField": {
        "type": "object",
        "properties": {
          "fieldIdent": {
            "type": "string",
            "nullable": true
          },
          "ident": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Instruction": {
        "type": "object",
        "properties": {
          "incomingNumber": {
            "type": "string",
            "nullable": true
          },
          "instructionReason": {
            "type": "string",
            "nullable": true
          },
          "instructionDocGuid": {
            "type": "string",
            "nullable": true
          },
          "instructionType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/InstructionTypes"
              }
            ]
          },
          "instructionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "maxWaitInstructionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "applicationInstructionCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "incomingLinkedDeeds": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeedSummary"
            }
          },
          "waitingTransformationCompanies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IndexedField"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://localhost/epzeu.web.identityserver/connect/authorize",
            "tokenUrl": "https://localhost/epzeu.web.identityserver/connect/token",
            "scopes": {
              "epzeu.cr.api.public": "epzeu.cr.api.public"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ]
}