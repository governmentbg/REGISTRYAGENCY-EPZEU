{
  "openapi": "3.0.1",
  "info": {
    "title": "EPZEU.Web.Api.Private",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/EPZEU.Web.Api.Private"
    }
  ],
  "paths": {
    "/Applications": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за създаване на процес по заявяване.",
        "operationId": "Applications",
        "requestBody": {
          "description": "Заявка за създаване на процес по заявяване.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за създаване на процес по заявяване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Application"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за създаване на процес по заявяване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Application"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за създаване на процес по заявяване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Application"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за променя резултата на заявлението.",
        "operationId": "Applications2",
        "parameters": [
          {
            "name": "register",
            "in": "query",
            "description": "Тип на регистъра - Стойности: 1 = Търговски Регистър; 2 = Имотен Регистър",
            "schema": {
              "description": "Тип на регистъра - Стойности: 1 = Търговски Регистър; 2 = Имотен Регистър",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Заявка за промяна на резулта",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Заявка за промяна на резулта",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ApplicationUpdateRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "description": "Заявка за промяна на резулта",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ApplicationUpdateRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "description": "Заявка за промяна на резулта",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ApplicationUpdateRequest"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за търсене на заявления.",
        "operationId": "ApplicationsAll",
        "parameters": [
          {
            "name": "FromRegistrationDate",
            "in": "query",
            "description": "От дата на регистриране.",
            "schema": {
              "type": "string",
              "description": "От дата на регистриране.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToRegistrationDate",
            "in": "query",
            "description": "До дата на регистриране.",
            "schema": {
              "type": "string",
              "description": "До дата на регистриране.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IncomingNumbers",
            "in": "query",
            "description": "Входящи номера.",
            "schema": {
              "type": "array",
              "description": "Входящи номера.",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ApplicationTypeID",
            "in": "query",
            "description": "Идентификатор на тип на заявление.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на тип на заявление.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ApplicantCIN",
            "in": "query",
            "description": "КИН на заявител.",
            "schema": {
              "type": "integer",
              "description": "КИН на заявител.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Register",
            "in": "query",
            "description": "Тип регистър - Стойности: 1 = Търговски Регистър; 2 = Имотен Регистър",
            "schema": {
              "description": "Тип регистър - Стойности: 1 = Търговски Регистър; 2 = Имотен Регистър",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/Applications/Drafts": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Операция за търсене на чернови.",
        "operationId": "Drafts",
        "parameters": [
          {
            "name": "ApplicantCIN",
            "in": "query",
            "description": "КИН на заявител.",
            "schema": {
              "type": "integer",
              "description": "КИН на заявител.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/AppParameters": {
      "get": {
        "tags": [
          "AppParameters"
        ],
        "summary": "Операция за изчитане на конфигурационните параметри от базата данни.",
        "operationId": "AppParameters",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppParameter"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppParameter"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppParameter"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/BTrustProcessor/CreateBissSignRequest": {
      "post": {
        "tags": [
          "BTrustProcessor"
        ],
        "summary": "Операция за създаване на заявка към BISS за подписване.",
        "operationId": "CreateBissSignRequest",
        "requestBody": {
          "description": "заявка за създаване",
          "content": {
            "application/json": {
              "schema": {
                "description": "заявка за създаване",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBissSignRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "заявка за създаване",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBissSignRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "заявка за създаване",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateBissSignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BissSignRequestExtended"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/BTrustProcessor/completeBissSignProcess": {
      "put": {
        "tags": [
          "BTrustProcessor"
        ],
        "summary": "Операция за приключване на локално подписване.",
        "operationId": "completeBissSignProcess",
        "requestBody": {
          "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssembleSignatureWithDocumentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssembleSignatureWithDocumentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssembleSignatureWithDocumentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/BTrustProcessor/createBissTestSignRequest": {
      "post": {
        "tags": [
          "BTrustProcessor"
        ],
        "summary": "Операция за създаване на заявка за тестово подписване към BISS.",
        "operationId": "createBissTestSignRequest",
        "requestBody": {
          "description": "Заявка за тестово подписване чрез Biss",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за тестово подписване чрез Biss",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TestBissSignRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за тестово подписване чрез Biss",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TestBissSignRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за тестово подписване чрез Biss",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TestBissSignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BissSignRequestExtended"
                }
              }
            }
          }
        }
      }
    },
    "/BTrustProcessor/CompleteTestBissSignProcess": {
      "post": {
        "tags": [
          "BTrustProcessor"
        ],
        "summary": "Операция за приключване на тестово подписване с BISS.",
        "operationId": "CompleteTestBissSignProcess",
        "requestBody": {
          "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssembleSignatureWithDocumentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssembleSignatureWithDocumentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Данни за сглобяване на подписа от BISS със документа за подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AssembleSignatureWithDocumentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/BTrustProcessor/createRemoteSignRequest": {
      "post": {
        "tags": [
          "BTrustProcessor"
        ],
        "summary": "Операция за създаване на заявка за отдалечено подписване.",
        "operationId": "createRemoteSignRequest",
        "requestBody": {
          "description": "Данни за заявката.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Данни за заявката.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BtrustRemoteSignRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Данни за заявката.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BtrustRemoteSignRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Данни за заявката.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BtrustRemoteSignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/BTrustProcessor/completeRemoteSigning": {
      "put": {
        "tags": [
          "BTrustProcessor"
        ],
        "summary": "Операция за приключване на отдалечено подписване.",
        "operationId": "completeRemoteSigning",
        "requestBody": {
          "description": "Данни за процеса по подписване.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Данни за процеса по подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BtrustCompleteRemoteSigning"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Данни за процеса по подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BtrustCompleteRemoteSigning"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Данни за процеса по подписване.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BtrustCompleteRemoteSigning"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BtrustPullingResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/CMS/pages/{lang}": {
      "get": {
        "tags": [
          "CMS"
        ],
        "summary": "Операция за изчитане на CMS страници.",
        "operationId": "pages",
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "required": true,
            "description": "Език за локализация.",
            "schema": {
              "type": "string",
              "description": "Език за локализация.",
              "nullable": true
            }
          },
          {
            "name": "register",
            "in": "query",
            "description": "Регистър - 1 = Търговски Регистър.; 2 = Имотен Регистър",
            "schema": {
              "description": "Регистър - 1 = Търговски Регистър.; 2 = Имотен Регистър",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Page"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/CMS/staticPages": {
      "get": {
        "tags": [
          "CMS"
        ],
        "summary": "Операция за изчитане на статични страници.",
        "operationId": "staticPages",
        "parameters": [
          {
            "name": "module",
            "in": "query",
            "description": "Модули: 1 = EPZEU.; 2 = EPZEU Търговски регистър.; 3 = EPZEU Имотен регистър.",
            "schema": {
              "description": "Модули: 1 = EPZEU.; 2 = EPZEU Търговски регистър.; 3 = EPZEU Имотен регистър.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Modules"
                }
              ]
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StaticPage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/DocumentTemplates/CreateDocument": {
      "post": {
        "tags": [
          "DocumentTemplates"
        ],
        "summary": "Операция за създаване на документ на базата на шаблон.",
        "operationId": "CreateDocument",
        "parameters": [
          {
            "name": "DefaultEmbedding",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DefaultEncoding",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegisteredFamilies",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object"
              }
            }
          },
          {
            "name": "RegisteredFonts",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "object"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Заявка за създаване на документ.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за създаване на документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateDocumentRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за създаване на документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateDocumentRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за създаване на документ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateDocumentRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/EmailNotifications": {
      "post": {
        "tags": [
          "EmailNotifications"
        ],
        "summary": "Операция за създаване на имейл нотификация.",
        "operationId": "EmailNotifications",
        "requestBody": {
          "description": "Заявка за имейл нотификация.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за имейл нотификация.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EmailNotificationRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за имейл нотификация.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EmailNotificationRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за имейл нотификация.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EmailNotificationRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailNotificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/EvrotrustCallback/document/ready": {
      "post": {
        "tags": [
          "EvrotrustCallback"
        ],
        "summary": "Document ready",
        "operationId": "ready",
        "requestBody": {
          "description": "Document info",
          "content": {
            "application/json": {
              "schema": {
                "description": "Document info",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DataDocumentReady"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EvrotrustCallback/document/group/ready": {
      "post": {
        "tags": [
          "EvrotrustCallback"
        ],
        "summary": "Document group ready",
        "operationId": "ready2",
        "requestBody": {
          "description": "Document info",
          "content": {
            "application/json": {
              "schema": {
                "description": "Document info",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DataDocumentGroupReady"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/EvrotrustProcessor/CreateSignRequest": {
      "post": {
        "tags": [
          "EvrotrustProcessor"
        ],
        "summary": "Операцията създава заявка за подписване към Evrotrust.",
        "operationId": "CreateSignRequest",
        "requestBody": {
          "description": "Данни за заявката.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Данни за заявката.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EvrotrustSignRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Данни за заявката.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EvrotrustSignRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Данни за заявката.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EvrotrustSignRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/LogActions": {
      "post": {
        "tags": [
          "LogActions"
        ],
        "summary": "Операция за създаване на запис в одит журнала.",
        "operationId": "LogActions",
        "requestBody": {
          "description": "Заявка за одит запис.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за одит запис.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogActionRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за одит запис.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogActionRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за одит запис.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogActionRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogActionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/LoginSessions": {
      "get": {
        "tags": [
          "LoginSessions"
        ],
        "summary": "Операция за изчитане на логин сесия.",
        "operationId": "LoginSessions",
        "parameters": [
          {
            "name": "loadOrganizationIdentifier",
            "in": "query",
            "description": "Флаг указващ дали да се зареди Идентификатор на организацията.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се зареди Идентификатор на организацията.",
              "nullable": true
            }
          },
          {
            "name": "loadUserProfileData",
            "in": "query",
            "description": "Флаг указващ дали да се заредят данни за профила на потребител.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се заредят данни за профила на потребител.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSessionInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSessionInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSessionInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/Nomenclatures/countries": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за държави.",
        "operationId": "countries",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/ekatte/{ekatteType}": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за ЕКАТТЕ.",
        "operationId": "ekatte",
        "parameters": [
          {
            "name": "ekatteType",
            "in": "query",
            "description": "тип на екате",
            "schema": {
              "type": "string",
              "description": "тип на екате",
              "nullable": true
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Единен класификатор на административно-териториалните и териториалните единици (ЕКАТТЕ).",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/District"
                      },
                      {
                        "$ref": "#/components/schemas/Municipality"
                      },
                      {
                        "$ref": "#/components/schemas/Settlement"
                      },
                      {
                        "$ref": "#/components/schemas/Area"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/nkid": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за НКИД.",
        "operationId": "nkid",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NKID"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/Labels/{lang}": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за етикети на ресурси.",
        "operationId": "Labels",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "Език за локализация.",
            "schema": {
              "type": "string",
              "description": "Език за локализация.",
              "nullable": true
            }
          },
          {
            "name": "prefixes",
            "in": "query",
            "description": "Префикси на кодове.",
            "schema": {
              "type": "string",
              "description": "Префикси на кодове.",
              "nullable": true
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/Languages": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за езици за локализация.",
        "operationId": "Languages",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/Services/{lang}": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за услуги.",
        "operationId": "Services",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "Език за локализация.",
            "schema": {
              "type": "string",
              "description": "Език за локализация.",
              "nullable": true
            }
          },
          {
            "name": "registerID",
            "in": "query",
            "description": "Идентификатор на регистър.",
            "schema": {
              "description": "Идентификатор на регистър.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/Authorities": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за власти.",
        "operationId": "Authorities",
        "parameters": [
          {
            "name": "firmCourt",
            "in": "query",
            "description": "Флаг фирмено дело.",
            "schema": {
              "type": "boolean",
              "description": "Флаг фирмено дело.",
              "nullable": true
            }
          },
          {
            "name": "authorityTypes",
            "in": "query",
            "description": "Тип власти",
            "schema": {
              "type": "array",
              "description": "Тип власти",
              "nullable": true,
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Authority"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/LegalForms": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за правни форми.",
        "operationId": "LegalForms",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LegalForm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/ApplicationTypes/{lang}": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за видове заявления.",
        "operationId": "ApplicationTypes",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "Език за локализация.",
            "schema": {
              "type": "string",
              "description": "Език за локализация.",
              "nullable": true
            }
          },
          {
            "name": "registerID",
            "in": "query",
            "description": "Идентификатор на регистър.",
            "schema": {
              "description": "Идентификатор на регистър.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/DocTypes": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за видове документи.",
        "operationId": "DocTypes",
        "parameters": [
          {
            "name": "register",
            "in": "query",
            "description": "Тип на регистъра",
            "schema": {
              "description": "Тип на регистъра",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/ApplicationDocTypes/{appType}": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за приложни документи към конкретно заявление.",
        "operationId": "ApplicationDocTypes",
        "parameters": [
          {
            "name": "appType",
            "in": "query",
            "description": "Вид заявление.",
            "schema": {
              "type": "string",
              "description": "Вид заявление.",
              "nullable": true
            }
          },
          {
            "name": "register",
            "in": "query",
            "description": "Идентификатор на регистър.",
            "schema": {
              "description": "Идентификатор на регистър.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicationDocumentType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/DocTemplateFields": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за активни полета на шаблон за документ.",
        "operationId": "DocTemplateFields",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTemplateField"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/DocTemplates": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за документни шаблони.",
        "operationId": "DocTemplates",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentTemplate"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/DocTemplates/{docTemplateID}/Content": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за съдържание на документен шаблон.",
        "operationId": "Content",
        "parameters": [
          {
            "name": "docTemplateID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на документен шаблон.",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на документен шаблон.",
              "format": "int32"
            }
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/ForeignLegalForms": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за чуждестранни правни форми.",
        "operationId": "ForeignLegalForms",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForeignLegalForm"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/ForeignComRegisters": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за чуждестранни търговски регистри.",
        "operationId": "ForeignComRegisters",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForeignComRegister"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/ReleaseReasons": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за причини за издаване.",
        "operationId": "ReleaseReasons",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseReason"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/Acts": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за актове.",
        "operationId": "Acts",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Act"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Nomenclatures/SpecialAccessUserTypes": {
      "get": {
        "tags": [
          "Nomenclatures"
        ],
        "summary": "Операция за изчитане на номенклатурата за видовете потребители със специален достъп.",
        "operationId": "SpecialAccessUserTypes",
        "parameters": [
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialAccessUserType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Notifications/Subscriptions": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Операция за търсене на абонамент за събития.",
        "operationId": "SubscriptionsAll",
        "parameters": [
          {
            "name": "UserSubscriptionIDs",
            "in": "query",
            "description": "Списък с уникален идентификатори на aбонамент за събития в регистри.",
            "schema": {
              "type": "array",
              "description": "Списък с уникален идентификатори на aбонамент за събития в регистри.",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "UserCIN",
            "in": "query",
            "description": "Клиентски идентификационене номер на потребителя абонирал се за събития в регистри.",
            "schema": {
              "type": "integer",
              "description": "Клиентски идентификационене номер на потребителя абонирал се за събития в регистри.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Register",
            "in": "query",
            "description": "Идентификатор на регистър.",
            "schema": {
              "description": "Идентификатор на регистър.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "Type",
            "in": "query",
            "description": "Тип на идентификатор на събития в регистри.",
            "schema": {
              "description": "Тип на идентификатор на събития в регистри.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/UserSubscriptionTypes"
                }
              ]
            }
          },
          {
            "name": "Values",
            "in": "query",
            "description": "Стойност на тип на партида/обект",
            "schema": {
              "type": "array",
              "description": "Стойност на тип на партида/обект",
              "nullable": true,
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "LoadMaxNumberOfRecords",
            "in": "query",
            "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри.",
            "schema": {
              "type": "boolean",
              "description": "Флаг указващ дали да се използва \"Брой максимално допустими записи от върнат резултат\" от конфигурационните параметри."
            }
          },
          {
            "name": "MaxNumberOfRecords",
            "in": "query",
            "description": "Брой максимално допустими записи от върнат резултат.",
            "schema": {
              "type": "integer",
              "description": "Брой максимално допустими записи от върнат резултат.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Операция за абониране за събития.",
        "operationId": "Subscriptions",
        "requestBody": {
          "description": "Заявка за абониране.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за абониране за събития",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserSubscriptionsCreateRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за абониране за събития",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserSubscriptionsCreateRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за абониране за събития",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserSubscriptionsCreateRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSubscription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Операция за изтриване на абониране за събития.",
        "operationId": "Subscriptions2",
        "requestBody": {
          "description": "Заявка за изтриване.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Заявка за изтриване на абонамент за събития",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserSubscriptionsDeleteRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Заявка за изтриване на абонамент за събития",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserSubscriptionsDeleteRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Заявка за изтриване на абонамент за събития",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UserSubscriptionsDeleteRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/Notifications/Events": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Операция за oбработва събити от имотния регистър.",
        "operationId": "Events",
        "requestBody": {
          "description": "Съобщение за събитието.",
          "content": {
            "application/json": {
              "schema": {
                "description": "Съобщение за събитието.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CREventMessage"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Съобщение за събитието.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CREventMessage"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Съобщение за събитието.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CREventMessage"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcesses/{processID}": {
      "get": {
        "tags": [
          "SigningProcesses"
        ],
        "summary": "Операция за изчитане на процес за подписване.",
        "operationId": "SigningProcesses",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес за подписване.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес за подписване.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SigningProcessVM"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcesses/{processID}/Signers/{signerID}/RejectSigning": {
      "put": {
        "tags": [
          "SigningProcesses"
        ],
        "summary": "Операция за отказване на подписване.",
        "operationId": "RejectSigning",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес.",
              "format": "uuid"
            }
          },
          {
            "name": "signerID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на подписващ",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на подписващ",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcesses/{processID}/reject": {
      "post": {
        "tags": [
          "SigningProcesses"
        ],
        "summary": "Операция за отказване на процес за подписване.",
        "operationId": "reject",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес за подписване.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес за подписване.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcesses/{processID}/testSign": {
      "post": {
        "tags": [
          "SigningProcesses"
        ],
        "summary": "Операция за тестово подписване.",
        "operationId": "testSign",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcessesPrivate": {
      "post": {
        "tags": [
          "SigningProcessesPrivate"
        ],
        "summary": "Операция за създаване на  процес за подписване.",
        "operationId": "SigningProcessesPrivate",
        "parameters": [
          {
            "name": "SigningRequest",
            "in": "query",
            "description": "Заявка за подписване.",
            "schema": {
              "description": "Заявка за подписване.",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/SigningRequest"
                }
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "DocumentToSign": {
                    "type": "string",
                    "description": "Документ, който трябва да се подпише.",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "DocumentToSign": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcessesPrivate/verifySignedContent": {
      "post": {
        "tags": [
          "SigningProcessesPrivate"
        ],
        "summary": "Валидира подписан документ.",
        "operationId": "verifySignedContent",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Файл.",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateDocumentResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcessesPrivate/DeleteSigningProcesses": {
      "delete": {
        "tags": [
          "SigningProcessesPrivate"
        ],
        "summary": "Операция за изтриване на процес по подписване.",
        "operationId": "DeleteSigningProcesses",
        "requestBody": {
          "description": "Списък от идентификатори на подписване.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Списък от идентификатори на подписване.",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "description": "Списък от идентификатори на подписване.",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "description": "Списък от идентификатори на подписване.",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcessesPrivate/{processID}": {
      "get": {
        "tags": [
          "SigningProcessesPrivate"
        ],
        "summary": "Операция за изчитане на процес за подписване.",
        "operationId": "SigningProcessesPrivateAll",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес за подписване.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес за подписване.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SigningProcessVM"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcessesPrivate/{processID}/Signers/{signerID}/RejectSigning": {
      "put": {
        "tags": [
          "SigningProcessesPrivate"
        ],
        "summary": "Операция за отказване на подписване.",
        "operationId": "RejectSigning2",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес.",
              "format": "uuid"
            }
          },
          {
            "name": "signerID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на подписващ",
            "schema": {
              "type": "integer",
              "description": "Идентификатор на подписващ",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcessesPrivate/{processID}/reject": {
      "post": {
        "tags": [
          "SigningProcessesPrivate"
        ],
        "summary": "Операция за отказване на процес за подписване.",
        "operationId": "reject2",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес за подписване.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес за подписване.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/SigningProcessesPrivate/{processID}/testSign": {
      "post": {
        "tags": [
          "SigningProcessesPrivate"
        ],
        "summary": "Операция за тестово подписване.",
        "operationId": "testSign2",
        "parameters": [
          {
            "name": "processID",
            "in": "path",
            "required": true,
            "description": "Идентификатор на процес.",
            "schema": {
              "type": "string",
              "description": "Идентификатор на процес.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/UsersInfo": {
      "get": {
        "tags": [
          "UsersInfo"
        ],
        "summary": "Операция за изчитане данни на потребител.",
        "operationId": "UsersInfo",
        "parameters": [
          {
            "name": "cin",
            "in": "query",
            "description": "КИН на  потребител.",
            "schema": {
              "type": "integer",
              "description": "КИН на  потребител.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/UsersMigrations/Account": {
      "get": {
        "tags": [
          "UsersMigrations"
        ],
        "summary": "Операция за търсене потребителскки акаунт за миграция.",
        "operationId": "Account",
        "parameters": [
          {
            "name": "Register",
            "in": "query",
            "description": "Тип на регистъра.\r\nСтойности: 1 = Търговски Регистър; 2 = Имотен Регистър",
            "schema": {
              "description": "Тип на регистъра.\r\nСтойности: 1 = Търговски Регистър; 2 = Имотен Регистър",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          },
          {
            "name": "Username",
            "in": "query",
            "description": "Потребителско име.",
            "schema": {
              "type": "string",
              "description": "Потребителско име.",
              "nullable": true
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "Парола.",
            "schema": {
              "type": "string",
              "description": "Парола.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/UsersMigrations/MigrationProcesses": {
      "get": {
        "tags": [
          "UsersMigrations"
        ],
        "summary": "Операция за търсене на процеси по миграция на потребителски профил.",
        "operationId": "MigrationProcesses",
        "parameters": [
          {
            "name": "MigrationProcessID",
            "in": "query",
            "description": "Уникален идентификатор на процес по мигриране на потребителски профил",
            "schema": {
              "type": "integer",
              "description": "Уникален идентификатор на процес по мигриране на потребителски профил",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserCIN",
            "in": "query",
            "description": "КИН на профил в ЕПЗЕУ",
            "schema": {
              "type": "integer",
              "description": "КИН на профил в ЕПЗЕУ",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MigrantUsername",
            "in": "query",
            "description": "Потребителското име на профила в съответния регистър",
            "schema": {
              "type": "string",
              "description": "Потребителското име на профила в съответния регистър",
              "nullable": true
            }
          },
          {
            "name": "Register",
            "in": "query",
            "description": "Идентификатор на регистър: 1 - Търговски регистър (CR), 2 - Имотен регистър (PR)",
            "schema": {
              "description": "Идентификатор на регистър: 1 - Търговски регистър (CR), 2 - Имотен регистър (PR)",
              "nullable": true,
              "allOf": [
                {
                  "$ref": "#/components/schemas/Registers"
                }
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountMigrationProcess"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountMigrationProcess"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountMigrationProcess"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/UsersMigrations/StartMigrationProcess": {
      "post": {
        "tags": [
          "UsersMigrations"
        ],
        "summary": "Операция за стартиране на процес по миграция.",
        "operationId": "StartMigrationProcess",
        "requestBody": {
          "description": "Данни са стартиране на процеса",
          "content": {
            "application/json": {
              "schema": {
                "description": "Данни са стартиране на процеса",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StartMigrationProcessRequest"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "description": "Данни са стартиране на процеса",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StartMigrationProcessRequest"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "description": "Данни са стартиране на процеса",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StartMigrationProcessRequest"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMigrationProcess"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMigrationProcess"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountMigrationProcess"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Registers": {
        "type": "integer",
        "description": "Тип на регистъра.\r\nСтойности: 1 = Търговски Регистър; 2 = Имотен Регистър",
        "format": "int32",
        "enum": [
          1,
          2
        ]
      },
      "Application": {
        "type": "object",
        "description": "Модел на подаденo заявлениe.",
        "properties": {
          "applicationID": {
            "type": "integer",
            "description": "Уникален идентификатор на заявление.",
            "format": "int64",
            "nullable": true
          },
          "applicantCIN": {
            "type": "integer",
            "description": "Клиентски идентификационене номер на потребителя подал заявление.",
            "format": "int32",
            "nullable": true
          },
          "register": {
            "description": "Регистър на заявление.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "applicationTypeID": {
            "type": "integer",
            "description": "Тип на заявление.",
            "format": "int32",
            "nullable": true
          },
          "incomingNumber": {
            "type": "string",
            "description": "Входящ номер на заявление.",
            "nullable": true
          },
          "registrationDate": {
            "type": "string",
            "description": "Дата на входиране на заявление.",
            "format": "date-time",
            "nullable": true
          },
          "applicationDisplayUrl": {
            "type": "string",
            "description": "URL адрес за преглед на заявление.",
            "nullable": true
          },
          "resultHTML": {
            "type": "string",
            "description": "HTML резилтат от изпълнението на заявлението.",
            "nullable": true
          },
          "draftDate": {
            "type": "string",
            "description": "Дата на черновата",
            "format": "date-time",
            "nullable": true
          },
          "applicationType": {
            "type": "string",
            "description": "Тип на заявление",
            "nullable": true
          }
        }
      },
      "ApiError": {
        "type": "object",
        "description": "Модел на грешка.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Код.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Съобщение.",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "description": "Описва къде в кода е възникнала грешката.",
            "nullable": true
          },
          "innerErrors": {
            "type": "array",
            "description": "Вътрешни грешки.",
            "nullable": true,
            "items": {}
          }
        }
      },
      "ApplicationUpdateRequest": {
        "type": "object",
        "description": "Заявка за промяна на заявление",
        "properties": {
          "incomingNumber": {
            "type": "string",
            "description": "Входящ номер.",
            "nullable": true
          },
          "resultHtml": {
            "type": "string",
            "description": "HTML резултат.",
            "nullable": true
          }
        }
      },
      "AppParameterTypes": {
        "type": "integer",
        "description": "Типове на параметри",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "AppParameter": {
        "type": "object",
        "description": "Клас за работа с параметри.",
        "properties": {
          "appParamID": {
            "type": "integer",
            "description": "Идентиификатор на параметър.",
            "format": "int32"
          },
          "functionalityID": {
            "type": "integer",
            "description": "Уникален идентификатор на функционалност.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Код на параметър.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Описание на параметър.",
            "nullable": true
          },
          "isSystem": {
            "type": "boolean",
            "description": "Флаг, указващ дали параметъра е системен или не."
          },
          "parameterType": {
            "description": "Тип на параметъра.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AppParameterTypes"
              }
            ]
          },
          "valueDateTime": {
            "type": "string",
            "description": "Стойност са тип на параметър дата, час и минути.",
            "format": "date-time",
            "nullable": true
          },
          "valueInterval": {
            "type": "string",
            "description": "Стойност са тип на параметър интервал от време.",
            "format": "duration",
            "nullable": true
          },
          "valueString": {
            "type": "string",
            "description": "Стойност са тип на параметър стринг.",
            "nullable": true
          },
          "valueInt": {
            "type": "integer",
            "description": "Стойност са тип на параметър цяло число.",
            "format": "int32",
            "nullable": true
          },
          "valueHour": {
            "type": "string",
            "description": "Стойност са тип параметър час и минути.",
            "format": "duration",
            "nullable": true
          }
        }
      },
      "CreateBissSignRequest": {
        "type": "object",
        "properties": {
          "processID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "userCertBase64": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BissSignRequest": {
        "type": "object",
        "description": "Обекта капсулира данни за заявка за подписване на документ към приложението BISS.",
        "properties": {
          "version": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "signatureType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "hashAlgorithm": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "contents": {
            "type": "array",
            "description": "",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "signedContents": {
            "type": "array",
            "description": "",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "signedContentsCert": {
            "type": "array",
            "description": "",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "signerCertificateB64": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "additonalConfirmText": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "confirmText": {
            "type": "array",
            "description": "",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BissSignRequestExtended": {
        "type": "object",
        "description": "Разширение на BissSignRequest, което включва допълнително поле с времето на създаване хеш на документа за подписване.\r\nРазширените данни са необходими на UI-a.",
        "properties": {
          "signRequest": {
            "description": "",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BissSignRequest"
              }
            ]
          },
          "documentHashTime": {
            "type": "array",
            "description": "Времето на създаване хеш на документа за подписване.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "AssembleSignatureWithDocumentRequest": {
        "type": "object",
        "description": "Заявка за сглобяване на документа и подписа.",
        "properties": {
          "processID": {
            "type": "string",
            "description": "Идентификатор на процеса за подписване",
            "format": "uuid",
            "nullable": true
          },
          "base64SigningCert": {
            "type": "string",
            "description": "Сертификат за подписване във формат Base64.",
            "nullable": true
          },
          "base64DocSignature": {
            "type": "string",
            "description": "Подпис на документа във формат Base64.",
            "nullable": true
          },
          "hashTime": {
            "type": "integer",
            "description": "Време на полагане на подписа.",
            "format": "int64"
          },
          "signerID": {
            "type": "integer",
            "description": "Идентификатор на подписващия.",
            "format": "int64"
          }
        }
      },
      "TestBissSignRequest": {
        "type": "object",
        "properties": {
          "userCertBase64": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BtrustRemoteSignRequest": {
        "type": "object",
        "properties": {
          "processID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "otp": {
            "type": "string",
            "nullable": true
          },
          "signerID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "profileID": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BtrustCompleteRemoteSigning": {
        "type": "object",
        "properties": {
          "processID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "signerID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "BtrustDocStatus": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1
        ]
      },
      "BtrustPullingResult": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BtrustDocStatus"
              }
            ]
          },
          "rejectReson": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PageTypes": {
        "type": "integer",
        "description": "Тип на страница.",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "Page": {
        "type": "object",
        "description": "Страница",
        "properties": {
          "pageID": {
            "type": "integer",
            "description": "Идентификатор на страница.",
            "format": "int32",
            "nullable": true
          },
          "registerID": {
            "description": "Идентификатор на регистър.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "title": {
            "type": "string",
            "description": "Заглавие.",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "Съдържание.",
            "nullable": true
          },
          "type": {
            "description": "Тип.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/PageTypes"
              }
            ]
          },
          "applicationID": {
            "type": "integer",
            "description": "Идентификатор на заявление.",
            "format": "int32",
            "nullable": true
          },
          "serviceID": {
            "type": "integer",
            "description": "Идентификатор на услуга.",
            "format": "int32",
            "nullable": true
          },
          "parentID": {
            "type": "integer",
            "description": "Идентификатор на родителски елемент.",
            "format": "int32",
            "nullable": true
          },
          "orderNum": {
            "type": "integer",
            "description": "Пореден номер.",
            "format": "int32",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean",
            "description": "Флаг указващ дали е група.",
            "nullable": true
          }
        }
      },
      "Modules": {
        "type": "integer",
        "description": "Модули: 1 = EPZEU.; 2 = EPZEU Търговски регистър.; 3 = EPZEU Имотен регистър.",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ]
      },
      "StaticPage": {
        "type": "object",
        "description": "Статична страница",
        "properties": {
          "pageKey": {
            "type": "string",
            "description": "Ключ на страница.",
            "nullable": true
          },
          "moduleID": {
            "description": "Идентификатор на модул.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Modules"
              }
            ]
          },
          "labelKey": {
            "type": "string",
            "description": "Ключ на етикет.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL.",
            "nullable": true
          }
        }
      },
      "CreateDocumentRequest": {
        "type": "object",
        "description": "Заявка за създаване на документ.",
        "properties": {
          "htmlTemplateContent": {
            "type": "string",
            "description": "HTML съдържание на шаблона.",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Наименование на файл.",
            "nullable": true
          }
        }
      },
      "EmailPriority": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ]
      },
      "EmailRecipient": {
        "type": "object",
        "description": "Получател на имейл",
        "properties": {
          "address": {
            "type": "string",
            "description": "Адрес на електронна поща.",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Име на получател.",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "description": "Тип на адрес. To - 1, Cc - 2, Bcc - 3",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "EmailNotificationRequest": {
        "type": "object",
        "description": "Заявка за създаване на имейл нотификация.",
        "properties": {
          "templateID": {
            "type": "integer",
            "description": "Идентификатор на шаблон.",
            "format": "int32",
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "description": "Списък с двойки име на параметър - стойност с която да бъде заменен.",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "priority": {
            "description": "Приоритет на имейл: 1 - нисък, 2 - нормален, 3 - висок.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/EmailPriority"
              }
            ]
          },
          "recipients": {
            "type": "array",
            "description": "Списък от получатели на имейл;",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmailRecipient"
            }
          },
          "separateMailPerRecipient": {
            "type": "boolean",
            "description": "Флаг указващ дали да бъде изпратен отделен имейл за всеки получател.",
            "nullable": true
          },
          "transliterate": {
            "type": "boolean",
            "description": "Флаг указващ дали да бъде добавена транслитерация.",
            "nullable": true
          },
          "operationID": {
            "type": "string",
            "description": "Идентификатор на идемпотентна опепрация.",
            "nullable": true
          }
        }
      },
      "EmailNotificationResponse": {
        "type": "object",
        "description": "Обект за отговор от работа с операция за създаване на имейл нотификация.",
        "properties": {
          "emailIDs": {
            "type": "array",
            "description": "Списък от идентификатори на имейли.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DataDocumentReady": {
        "type": "object",
        "properties": {
          "transactionID": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rejectReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DataDocumentGroupReady": {
        "type": "object",
        "properties": {
          "transactionID": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rejectReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EvrotrustUserIdentTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "EvrotrustSignRequest": {
        "type": "object",
        "properties": {
          "processID": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "signerID": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "identType": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/EvrotrustUserIdentTypes"
              }
            ]
          },
          "userIdent": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ObjectTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "ActionTypes": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13
        ]
      },
      "Functionalities": {
        "type": "integer",
        "description": "Функционалности:\r\n1 = Одит.; 2 = Подаване на заявления.; 3 = Плащания.; 4 = Публични справки.; 5 = Потребители.; 6 = Услуги.; 7 = Съдържание.; 8 = Интеграция в ЕПЗЕУ; 9 = Система.;\r\n10 = Интеграция в ТРРЮЛНЦ.; 11 = Интеграция в ИР.; 12 = Електронна поща;",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ]
      },
      "LogActionRequest": {
        "type": "object",
        "description": "Request за събитие за одит.",
        "properties": {
          "logActionID": {
            "type": "integer",
            "description": "Идентификатор на събитието.",
            "format": "int64",
            "nullable": true
          },
          "logActionDate": {
            "type": "string",
            "description": "дата на събитието - дата и час на настъпване на събитието.",
            "format": "date-time",
            "nullable": true
          },
          "objectType": {
            "description": "Тип на обект, за който е събитието.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectTypes"
              }
            ]
          },
          "actionType": {
            "description": "Събитие, за което се записват данните за одит.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionTypes"
              }
            ]
          },
          "module": {
            "description": "Функционалност/модул през който е настъпило събитието.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Modules"
              }
            ]
          },
          "functionality": {
            "description": "Портал/Система в която е функционалността/модула през който е настъпило събитието.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Functionalities"
              }
            ]
          },
          "key": {
            "type": "string",
            "description": "Стойност на ключов атрибут на обекта - в зависимост от обекта това може да бъде ЕИК за партида в ТРРЮЛНЦ или потребителско име \r\nза обект потребител или кадастрален номер на имот в ИР или ЕГН/ЛНЧ на лице за обект лице в ИР или номер на партида за партида в ИР.\r\nКлючовият атрибут за които се пази стойността е дефиниран в списъка на събитията и обектите за които се прави одитен запис.",
            "nullable": true
          },
          "userSessionID": {
            "type": "string",
            "description": "Идентификатор на потребителската сесия.",
            "format": "uuid",
            "nullable": true
          },
          "loginSessionID": {
            "type": "string",
            "description": "Идентификатор на логин сесия.",
            "format": "uuid",
            "nullable": true
          },
          "userID": {
            "type": "integer",
            "description": "Профил на потребителят, извършващ действието - данни за връзка към потребителски профил. Запазват се само ако потребителят се е автентикирал.",
            "format": "int32",
            "nullable": true
          },
          "userCIN": {
            "type": "integer",
            "description": "КИН на потребителят, извършващ действието - данни за връзка към потребителски профил.",
            "format": "int32",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "description": "IP адрес на потребителя, извършващ действието.",
            "nullable": true
          },
          "additionalData": {
            "type": "object",
            "description": "Системна връзка с обекта, за който се записват данните за одит.Възможно е няма такава връзка, когато събитието не е свързано с конкретен обект,\r\nкато например ако има дефинирано одитиране на търсене в списъка на събитията и обектите за които се прави одитен запис.\r\n\r\nДопълнителна информация към одитния запис - към основния одитен запис трябва да се съхранява, допълнителна информация като \r\nнапример за критерии за търсене, направени промени в данните за обекта и други, които са специфични за конкретен обект и събитие.",
            "nullable": true
          },
          "operationID": {
            "type": "string",
            "description": "Идентификатор на идемпотентна опепрация.",
            "nullable": true
          }
        }
      },
      "LogActionResponse": {
        "type": "object",
        "description": "Обект за отговор от работа с операция за създаване на запис в одита.",
        "properties": {
          "logActionID": {
            "type": "integer",
            "description": "Идентификатор на запис в одита.",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AuthenticationTypes": {
        "type": "integer",
        "description": "Начини на автентификация",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "CertificateInfo": {
        "type": "object",
        "description": "Данни за сертификата.",
        "properties": {
          "certificateID": {
            "type": "integer",
            "description": "Уникален идентификатор на сертификата.",
            "format": "int32"
          },
          "identifier": {
            "type": "string",
            "description": "Идентификатор на собственика на сертификата",
            "nullable": true
          },
          "organizationIdentifier": {
            "type": "string",
            "description": "Идентификатор на юридическо лице, с което физическото лице е асоциирано",
            "nullable": true
          },
          "names": {
            "type": "string",
            "description": "Имена на собственика на сертификата",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "description": "Сериен номер.",
            "nullable": true
          },
          "certHash": {
            "type": "string",
            "description": "Хеш на сертификата.",
            "nullable": true
          },
          "issuer": {
            "type": "string",
            "description": "Издател.",
            "nullable": true
          },
          "content": {
            "type": "string",
            "description": "Съдържание.",
            "nullable": true
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "description": "Основна информация за потребител.",
        "properties": {
          "cin": {
            "type": "integer",
            "description": "Клиентски идентификационен номер.",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Електронна поща.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Име на потребителя.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Презиме на потребителя.",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "description": "Фамилия на потребителя.",
            "nullable": true
          },
          "updatedOn": {
            "type": "string",
            "description": "Дата и час на последна промяна.",
            "format": "date-time",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "description": "Права за достъп",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "specialAccessUserType": {
            "type": "integer",
            "description": "Вид специален достъп.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "LoginSessionInfo": {
        "type": "object",
        "description": "Данни за логин сесията.",
        "properties": {
          "loginSessionID": {
            "type": "string",
            "description": "Идентификатор на логин сесията",
            "format": "uuid"
          },
          "userSessionID": {
            "type": "string",
            "description": "Идентификатор на потребителската сесия.",
            "format": "uuid"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP адрес.",
            "nullable": true
          },
          "authenticationType": {
            "description": "Тип автентикация.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuthenticationTypes"
              }
            ]
          },
          "userIdentifier": {
            "type": "string",
            "description": "Идентификатор от ПИК.",
            "nullable": true
          },
          "certificateInfo": {
            "description": "Данни за сертификата.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CertificateInfo"
              }
            ]
          },
          "userProfileData": {
            "description": "Данни от профила на потребителя.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInfo"
              }
            ]
          }
        }
      },
      "Country": {
        "type": "object",
        "description": "Държава.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор на държава.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Код на държава.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Име на държава.",
            "nullable": true
          },
          "isEUCountry": {
            "type": "boolean",
            "description": "Флаг, указващ дали държавата е от ЕС."
          },
          "brisCountryCode": {
            "type": "string",
            "description": "Код на държавата по БРИС.",
            "nullable": true
          },
          "code_ISO3166": {
            "type": "integer",
            "description": "ISO на държавата",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Ekatte": {
        "type": "object",
        "discriminator": {
          "propertyName": "$type"
        },
        "description": "Единен класификатор на административно-териториалните и териториалните единици (ЕКАТТЕ).",
        "required": [
          "$type"
        ],
        "properties": {
          "$type": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "description": "Идентификатор на ЕКАТТЕ.",
            "format": "int32"
          },
          "ekatteCode": {
            "type": "string",
            "description": "Код на записа по ЕКАТТЕ.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Име на за записа по ЕКАТТЕ.",
            "nullable": true
          }
        }
      },
      "Area": {
        "description": "Област по ЕКАТТЕ",
        "allOf": [
          {
            "$ref": "#/components/schemas/Ekatte"
          },
          {
            "type": "object",
            "properties": {
              "settlementID": {
                "type": "integer",
                "description": "Идентификатор на населено място.",
                "format": "int32"
              },
              "settlement": {
                "description": "Населено място съответстващ на определен район.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Settlement"
                  }
                ]
              }
            }
          }
        ]
      },
      "Settlement": {
        "description": "Населено място по ЕКАТТЕ.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Ekatte"
          },
          {
            "type": "object",
            "properties": {
              "municipalityID": {
                "type": "integer",
                "description": "Идентификатор на община по ЕКАТТЕ.",
                "format": "int32"
              },
              "settlementType": {
                "type": "string",
                "description": "Тип на населеното място.",
                "nullable": true
              },
              "municipality": {
                "description": "Обект на община по ЕКАТТЕ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Municipality"
                  }
                ]
              },
              "areas": {
                "type": "array",
                "description": "Колекция с районите в даденото населено място по ЕКАТТЕ.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Area"
                }
              }
            }
          }
        ]
      },
      "Municipality": {
        "description": "Община по ЕКАТТЕ.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Ekatte"
          },
          {
            "type": "object",
            "properties": {
              "districtID": {
                "type": "integer",
                "description": "Идентификатор на община по ЕКАТТЕ.",
                "format": "int32"
              },
              "district": {
                "description": "Обект на община по ЕКАТТЕ.",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/District"
                  }
                ]
              },
              "settlements": {
                "type": "array",
                "description": "Колекция с населени места в дадената община по ЕКАТТЕ.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          }
        ]
      },
      "District": {
        "description": "Област по ЕКАТТЕ.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Ekatte"
          },
          {
            "type": "object",
            "properties": {
              "municipalities": {
                "type": "array",
                "description": "Колекция на общините в дадена област по ЕКАТТЕ.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Municipality"
                }
              }
            }
          }
        ]
      },
      "NKID": {
        "type": "object",
        "description": "Класификатор на икономически дейности.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор на класификатора.",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Код на класификатора.",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "Текст на класификатора.",
            "nullable": true
          },
          "parentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Language": {
        "type": "object",
        "description": "Клас за работа с допустимите езици за локализация на системата.",
        "properties": {
          "languageID": {
            "type": "integer",
            "description": "Уникален идентификатор на запис за език",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "код на език",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "наименование на език изписано на съответния език",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "флаг, указващ дали езикът е маркиран като активен"
          },
          "isDefault": {
            "type": "boolean",
            "description": "флаг, указващ дали езикът е маркиран като език \"по подразбиране\""
          }
        }
      },
      "Service": {
        "type": "object",
        "description": "Услуга",
        "properties": {
          "serviceID": {
            "type": "integer",
            "description": "Идентификатор на услуга.",
            "format": "int32"
          },
          "registerID": {
            "description": "Идентификатор на регистър: 1 - Търговски регистър (CR), 2 - Имотен регистър (PR).",
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "iisdaServiceID": {
            "type": "integer",
            "description": "Номер на услуга от ИИСДА.",
            "format": "int32",
            "nullable": true
          },
          "appTypeID": {
            "type": "integer",
            "description": "Заявление.",
            "format": "int32"
          },
          "serviceTypeIDs": {
            "type": "array",
            "description": "Вид на услуга.",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "paymentTypeIDs": {
            "type": "array",
            "description": "Видове плащане по електронен път",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "status": {
            "type": "integer",
            "description": "Статус: 0- Предоставя се от ЕПЗЕУ; 1 - Прекратено предоставяне от ЕПЗЕУ;",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Наименование на услугата",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "HTML описание на услугата",
            "nullable": true
          },
          "isAdm": {
            "type": "boolean",
            "description": "Флаг, указващ дали услугата е административна или не.",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "description": "Кратко описание на услугата",
            "nullable": true
          },
          "serviceNumber": {
            "type": "integer",
            "description": "Номер на услугата в ИИСДА.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Authority": {
        "type": "object",
        "properties": {
          "authorityID": {
            "type": "integer",
            "format": "int32"
          },
          "authorityName": {
            "type": "string",
            "nullable": true
          },
          "authorityType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "actionID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "authoritySybtype": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "bankruptcyCourt": {
            "type": "string",
            "nullable": true
          },
          "delfiID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "regionID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firmCourt": {
            "type": "string",
            "nullable": true
          },
          "authorityGUID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LegalForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApplicationType": {
        "type": "object",
        "description": "Тип на приложението.",
        "properties": {
          "applicationTypeID": {
            "type": "integer",
            "description": "Идентификатор на типа на приложението.",
            "format": "int32",
            "nullable": true
          },
          "appType": {
            "type": "string",
            "description": "Тип на приложението.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Име на типа на приложението.",
            "nullable": true
          },
          "registerID": {
            "description": "Идентификатор на регистъра.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "appCode": {
            "type": "string",
            "description": "Код - абревиатура на заявлението на кирилица.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Път - url-адрес на заявлението.",
            "nullable": true
          }
        }
      },
      "DocumentType": {
        "type": "object",
        "description": "Тип на документа.",
        "properties": {
          "documentTypeID": {
            "type": "string",
            "description": "Идентификатор на типа на документа.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Име на типа на документа.",
            "nullable": true
          },
          "isRefusalAttachable": {
            "type": "boolean"
          },
          "parentID": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ApplicationDocumentType": {
        "type": "object",
        "description": "Данни за документи на вписване.",
        "properties": {
          "applicationTypeID": {
            "type": "string",
            "description": "Тип на заявление",
            "nullable": true
          },
          "documentTypeID": {
            "type": "string",
            "description": "Тип на приложения документ.",
            "nullable": true
          },
          "register": {
            "description": "Тип на регистъра",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "isScannedDocument": {
            "type": "boolean",
            "description": "Флаг, указващ дали документът е проверен.",
            "nullable": true
          },
          "isNew": {
            "type": "boolean",
            "description": "Флаг, указващ дали докумнетът на приложението е ново.",
            "nullable": true
          },
          "isForChange": {
            "type": "boolean",
            "description": "Флаг, указващ дали докумнетът на приложението е за промяна.",
            "nullable": true
          },
          "isForPreregistration": {
            "type": "boolean",
            "description": "Флаг, указващ дали докумнетът на приложението е за пререгистрация.",
            "nullable": true
          },
          "isPublicVisible": {
            "type": "boolean",
            "description": "Флаг, указващ дали докумнетът на приложението е видим.",
            "nullable": true
          },
          "minOccurs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxOccurs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentType": {
            "description": "Тип на документа.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentType"
              }
            ]
          },
          "documentName": {
            "type": "string",
            "description": "Име на документа",
            "nullable": true
          }
        }
      },
      "DocumentTemplateField": {
        "type": "object",
        "description": "Активно поле в шаблон на документ.",
        "properties": {
          "key": {
            "type": "string",
            "description": "Ключ на активно поле в шаблон.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Описание на активно поле в шаблон.",
            "nullable": true
          }
        }
      },
      "DocumentTemplate": {
        "type": "object",
        "description": "Шаблон за документи.",
        "properties": {
          "documentTemplateID": {
            "type": "integer",
            "description": "Идентификатор на шаблон за документ.",
            "format": "int32",
            "nullable": true
          },
          "documentTemplateVerID": {
            "type": "integer",
            "description": "Идентификатор на версията на шаблона за документ.",
            "format": "int32",
            "nullable": true
          },
          "documentTypeID": {
            "type": "string",
            "description": "Идентификатор на типа на документа.",
            "nullable": true
          }
        }
      },
      "ForeignLegalForm": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "isOther": {
            "type": "boolean"
          }
        }
      },
      "ForeignComRegister": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "nameOriginal": {
            "type": "string",
            "nullable": true
          },
          "nameEN": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "isOther": {
            "type": "boolean"
          }
        }
      },
      "ReleaseReason": {
        "type": "object",
        "properties": {
          "reasonID": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "expertTypeID": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Act": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SpecialAccessUserType": {
        "type": "object",
        "description": "Вид потребител със специален достъп.",
        "properties": {
          "userTypeId": {
            "type": "integer",
            "description": "Уникален идентификатор на вид потребител със специален достъп.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Име на вид потребител със специален достъп.",
            "nullable": true
          }
        }
      },
      "UserSubscriptionTypes": {
        "type": "integer",
        "description": "Типове на идентификатор на събития в регистри.\r\n1 = EGN_LNCH_UIC; 3 = UIC;",
        "format": "int32",
        "enum": [
          1,
          3
        ]
      },
      "User": {
        "type": "object",
        "description": "Потребител.",
        "properties": {
          "cin": {
            "type": "integer",
            "description": "Клиентски идентификационен номер.",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Електронна поща.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "Име на потребителя.",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "description": "Презиме на потребителя.",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "description": "Фамилия на потребителя.",
            "nullable": true
          }
        }
      },
      "UserSubscription": {
        "type": "object",
        "description": "Клас капсулиращ данни за aбонамент за събития в регистри.",
        "properties": {
          "userSubscriptionID": {
            "type": "string",
            "description": "Уникален идентификатор на aбонамент за събития в регистри.",
            "nullable": true
          },
          "userCIN": {
            "type": "integer",
            "description": "Клиентски идентификационене номер на потребителя абонирал се за събития в регистри.",
            "format": "int32",
            "nullable": true
          },
          "register": {
            "description": "Идентификатор на регистър.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "type": {
            "description": "Тип на идентификатор на събития в регистри.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSubscriptionTypes"
              }
            ]
          },
          "value": {
            "type": "string",
            "description": "Стойност на тип на партида/обект",
            "nullable": true
          },
          "user": {
            "description": "Потребителя абонирал се за събития в регистри.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        }
      },
      "UserSubscriptionsCreateRequest": {
        "type": "object",
        "description": "Заявка за абониране за събития",
        "properties": {
          "userCIN": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "register": {
            "description": "Идентификатор на регистър.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "type": {
            "description": "Тип на идентификатор на събития в регистри.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSubscriptionTypes"
              }
            ]
          },
          "values": {
            "type": "array",
            "description": "Стойност на тип на партида/обект",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserSubscriptionsDeleteRequest": {
        "type": "object",
        "description": "Заявка за изтриване на абонамент за събития",
        "properties": {
          "userCIN": {
            "type": "integer",
            "description": "Клиентски идентификационене номер на потребителя абонирал се за събития в регистри.",
            "format": "int32",
            "nullable": true
          },
          "userSubscriptionIDs": {
            "type": "array",
            "description": "Списък с уникален идентификатори на aбонамент за събития в регистри.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CREventTypes": {
        "type": "integer",
        "description": "Видове събития в ТР\r\n1 = Подадено е ново заявление; 2 = Промяна на статуса на заявление; 3 = Подадени са укажания по заявление; 4 = Ново вписване;",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "JsonValueKind": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "JsonElement": {
        "type": "object",
        "properties": {
          "valueKind": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonValueKind"
              }
            ],
            "readOnly": true
          }
        }
      },
      "CREventMessage": {
        "type": "object",
        "description": "Съобщение за събитие в ТР",
        "properties": {
          "eventID": {
            "type": "string",
            "description": "Идентификатор на събитие.",
            "nullable": true
          },
          "type": {
            "description": "Вид събитие в ТР.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CREventTypes"
              }
            ]
          },
          "eventDate": {
            "type": "string",
            "description": "Дата на събитието.",
            "format": "date-time"
          },
          "dataKey": {
            "type": "string",
            "description": "Ключ на данните.",
            "nullable": true
          },
          "data": {
            "description": "Данни.",
            "allOf": [
              {
                "$ref": "#/components/schemas/JsonElement"
              }
            ]
          }
        }
      },
      "SigningRequestStatuses": {
        "type": "integer",
        "description": "Статуси за процеса по подписване.\r\n1 = InProcess; 2 = Rejecting; 3 = Completing;",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ]
      },
      "SignerSigningStatuses": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "SigningChannels": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "SignerVM": {
        "type": "object",
        "description": "Данни за подписващ, необходими за UI-a.",
        "properties": {
          "signerID": {
            "type": "integer",
            "description": "Идентификатор на подписващ.",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Име на подписващ.",
            "nullable": true
          },
          "ident": {
            "type": "string",
            "description": "ЕГН/ЛНЧ на подписващ.",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "Ред за полагане на подпис.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "description": "Статус на полагане на подпис.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SignerSigningStatuses"
              }
            ]
          },
          "signingChannel": {
            "description": "Канал за подписване.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SigningChannels"
              }
            ]
          },
          "rejectReson": {
            "type": "string",
            "description": "Причина за отказ.",
            "nullable": true
          }
        }
      },
      "SigningProcessVM": {
        "type": "object",
        "description": "Данни за процес по подписване, необходими за UI-a.",
        "properties": {
          "processID": {
            "type": "string",
            "description": "Идентификатор на процес за подписване.",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "description": "Статус на процес за подписване.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SigningRequestStatuses"
              }
            ]
          },
          "signers": {
            "type": "array",
            "description": "Списък с подписващи към процеса.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SignerVM"
            }
          }
        }
      },
      "SigningFormats": {
        "type": "integer",
        "description": "Формати за е-подписа според файла за подписване.\r\n0 = CAdES; 1 = PAdES; 2 = XAdES; 3 = ASICS; 4 = ASICE;",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "SignerRequest": {
        "type": "object",
        "description": "Клас капсулиращ данни за подписващ участващ във процеса по подисване.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Име на подписващ.",
            "nullable": true
          },
          "ident": {
            "type": "string",
            "description": "Идентификатор на подписващ.",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "Ред на полагане на подписа.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SigningRequest": {
        "type": "object",
        "description": "Клас капсулиращ данни за заявка за създаване на процеса по подисване.",
        "properties": {
          "format": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SigningFormats"
              }
            ]
          },
          "fileName": {
            "type": "string",
            "description": "Име на файла за подписване.",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "description": "MIME тип на файла за подписване.",
            "nullable": true
          },
          "rejectedCallbackUrl": {
            "type": "string",
            "description": "Адрес за известяване при прекратен процес по подписване.",
            "nullable": true
          },
          "completedCallbackUrl": {
            "type": "string",
            "description": "Адрес за известяване при успешно завършен процес по подписване.",
            "nullable": true
          },
          "signerRequests": {
            "type": "array",
            "description": "Списък с заявки за подписващи към процеса.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SignerRequest"
            }
          }
        }
      },
      "TimestampTokenDto": {
        "type": "object",
        "properties": {
          "timestampTokenID": {
            "type": "string",
            "description": "Timestamp token id",
            "nullable": true
          },
          "timestampGenerationTime": {
            "type": "integer",
            "description": "Timestamp token time in miliseconds from 1970",
            "format": "int64",
            "nullable": true
          },
          "timestampType": {
            "type": "string",
            "description": "Timestamp type",
            "nullable": true
          },
          "timestampCertificateTokensIDs": {
            "type": "array",
            "description": "Timestamp certificate tokens ids",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "timestampCertificateTokensTrusted": {
            "type": "array",
            "description": "Timestamp certificate token trusted list",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "timestampCertificateDNs": {
            "type": "array",
            "description": "Timestamp issuers list",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "timestampBase64EncodedCertificates": {
            "type": "array",
            "description": "Timestamp certificates",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "timestampDigestAlgorithms": {
            "type": "array",
            "description": "Timestamp digest algorithms",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "timestampSignatureAlgorithms": {
            "type": "array",
            "description": "Timestamp signature algorithms",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RevocationTokenDto": {
        "type": "object",
        "properties": {
          "revocationReason": {
            "type": "string",
            "description": "Signer certificate revocation reason",
            "nullable": true
          },
          "revocationTime": {
            "type": "integer",
            "description": "Revocation time in miliseconds from 1970",
            "format": "int64",
            "nullable": true
          },
          "revocationTokenProductionTime": {
            "type": "integer",
            "description": "Revocation token production time in miliseconds from 1970",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SignatureDto": {
        "type": "object",
        "properties": {
          "signatureId": {
            "type": "string",
            "description": "Signature Id",
            "nullable": true
          },
          "signatureValid": {
            "type": "string",
            "description": "Signature valid",
            "nullable": true
          },
          "digestAlgorithm": {
            "type": "string",
            "description": "Digest algorithm",
            "nullable": true
          },
          "signatureAlgorithm": {
            "type": "string",
            "description": "Signature algorithm",
            "nullable": true
          },
          "signatureFileContentType": {
            "type": "string",
            "description": "Signature file content type",
            "nullable": true
          },
          "signatureForm": {
            "type": "string",
            "description": "Signature form",
            "nullable": true
          },
          "signatureLevel": {
            "type": "string",
            "description": "Signature level",
            "nullable": true
          },
          "signatureTime": {
            "type": "integer",
            "description": "Signature time in miliseconds from 1970",
            "format": "int64",
            "nullable": true
          },
          "signedBy": {
            "type": "string",
            "description": "Signed by",
            "nullable": true
          },
          "signerCertificateID": {
            "type": "string",
            "description": "Signer certificate ID",
            "nullable": true
          },
          "signerCertificateDN": {
            "type": "string",
            "description": "Signer Certificate DN",
            "nullable": true
          },
          "signerBase64EncodedCertificate": {
            "type": "string",
            "description": "Signer certificate",
            "nullable": true
          },
          "signerPersonalIdentifier": {
            "type": "string",
            "description": "Signer personal identifier",
            "nullable": true
          },
          "signerOrganizationIdentifier": {
            "type": "string",
            "description": "Signer organization identifier",
            "nullable": true
          },
          "signerCertificateSerialNumber": {
            "type": "string",
            "description": "Signer certificate serial number identifier",
            "nullable": true
          },
          "signerCertificateSignatureIsValid": {
            "type": "string",
            "description": "Signer certificate signature is valid",
            "nullable": true
          },
          "signerCertificateIsTrusted": {
            "type": "string",
            "description": "Signer certificate is trusted",
            "nullable": true
          },
          "signerCertificateSignatureAlgorithm": {
            "type": "string",
            "description": "Signer certificate signature algorithm",
            "nullable": true
          },
          "issuerCertificateDN": {
            "type": "string",
            "description": "Issuer certificate DN",
            "nullable": true
          },
          "issuerBase64EncodedCertificate": {
            "type": "string",
            "description": "Issuer certificate",
            "nullable": true
          },
          "timestampsDtos": {
            "type": "array",
            "description": "Timestamp detailed data",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TimestampTokenDto"
            }
          },
          "revocationTokenDtos": {
            "type": "array",
            "description": "Revocation detailed data",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RevocationTokenDto"
            }
          },
          "signatureInfosList": {
            "type": "array",
            "description": "Signature info list",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "signatureWarningsList": {
            "type": "array",
            "description": "Signature warning list",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "signatureErrorsList": {
            "type": "array",
            "description": "Signature error list",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ValidateDocumentResponseDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Internal code",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "nullable": true
          },
          "documentStatusValid": {
            "type": "string",
            "description": "Validated signed document status",
            "nullable": true
          },
          "signatureFileName": {
            "type": "string",
            "description": "Signature file name",
            "nullable": true
          },
          "signaturesCount": {
            "type": "integer",
            "description": "Number of signatures over the validating document",
            "format": "int32",
            "nullable": true
          },
          "validSignaturesCount": {
            "type": "integer",
            "description": "Number of valid signatures over the validating document",
            "format": "int32",
            "nullable": true
          },
          "validationDateTime": {
            "type": "integer",
            "description": "Validation time in miliseconds from 1970",
            "format": "int64",
            "nullable": true
          },
          "base64EncodedSimpleReportXML": {
            "type": "string",
            "description": "Base 64 encoded simple report XML",
            "nullable": true
          },
          "base64EncodedDetailedReportXML": {
            "type": "string",
            "description": "Base 64 encoded detailed report XML",
            "nullable": true
          },
          "base64EncodedETSIValidationReportXML": {
            "type": "string",
            "description": "Base 64 encoded ETSI validation report XML",
            "nullable": true
          },
          "signatures": {
            "type": "array",
            "description": "Single signature data",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SignatureDto"
            }
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "description": "Уникален идентификатор на профила в съответния регистър",
            "format": "int32",
            "nullable": true
          },
          "clientID": {
            "type": "integer",
            "description": "Клиентски номер на потребител в съответния регистър",
            "format": "int32",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Потребителското име на профила в съответния регистър",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "description": "Пълно име на профила в съответния регистър",
            "nullable": true
          },
          "еmail": {
            "type": "string",
            "description": "Еmail на профила в съответния регистър",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "Наличност по личната сметка на потребителя към момента на обединение",
            "format": "double",
            "nullable": true
          }
        }
      },
      "AccountMgrProcessStatuses": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "AccountMigrationProcess": {
        "type": "object",
        "description": "Процес по мигриране на потребителски профил",
        "properties": {
          "migrationProcessID": {
            "type": "integer",
            "description": "Уникален идентификатор на процес по мигриране на потребителски профил",
            "format": "int32",
            "nullable": true
          },
          "userCIN": {
            "type": "integer",
            "description": "КИН на профил в ЕПЗЕУ",
            "format": "int32",
            "nullable": true
          },
          "register": {
            "description": "Идентификатор на регистър: 1 - Търговски регистър (CR), 2 - Имотен регистър (PR)",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          },
          "migrantUsername": {
            "type": "string",
            "description": "Потребителското име на профила в съответния регистър",
            "nullable": true
          },
          "migrantUserID": {
            "type": "integer",
            "description": "Уникален идентификатор на профила в съответния регистър",
            "format": "int32",
            "nullable": true
          },
          "migrantClientID": {
            "type": "integer",
            "description": "Клиентски номер на потребител в съответния регистър",
            "format": "int32",
            "nullable": true
          },
          "migrantAmount": {
            "type": "number",
            "description": "Наличност по личната сметка на потребителя към момента на обединение",
            "format": "double",
            "nullable": true
          },
          "status": {
            "description": "Статус на процеса по миграция",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountMgrProcessStatuses"
              }
            ]
          },
          "migrationData": {
            "type": "string",
            "description": "Системното време на последна промяна на статуса на миграцията",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "StartMigrationProcessRequest": {
        "type": "object",
        "properties": {
          "migrantUsername": {
            "type": "string",
            "nullable": true
          },
          "migrantPassword": {
            "type": "string",
            "nullable": true
          },
          "register": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Registers"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://localhost/epzeu.web.identityserver/connect/authorize",
            "tokenUrl": "https://localhost/epzeu.web.identityserver/connect/token",
            "scopes": {
              "epzeu.api": "epzeu.api"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ]
}